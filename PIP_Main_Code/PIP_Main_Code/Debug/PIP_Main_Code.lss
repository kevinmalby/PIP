
PIP_Main_Code.elf:     file format elf32-avr32

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .reset        00002004  80000000  80000000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rela.got     00000000  80002004  80002004  00002404  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00006a1a  80002004  80002004  00002404  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .exception    00000200  80008c00  80008c00  00009000  2**9
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .rodata       00000bcc  80008e00  80008e00  00009200  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dalign       00000004  800099cc  800099cc  00009dcc  2**0
                  ALLOC
  6 .data         00000510  00000004  800099d0  0000a004  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .balign       00000004  00000514  80009ee0  0000a514  2**0
                  ALLOC
  8 .bss          00000130  00000518  80009ee0  0000a518  2**2
                  ALLOC
  9 .comment      00000030  00000000  00000000  0000a514  2**0
                  CONTENTS, READONLY
 10 .debug_aranges 00000c40  00000000  00000000  0000a544  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubnames 0000188a  00000000  00000000  0000b184  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_info   0001b66a  00000000  00000000  0000ca0e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00004f79  00000000  00000000  00028078  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000d387  00000000  00000000  0002cff1  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001f00  00000000  00000000  0003a378  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    0000417a  00000000  00000000  0003c278  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc    00009e3e  00000000  00000000  000403f2  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_macinfo 00825c41  00000000  00000000  0004a230  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .stack        00001000  0000f000  0000f000  00000400  2**0
                  ALLOC
 20 .debug_ranges 00000ff0  00000000  00000000  0086fe71  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .reset:

80000000 <_trampoline>:
80000000:	e0 8f 10 00 	bral	80002000 <program_start>
	...

80002000 <program_start>:
80002000:	fe cf fc 58 	sub	pc,pc,-936

Disassembly of section .text:

80002004 <sdramc_ck_delay>:
 * \param ck Number of HSB clock cycles to wait.
 */
static void sdramc_ck_delay(unsigned long ck)
{
  // Use the CPU cycle counter (CPU and HSB clocks are the same).
  unsigned long delay_start_cycle = Get_system_register(AVR32_COUNT);
80002004:	e1 b8 00 42 	mfsr	r8,0x108
  unsigned long delay_end_cycle = delay_start_cycle + ck;
80002008:	f0 0c 00 0c 	add	r12,r8,r12

  // To be safer, the end of wait is based on an inequality test, so CPU cycle
  // counter wrap around is checked.
  if (delay_start_cycle > delay_end_cycle)
8000200c:	18 38       	cp.w	r8,r12
8000200e:	e0 88 00 06 	brls	8000201a <sdramc_ck_delay+0x16>
  {
    while ((unsigned long)Get_system_register(AVR32_COUNT) > delay_end_cycle);
80002012:	e1 b8 00 42 	mfsr	r8,0x108
80002016:	10 3c       	cp.w	r12,r8
80002018:	cf d3       	brcs	80002012 <sdramc_ck_delay+0xe>
  }
  while ((unsigned long)Get_system_register(AVR32_COUNT) < delay_end_cycle);
8000201a:	e1 b8 00 42 	mfsr	r8,0x108
8000201e:	10 3c       	cp.w	r12,r8
80002020:	fe 9b ff fd 	brhi	8000201a <sdramc_ck_delay+0x16>
}
80002024:	5e fc       	retal	r12
80002026:	d7 03       	nop

80002028 <sdramc_init>:
  gpio_enable_module(SDRAMC_EBI_GPIO_MAP, sizeof(SDRAMC_EBI_GPIO_MAP) / sizeof(SDRAMC_EBI_GPIO_MAP[0]));
}
#endif

void sdramc_init(unsigned long hsb_hz)
{
80002028:	d4 31       	pushm	r0-r7,lr
8000202a:	20 2d       	sub	sp,8
8000202c:	18 91       	mov	r1,r12
  unsigned long hsb_mhz_dn = hsb_hz / 1000000;
  unsigned long hsb_mhz_up = (hsb_hz + 999999) / 1000000;
8000202e:	ee 7b 42 3f 	mov	r11,999999
80002032:	f8 0b 00 09 	add	r9,r12,r11
80002036:	e0 60 de 83 	mov	r0,56963
8000203a:	ea 10 43 1b 	orh	r0,0x431b
8000203e:	f2 00 06 48 	mulu.d	r8,r9,r0
80002042:	f2 06 16 12 	lsr	r6,r9,0x12
    // Enable clock-related pins.
    {AVR32_EBI_SDCK_0_PIN,            AVR32_EBI_SDCK_0_FUNCTION           },
    {AVR32_EBI_SDCKE_0_PIN,           AVR32_EBI_SDCKE_0_FUNCTION          }
  };

  gpio_enable_module(SDRAMC_EBI_GPIO_MAP, sizeof(SDRAMC_EBI_GPIO_MAP) / sizeof(SDRAMC_EBI_GPIO_MAP[0]));
80002046:	32 7b       	mov	r11,39
80002048:	4d 0c       	lddpc	r12,80002188 <sdramc_init+0x160>
8000204a:	f0 1f 00 51 	mcall	8000218c <sdramc_init+0x164>
  // Put the multiplexed MCU pins used for the SDRAM under control of the SDRAMC.
  sdramc_enable_muxed_pins();

  // Enable SDRAM mode for CS1.
#if (defined AVR32_HMATRIX)
  AVR32_HMATRIX.sfr[AVR32_EBI_HMATRIX_NR] |= 1 << AVR32_EBI_SDRAM_CS;
8000204e:	fe 68 10 00 	mov	r8,-126976
80002052:	f0 f9 01 24 	ld.w	r9,r8[292]
80002056:	a1 b9       	sbr	r9,0x1
80002058:	f1 49 01 24 	st.w	r8[292],r9
  AVR32_HMATRIX.sfr[AVR32_EBI_HMATRIX_NR];
8000205c:	f0 f8 01 24 	ld.w	r8,r8[292]
      ((( SDRAM_BANK_BITS                -    1) << AVR32_SDRAMC_CR_NB_OFFSET  ) & AVR32_SDRAMC_CR_NB_MASK  ) |
      ((  SDRAM_CAS                              << AVR32_SDRAMC_CR_CAS_OFFSET ) & AVR32_SDRAMC_CR_CAS_MASK ) |
      ((( SDRAM_DBW                      >>   4) << AVR32_SDRAMC_CR_DBW_OFFSET ) & AVR32_SDRAMC_CR_DBW_MASK ) |
      ((((SDRAM_TWR  * hsb_mhz_up + 999) / 1000) << AVR32_SDRAMC_CR_TWR_OFFSET ) & AVR32_SDRAMC_CR_TWR_MASK ) |
      ((((SDRAM_TRC  * hsb_mhz_up + 999) / 1000) << AVR32_SDRAMC_CR_TRC_OFFSET ) & AVR32_SDRAMC_CR_TRC_MASK ) |
      ((((SDRAM_TRP  * hsb_mhz_up + 999) / 1000) << AVR32_SDRAMC_CR_TRP_OFFSET ) & AVR32_SDRAMC_CR_TRP_MASK ) |
80002060:	ec 09 15 04 	lsl	r9,r6,0x4
80002064:	0c 19       	sub	r9,r6
80002066:	f2 c3 fc 19 	sub	r3,r9,-999
8000206a:	e0 65 4d d3 	mov	r5,19923
8000206e:	ea 15 10 62 	orh	r5,0x1062
80002072:	e6 05 06 42 	mulu.d	r2,r3,r5
80002076:	a7 83       	lsr	r3,0x6
#endif

  // Configure the SDRAM Controller with SDRAM setup and timing information.
  // All timings below are rounded up because they are minimal values.
  AVR32_SDRAMC.cr =
      ((( SDRAM_COL_BITS                 -    8) << AVR32_SDRAMC_CR_NC_OFFSET  ) & AVR32_SDRAMC_CR_NC_MASK  ) |
80002078:	ec 02 15 05 	lsl	r2,r6,0x5
8000207c:	0c 02       	add	r2,r6
8000207e:	a1 72       	lsl	r2,0x1
80002080:	e4 06 00 0b 	add	r11,r2,r6
80002084:	f6 cb fc 19 	sub	r11,r11,-999
80002088:	f6 05 06 4a 	mulu.d	r10,r11,r5
8000208c:	a7 8b       	lsr	r11,0x6
8000208e:	bd 6b       	lsl	r11,0x1c
80002090:	16 9c       	mov	r12,r11
80002092:	e8 1c 00 d9 	orl	r12,0xd9
80002096:	ec 08 15 03 	lsl	r8,r6,0x3
8000209a:	f0 06 01 0a 	sub	r10,r8,r6
8000209e:	a1 7a       	lsl	r10,0x1
800020a0:	f4 c7 fc 19 	sub	r7,r10,-999
800020a4:	ee 05 06 4a 	mulu.d	r10,r7,r5
800020a8:	fa eb 00 00 	st.d	sp[0],r10
800020ac:	40 0a       	lddsp	r10,sp[0x0]
800020ae:	a3 6a       	lsl	r10,0x2
800020b0:	e2 1a 0f 00 	andl	r10,0xf00,COH
800020b4:	14 4c       	or	r12,r10
800020b6:	a3 69       	lsl	r9,0x2
800020b8:	f2 c9 fc 19 	sub	r9,r9,-999
800020bc:	f2 05 06 4a 	mulu.d	r10,r9,r5
800020c0:	fa eb 00 00 	st.d	sp[0],r10
800020c4:	40 09       	lddsp	r9,sp[0x0]
800020c6:	a7 69       	lsl	r9,0x6
800020c8:	e2 19 f0 00 	andl	r9,0xf000,COH
800020cc:	f9 e9 10 0a 	or	r10,r12,r9
800020d0:	e6 09 15 10 	lsl	r9,r3,0x10
800020d4:	e6 19 00 0f 	andh	r9,0xf,COH
800020d8:	12 4a       	or	r10,r9
800020da:	e6 09 15 14 	lsl	r9,r3,0x14
800020de:	e6 19 00 f0 	andh	r9,0xf0,COH
800020e2:	12 4a       	or	r10,r9
800020e4:	f0 06 00 09 	add	r9,r8,r6
800020e8:	ec 09 00 29 	add	r9,r6,r9<<0x2
800020ec:	f2 c9 fc 19 	sub	r9,r9,-999
800020f0:	f2 05 06 48 	mulu.d	r8,r9,r5
800020f4:	b3 69       	lsl	r9,0x12
800020f6:	e6 19 0f 00 	andh	r9,0xf00,COH
800020fa:	f5 e9 10 08 	or	r8,r10,r9
  AVR32_HMATRIXB.sfr[AVR32_EBI_HMATRIX_NR];
#endif

  // Configure the SDRAM Controller with SDRAM setup and timing information.
  // All timings below are rounded up because they are minimal values.
  AVR32_SDRAMC.cr =
800020fe:	fe 67 20 00 	mov	r7,-122880
80002102:	8f 28       	st.w	r7[0x8],r8
      ((((SDRAM_TRC  * hsb_mhz_up + 999) / 1000) << AVR32_SDRAMC_CR_TRC_OFFSET ) & AVR32_SDRAMC_CR_TRC_MASK ) |
      ((((SDRAM_TRP  * hsb_mhz_up + 999) / 1000) << AVR32_SDRAMC_CR_TRP_OFFSET ) & AVR32_SDRAMC_CR_TRP_MASK ) |
      ((((SDRAM_TRCD * hsb_mhz_up + 999) / 1000) << AVR32_SDRAMC_CR_TRCD_OFFSET) & AVR32_SDRAMC_CR_TRCD_MASK) |
      ((((SDRAM_TRAS * hsb_mhz_up + 999) / 1000) << AVR32_SDRAMC_CR_TRAS_OFFSET) & AVR32_SDRAMC_CR_TRAS_MASK) |
      ((((SDRAM_TXSR * hsb_mhz_up + 999) / 1000) << AVR32_SDRAMC_CR_TXSR_OFFSET) & AVR32_SDRAMC_CR_TXSR_MASK);
  AVR32_SDRAMC.cr;
80002104:	6e 28       	ld.w	r8,r7[0x8]

  // Issue a NOP command to the SDRAM in order to start the generation of SDRAMC signals.
  AVR32_SDRAMC.mr = AVR32_SDRAMC_MR_MODE_NOP;
80002106:	30 18       	mov	r8,1
80002108:	8f 08       	st.w	r7[0x0],r8
  AVR32_SDRAMC.mr;
8000210a:	6e 08       	ld.w	r8,r7[0x0]
  sdram[0];
8000210c:	fc 14 d0 00 	movh	r4,0xd000
80002110:	88 08       	ld.sh	r8,r4[0x0]

  // Wait during the SDRAM stable-clock initialization delay.
  sdramc_us_delay(SDRAM_STABLE_CLOCK_INIT_DELAY, hsb_mhz_up);
80002112:	ec 0c 10 64 	mul	r12,r6,100
80002116:	f0 1f 00 1f 	mcall	80002190 <sdramc_init+0x168>

  // Issue a PRECHARGE ALL command to the SDRAM.
  AVR32_SDRAMC.mr = AVR32_SDRAMC_MR_MODE_BANKS_PRECHARGE;
8000211a:	30 28       	mov	r8,2
8000211c:	8f 08       	st.w	r7[0x0],r8
  AVR32_SDRAMC.mr;
8000211e:	6e 08       	ld.w	r8,r7[0x0]
  sdram[0];
80002120:	88 08       	ld.sh	r8,r4[0x0]
  sdramc_ns_delay(SDRAM_TRP, hsb_mhz_up);
80002122:	06 9c       	mov	r12,r3
80002124:	f0 1f 00 1b 	mcall	80002190 <sdramc_init+0x168>

  // Issue initialization AUTO REFRESH commands to the SDRAM.
  AVR32_SDRAMC.mr = AVR32_SDRAMC_MR_MODE_AUTO_REFRESH;
80002128:	30 48       	mov	r8,4
8000212a:	8f 08       	st.w	r7[0x0],r8
  AVR32_SDRAMC.mr;
8000212c:	6e 08       	ld.w	r8,r7[0x0]
  for (i = 0; i < SDRAM_INIT_AUTO_REFRESH_COUNT; i++)
  {
    sdram[0];
    sdramc_ns_delay(SDRAM_TRFC, hsb_mhz_up);
8000212e:	e4 c3 fc 19 	sub	r3,r2,-999
80002132:	e6 05 06 42 	mulu.d	r2,r3,r5
80002136:	a7 83       	lsr	r3,0x6
  // Issue initialization AUTO REFRESH commands to the SDRAM.
  AVR32_SDRAMC.mr = AVR32_SDRAMC_MR_MODE_AUTO_REFRESH;
  AVR32_SDRAMC.mr;
  for (i = 0; i < SDRAM_INIT_AUTO_REFRESH_COUNT; i++)
  {
    sdram[0];
80002138:	88 08       	ld.sh	r8,r4[0x0]
    sdramc_ns_delay(SDRAM_TRFC, hsb_mhz_up);
8000213a:	06 9c       	mov	r12,r3
8000213c:	f0 1f 00 15 	mcall	80002190 <sdramc_init+0x168>
  // Issue initialization AUTO REFRESH commands to the SDRAM.
  AVR32_SDRAMC.mr = AVR32_SDRAMC_MR_MODE_AUTO_REFRESH;
  AVR32_SDRAMC.mr;
  for (i = 0; i < SDRAM_INIT_AUTO_REFRESH_COUNT; i++)
  {
    sdram[0];
80002140:	88 08       	ld.sh	r8,r4[0x0]
    sdramc_ns_delay(SDRAM_TRFC, hsb_mhz_up);
80002142:	06 9c       	mov	r12,r3
80002144:	f0 1f 00 13 	mcall	80002190 <sdramc_init+0x168>
  //  - bit 3: burst type: sequential (0b);
  //  - bits 4 to 6: CAS latency: AVR32_SDRAMC.CR.cas;
  //  - bits 7 to 8: operating mode: standard operation (00b);
  //  - bit 9: write burst mode: programmed burst length (0b);
  //  - all other bits: reserved: 0b.
  AVR32_SDRAMC.mr = AVR32_SDRAMC_MR_MODE_LOAD_MODE;
80002148:	30 38       	mov	r8,3
8000214a:	8f 08       	st.w	r7[0x0],r8
  AVR32_SDRAMC.mr;
8000214c:	6e 08       	ld.w	r8,r7[0x0]
  sdram[0];
8000214e:	88 08       	ld.sh	r8,r4[0x0]
  sdramc_ns_delay(SDRAM_TMRD, hsb_mhz_up);
80002150:	ec 09 15 01 	lsl	r9,r6,0x1
80002154:	f2 c9 fc 19 	sub	r9,r9,-999
80002158:	f2 05 06 48 	mulu.d	r8,r9,r5
8000215c:	f2 0c 16 06 	lsr	r12,r9,0x6
80002160:	f0 1f 00 0c 	mcall	80002190 <sdramc_init+0x168>

  // Switch the SDRAM Controller to normal mode.
  AVR32_SDRAMC.mr = AVR32_SDRAMC_MR_MODE_NORMAL;
80002164:	30 08       	mov	r8,0
80002166:	8f 08       	st.w	r7[0x0],r8
  AVR32_SDRAMC.mr;
80002168:	6e 08       	ld.w	r8,r7[0x0]
  sdram[0];
8000216a:	88 08       	ld.sh	r8,r4[0x0]

  // Write the refresh period into the SDRAMC Refresh Timer Register.
  // tR is rounded down because it is a maximal value.
  AVR32_SDRAMC.tr = (SDRAM_TR * hsb_mhz_dn) / 1000;
8000216c:	e2 00 06 40 	mulu.d	r0,r1,r0
80002170:	b3 81       	lsr	r1,0x12
80002172:	e0 68 1e 84 	mov	r8,7812
80002176:	b1 31       	mul	r1,r8
80002178:	e2 05 06 44 	mulu.d	r4,r1,r5
8000217c:	a7 85       	lsr	r5,0x6
8000217e:	8f 15       	st.w	r7[0x4],r5
  AVR32_SDRAMC.tr;
80002180:	6e 18       	ld.w	r8,r7[0x4]
}
80002182:	2f ed       	sub	sp,-8
80002184:	d8 32       	popm	r0-r7,pc
80002186:	00 00       	add	r0,r0
80002188:	80 00       	ld.sh	r0,r0[0x0]
8000218a:	8e 00       	ld.sh	r0,r7[0x0]
8000218c:	80 00       	ld.sh	r0,r0[0x0]
8000218e:	22 1c       	sub	r12,33
80002190:	80 00       	ld.sh	r0,r0[0x0]
80002192:	20 04       	sub	r4,0

80002194 <flashc_set_wait_state>:
}


void flashc_set_wait_state(unsigned int wait_state)
{
	u_avr32_flashc_fcr_t u_avr32_flashc_fcr = {AVR32_FLASHC.fcr};
80002194:	fe 68 14 00 	mov	r8,-125952
80002198:	70 09       	ld.w	r9,r8[0x0]
	u_avr32_flashc_fcr.FCR.fws = wait_state;
8000219a:	f3 dc d0 c1 	bfins	r9,r12,0x6,0x1
	AVR32_FLASHC.fcr = u_avr32_flashc_fcr.fcr;
8000219e:	91 09       	st.w	r8[0x0],r9
}
800021a0:	5e fc       	retal	r12
800021a2:	d7 03       	nop

800021a4 <flashc_set_bus_freq>:


void flashc_set_bus_freq(unsigned int cpu_f_hz)
{
800021a4:	d4 01       	pushm	lr
	if (cpu_f_hz >= AVR32_FLASHC_FWS_0_MAX_FREQ) {
800021a6:	e0 68 8a 3f 	mov	r8,35391
800021aa:	ea 18 01 f7 	orh	r8,0x1f7
800021ae:	10 3c       	cp.w	r12,r8
800021b0:	e0 88 00 06 	brls	800021bc <flashc_set_bus_freq+0x18>
		// Set 1 WS.
		flashc_set_wait_state(1);
800021b4:	30 1c       	mov	r12,1
800021b6:	f0 1f 00 04 	mcall	800021c4 <flashc_set_bus_freq+0x20>
800021ba:	d8 02       	popm	pc
	} else {
		// Set 0 WS.
		flashc_set_wait_state(0);
800021bc:	30 0c       	mov	r12,0
800021be:	f0 1f 00 02 	mcall	800021c4 <flashc_set_bus_freq+0x20>
800021c2:	d8 02       	popm	pc
800021c4:	80 00       	ld.sh	r0,r0[0x0]
800021c6:	21 94       	sub	r4,25

800021c8 <gpio_enable_module_pin>:
}


int gpio_enable_module_pin(uint32_t pin, uint32_t function)
{
  volatile avr32_gpio_port_t *gpio_port = &GPIO.port[pin >> 5];
800021c8:	f8 08 16 05 	lsr	r8,r12,0x5
800021cc:	a9 68       	lsl	r8,0x8
800021ce:	e0 28 f0 00 	sub	r8,61440

  // Enable the correct function.
  switch (function)
800021d2:	58 1b       	cp.w	r11,1
800021d4:	c0 d0       	breq	800021ee <gpio_enable_module_pin+0x26>
800021d6:	c0 63       	brcs	800021e2 <gpio_enable_module_pin+0x1a>
800021d8:	58 2b       	cp.w	r11,2
800021da:	c1 00       	breq	800021fa <gpio_enable_module_pin+0x32>
800021dc:	58 3b       	cp.w	r11,3
800021de:	c1 40       	breq	80002206 <gpio_enable_module_pin+0x3e>
800021e0:	5e ff       	retal	1
  {
  case 0: // A function.
    gpio_port->pmr0c = 1 << (pin & 0x1F);
800021e2:	30 19       	mov	r9,1
800021e4:	f2 0c 09 49 	lsl	r9,r9,r12
800021e8:	91 69       	st.w	r8[0x18],r9
    gpio_port->pmr1c = 1 << (pin & 0x1F);
800021ea:	91 a9       	st.w	r8[0x28],r9
#if (AVR32_GPIO_H_VERSION >= 210)
    gpio_port->pmr2c = 1 << (pin & 0x1F);
#endif
    break;
800021ec:	c1 28       	rjmp	80002210 <gpio_enable_module_pin+0x48>

  case 1: // B function.
    gpio_port->pmr0s = 1 << (pin & 0x1F);
800021ee:	30 19       	mov	r9,1
800021f0:	f2 0c 09 49 	lsl	r9,r9,r12
800021f4:	91 59       	st.w	r8[0x14],r9
    gpio_port->pmr1c = 1 << (pin & 0x1F);
800021f6:	91 a9       	st.w	r8[0x28],r9
#if (AVR32_GPIO_H_VERSION >= 210)
    gpio_port->pmr2c = 1 << (pin & 0x1F);
#endif
    break;
800021f8:	c0 c8       	rjmp	80002210 <gpio_enable_module_pin+0x48>

  case 2: // C function.
    gpio_port->pmr0c = 1 << (pin & 0x1F);
800021fa:	30 19       	mov	r9,1
800021fc:	f2 0c 09 49 	lsl	r9,r9,r12
80002200:	91 69       	st.w	r8[0x18],r9
    gpio_port->pmr1s = 1 << (pin & 0x1F);
80002202:	91 99       	st.w	r8[0x24],r9
#if (AVR32_GPIO_H_VERSION >= 210)
    gpio_port->pmr2c = 1 << (pin & 0x1F);
#endif
    break;
80002204:	c0 68       	rjmp	80002210 <gpio_enable_module_pin+0x48>

  case 3: // D function.
    gpio_port->pmr0s = 1 << (pin & 0x1F);
80002206:	30 19       	mov	r9,1
80002208:	f2 0c 09 49 	lsl	r9,r9,r12
8000220c:	91 59       	st.w	r8[0x14],r9
    gpio_port->pmr1s = 1 << (pin & 0x1F);
8000220e:	91 99       	st.w	r8[0x24],r9
  default:
    return GPIO_INVALID_ARGUMENT;
  }

  // Disable GPIO control.
  gpio_port->gperc = 1 << (pin & 0x1F);
80002210:	30 19       	mov	r9,1
80002212:	f2 0c 09 4c 	lsl	r12,r9,r12
80002216:	91 2c       	st.w	r8[0x8],r12
80002218:	5e fd       	retal	0
8000221a:	d7 03       	nop

8000221c <gpio_enable_module>:
 */
//! @{


int gpio_enable_module(const gpio_map_t gpiomap, uint32_t size)
{
8000221c:	d4 21       	pushm	r4-r7,lr
8000221e:	18 97       	mov	r7,r12
80002220:	16 94       	mov	r4,r11
  int status = GPIO_SUCCESS;
  uint32_t i;

  for (i = 0; i < size; i++)
80002222:	58 0b       	cp.w	r11,0
80002224:	c0 31       	brne	8000222a <gpio_enable_module+0xe>
80002226:	30 05       	mov	r5,0
80002228:	c0 d8       	rjmp	80002242 <gpio_enable_module+0x26>
8000222a:	30 06       	mov	r6,0
8000222c:	0c 95       	mov	r5,r6
  {
    status |= gpio_enable_module_pin(gpiomap->pin, gpiomap->function);
8000222e:	0f 9b       	ld.ub	r11,r7[0x1]
80002230:	0f 8c       	ld.ub	r12,r7[0x0]
80002232:	f0 1f 00 06 	mcall	80002248 <gpio_enable_module+0x2c>
80002236:	18 45       	or	r5,r12
    gpiomap++;
80002238:	2f e7       	sub	r7,-2
int gpio_enable_module(const gpio_map_t gpiomap, uint32_t size)
{
  int status = GPIO_SUCCESS;
  uint32_t i;

  for (i = 0; i < size; i++)
8000223a:	2f f6       	sub	r6,-1
8000223c:	0c 34       	cp.w	r4,r6
8000223e:	fe 9b ff f8 	brhi	8000222e <gpio_enable_module+0x12>
    status |= gpio_enable_module_pin(gpiomap->pin, gpiomap->function);
    gpiomap++;
  }

  return status;
}
80002242:	0a 9c       	mov	r12,r5
80002244:	d8 22       	popm	r4-r7,pc
80002246:	00 00       	add	r0,r0
80002248:	80 00       	ld.sh	r0,r0[0x0]
8000224a:	21 c8       	sub	r8,28

8000224c <gpio_configure_pin>:

#endif

void gpio_configure_pin(uint32_t pin, uint32_t flags)
{
  volatile avr32_gpio_port_t *gpio_port = &GPIO.port[pin >> 5];
8000224c:	f8 08 16 05 	lsr	r8,r12,0x5
80002250:	a9 68       	lsl	r8,0x8
80002252:	e0 28 f0 00 	sub	r8,61440
    if (flags & GPIO_PULL_DOWN)
            gpio_port->pders = 1 << (pin & 0x1F);
    else
            gpio_port->pderc = 1 << (pin & 0x1F);
#endif
    if (flags & GPIO_PULL_UP)
80002256:	16 99       	mov	r9,r11
80002258:	e2 19 00 04 	andl	r9,0x4,COH
8000225c:	c0 70       	breq	8000226a <gpio_configure_pin+0x1e>
            gpio_port->puers = 1 << (pin & 0x1F);
8000225e:	30 19       	mov	r9,1
80002260:	f2 0c 09 49 	lsl	r9,r9,r12
80002264:	f1 49 00 74 	st.w	r8[116],r9
80002268:	c0 68       	rjmp	80002274 <gpio_configure_pin+0x28>
    else
            gpio_port->puerc = 1 << (pin & 0x1F);
8000226a:	30 19       	mov	r9,1
8000226c:	f2 0c 09 49 	lsl	r9,r9,r12
80002270:	f1 49 00 78 	st.w	r8[120],r9
            else
                    gpio_port->odcr1c = 1 << (pin & 0x1F);
#endif

    /* Select interrupt level for group */
    if (flags & GPIO_INTERRUPT) {
80002274:	16 99       	mov	r9,r11
80002276:	e2 19 00 80 	andl	r9,0x80,COH
8000227a:	c2 40       	breq	800022c2 <gpio_configure_pin+0x76>
            if (flags & GPIO_BOTHEDGES)
8000227c:	16 99       	mov	r9,r11
8000227e:	e2 19 01 80 	andl	r9,0x180,COH
80002282:	c0 90       	breq	80002294 <gpio_configure_pin+0x48>
            {
                   gpio_port->imr0c = 1 << (pin & 0x1F);
80002284:	30 19       	mov	r9,1
80002286:	f2 0c 09 49 	lsl	r9,r9,r12
8000228a:	f1 49 00 a8 	st.w	r8[168],r9
                   gpio_port->imr1c = 1 << (pin & 0x1F);
8000228e:	f1 49 00 b8 	st.w	r8[184],r9
80002292:	c1 88       	rjmp	800022c2 <gpio_configure_pin+0x76>
            }
            else if (flags & GPIO_RISING)
80002294:	16 99       	mov	r9,r11
80002296:	e2 19 02 80 	andl	r9,0x280,COH
8000229a:	c0 90       	breq	800022ac <gpio_configure_pin+0x60>
            {
                   gpio_port->imr0s = 1 << (pin & 0x1F);
8000229c:	30 19       	mov	r9,1
8000229e:	f2 0c 09 49 	lsl	r9,r9,r12
800022a2:	f1 49 00 a4 	st.w	r8[164],r9
                   gpio_port->imr1c = 1 << (pin & 0x1F);
800022a6:	f1 49 00 b8 	st.w	r8[184],r9
800022aa:	c0 c8       	rjmp	800022c2 <gpio_configure_pin+0x76>
            }
            else if (flags & GPIO_FALLING)
800022ac:	16 99       	mov	r9,r11
800022ae:	e2 19 03 80 	andl	r9,0x380,COH
800022b2:	c0 80       	breq	800022c2 <gpio_configure_pin+0x76>
            {
                   gpio_port->imr0c = 1 << (pin & 0x1F);
800022b4:	30 19       	mov	r9,1
800022b6:	f2 0c 09 49 	lsl	r9,r9,r12
800022ba:	f1 49 00 a8 	st.w	r8[168],r9
                   gpio_port->imr1s = 1 << (pin & 0x1F);
800022be:	f1 49 00 b4 	st.w	r8[180],r9
            }
    }

    /* Select direction and initial pin state */
    if (flags & GPIO_DIR_OUTPUT) {
800022c2:	f3 db c0 01 	bfextu	r9,r11,0x0,0x1
800022c6:	c1 50       	breq	800022f0 <gpio_configure_pin+0xa4>
            if (flags & GPIO_INIT_HIGH)
800022c8:	e2 1b 00 02 	andl	r11,0x2,COH
800022cc:	c0 70       	breq	800022da <gpio_configure_pin+0x8e>
                    gpio_port->ovrs = 1 << (pin & 0x1F);
800022ce:	30 19       	mov	r9,1
800022d0:	f2 0c 09 49 	lsl	r9,r9,r12
800022d4:	f1 49 00 54 	st.w	r8[84],r9
800022d8:	c0 68       	rjmp	800022e4 <gpio_configure_pin+0x98>
            else
                    gpio_port->ovrc = 1 << (pin & 0x1F);
800022da:	30 19       	mov	r9,1
800022dc:	f2 0c 09 49 	lsl	r9,r9,r12
800022e0:	f1 49 00 58 	st.w	r8[88],r9
            gpio_port->oders = 1 << (pin & 0x1F);
800022e4:	30 19       	mov	r9,1
800022e6:	f2 0c 09 49 	lsl	r9,r9,r12
800022ea:	f1 49 00 44 	st.w	r8[68],r9
800022ee:	c0 68       	rjmp	800022fa <gpio_configure_pin+0xae>
    } else {
            gpio_port->oderc = 1 << (pin & 0x1F);
800022f0:	30 19       	mov	r9,1
800022f2:	f2 0c 09 49 	lsl	r9,r9,r12
800022f6:	f1 49 00 48 	st.w	r8[72],r9
    }

    /* Enable GPIO */
    gpio_port->gpers = 1 << (pin & 0x1F);
800022fa:	30 19       	mov	r9,1
800022fc:	f2 0c 09 4c 	lsl	r12,r9,r12
80002300:	91 1c       	st.w	r8[0x4],r12
}
80002302:	5e fc       	retal	r12

80002304 <gpio_get_pin_value>:
    gpio_port->gpers = mask;
}

int gpio_get_pin_value(uint32_t pin)
{
  volatile avr32_gpio_port_t *gpio_port = &GPIO.port[pin >> 5];
80002304:	f8 08 16 05 	lsr	r8,r12,0x5
80002308:	a9 68       	lsl	r8,0x8
8000230a:	e0 28 f0 00 	sub	r8,61440
  return (gpio_port->pvr >> (pin & 0x1F)) & 1;
8000230e:	71 88       	ld.w	r8,r8[0x60]
80002310:	f0 0c 0a 4c 	lsr	r12,r8,r12
}
80002314:	f9 dc c0 01 	bfextu	r12,r12,0x0,0x1
80002318:	5e fc       	retal	r12

8000231a <gpio_set_gpio_pin>:
}


void gpio_set_gpio_pin(uint32_t pin)
{
  volatile avr32_gpio_port_t *gpio_port = &GPIO.port[pin >> 5];
8000231a:	f8 08 16 05 	lsr	r8,r12,0x5
8000231e:	a9 68       	lsl	r8,0x8
80002320:	e0 28 f0 00 	sub	r8,61440
  gpio_port->ovrs  = 1 << (pin & 0x1F); // Value to be driven on the I/O line: 1.
80002324:	30 19       	mov	r9,1
80002326:	f2 0c 09 4c 	lsl	r12,r9,r12
8000232a:	f1 4c 00 54 	st.w	r8[84],r12
  gpio_port->oders = 1 << (pin & 0x1F); // The GPIO output driver is enabled for that pin.
8000232e:	f1 4c 00 44 	st.w	r8[68],r12
  gpio_port->gpers = 1 << (pin & 0x1F); // The GPIO module controls that pin.
80002332:	91 1c       	st.w	r8[0x4],r12
}
80002334:	5e fc       	retal	r12

80002336 <gpio_clr_gpio_pin>:
  gpio_port->ovrc  = 1 << (pin & 0x1F); // Value to be driven on the I/O line: 0.
}

void gpio_clr_gpio_pin(uint32_t pin)
{
  volatile avr32_gpio_port_t *gpio_port = &GPIO.port[pin >> 5];
80002336:	f8 08 16 05 	lsr	r8,r12,0x5
8000233a:	a9 68       	lsl	r8,0x8
8000233c:	e0 28 f0 00 	sub	r8,61440
  gpio_port->ovrc  = 1 << (pin & 0x1F); // Value to be driven on the I/O line: 0.
80002340:	30 19       	mov	r9,1
80002342:	f2 0c 09 4c 	lsl	r12,r9,r12
80002346:	f1 4c 00 58 	st.w	r8[88],r12
  gpio_port->oders = 1 << (pin & 0x1F); // The GPIO output driver is enabled for that pin.
8000234a:	f1 4c 00 44 	st.w	r8[68],r12
  gpio_port->gpers = 1 << (pin & 0x1F); // The GPIO module controls that pin.
8000234e:	91 1c       	st.w	r8[0x4],r12
}
80002350:	5e fc       	retal	r12

80002352 <gpio_tgl_gpio_pin>:
  gpio_port->ovrc  = mask; // Value to be driven on the I/O group: 0.
}

void gpio_tgl_gpio_pin(uint32_t pin)
{
  volatile avr32_gpio_port_t *gpio_port = &GPIO.port[pin >> 5];
80002352:	f8 08 16 05 	lsr	r8,r12,0x5
80002356:	a9 68       	lsl	r8,0x8
80002358:	e0 28 f0 00 	sub	r8,61440
  gpio_port->ovrt  = 1 << (pin & 0x1F); // Toggle the I/O line.
8000235c:	30 19       	mov	r9,1
8000235e:	f2 0c 09 4c 	lsl	r12,r9,r12
80002362:	f1 4c 00 5c 	st.w	r8[92],r12
  gpio_port->oders = 1 << (pin & 0x1F); // The GPIO output driver is enabled for that pin.
80002366:	f1 4c 00 44 	st.w	r8[68],r12
  gpio_port->gpers = 1 << (pin & 0x1F); // The GPIO module controls that pin.
8000236a:	91 1c       	st.w	r8[0x4],r12
}
8000236c:	5e fc       	retal	r12
8000236e:	d7 03       	nop

80002370 <_get_interrupt_handler>:
__int_handler _get_interrupt_handler(uint32_t int_level)
{
	/* ICR3 is mapped first, ICR0 last.
	Code in exception.S puts int_level in R12 which is used by the compiler
	to pass a single argument to a function. */
	uint32_t int_grp = AVR32_INTC.icr[AVR32_INTC_INT3 - int_level];
80002370:	fe 78 08 00 	mov	r8,-63488
80002374:	e0 69 00 83 	mov	r9,131
80002378:	f2 0c 01 0c 	sub	r12,r9,r12
8000237c:	f0 0c 03 29 	ld.w	r9,r8[r12<<0x2]
	uint32_t int_req = AVR32_INTC.irr[int_grp];
80002380:	f2 ca ff c0 	sub	r10,r9,-64
80002384:	f0 0a 03 28 	ld.w	r8,r8[r10<<0x2]
	exception.S will provide the interrupt handler with a clean interrupt
	stack frame, with nothing more pushed onto the stack. The interrupt
	handler must manage the `rete' instruction, which can be done using
	pure assembly, inline assembly or the `__attribute__((__interrupt__))'
	C function attribute.*/
	return (int_req)
80002388:	58 08       	cp.w	r8,0
8000238a:	c0 21       	brne	8000238e <_get_interrupt_handler+0x1e>
8000238c:	5e fd       	retal	0
		? _int_handler_table[int_grp]._int_line_handler_table[32
8000238e:	f0 08 12 00 	clz	r8,r8
80002392:	48 5a       	lddpc	r10,800023a4 <_get_interrupt_handler+0x34>
80002394:	f4 09 00 39 	add	r9,r10,r9<<0x3
80002398:	f0 08 11 1f 	rsub	r8,r8,31
8000239c:	72 19       	ld.w	r9,r9[0x4]
	exception.S will provide the interrupt handler with a clean interrupt
	stack frame, with nothing more pushed onto the stack. The interrupt
	handler must manage the `rete' instruction, which can be done using
	pure assembly, inline assembly or the `__attribute__((__interrupt__))'
	C function attribute.*/
	return (int_req)
8000239e:	f2 08 03 2c 	ld.w	r12,r9[r8<<0x2]
		? _int_handler_table[int_grp]._int_line_handler_table[32
			- clz(int_req) - 1]
		: NULL;
}
800023a2:	5e fc       	retal	r12
800023a4:	80 00       	ld.sh	r0,r0[0x0]
800023a6:	8e 50       	ld.sh	r0,r7[0xa]

800023a8 <_stext>:
800023a8:	48 dd       	lddpc	sp,800023dc <udata_clear_loop_end+0x4>
800023aa:	fe c0 97 aa 	sub	r0,pc,-26710
800023ae:	e3 b0 00 01 	mtsr	0x4,r0
800023b2:	d5 53       	csrf	0x15
800023b4:	48 b0       	lddpc	r0,800023e0 <udata_clear_loop_end+0x8>
800023b6:	48 c1       	lddpc	r1,800023e4 <udata_clear_loop_end+0xc>
800023b8:	02 30       	cp.w	r0,r1
800023ba:	c0 62       	brcc	800023c6 <idata_load_loop_end>
800023bc:	48 b2       	lddpc	r2,800023e8 <udata_clear_loop_end+0x10>

800023be <idata_load_loop>:
800023be:	a5 05       	ld.d	r4,r2++
800023c0:	a1 24       	st.d	r0++,r4
800023c2:	02 30       	cp.w	r0,r1
800023c4:	cf d3       	brcs	800023be <idata_load_loop>

800023c6 <idata_load_loop_end>:
800023c6:	48 a0       	lddpc	r0,800023ec <udata_clear_loop_end+0x14>
800023c8:	48 a1       	lddpc	r1,800023f0 <udata_clear_loop_end+0x18>
800023ca:	02 30       	cp.w	r0,r1
800023cc:	c0 62       	brcc	800023d8 <udata_clear_loop_end>
800023ce:	30 02       	mov	r2,0
800023d0:	30 03       	mov	r3,0

800023d2 <udata_clear_loop>:
800023d2:	a1 22       	st.d	r0++,r2
800023d4:	02 30       	cp.w	r0,r1
800023d6:	cf e3       	brcs	800023d2 <udata_clear_loop>

800023d8 <udata_clear_loop_end>:
800023d8:	fe cf f5 28 	sub	pc,pc,-2776
800023dc:	00 01       	add	r1,r0
800023de:	00 00       	add	r0,r0
800023e0:	00 00       	add	r0,r0
800023e2:	00 04       	add	r4,r0
800023e4:	00 00       	add	r0,r0
800023e6:	05 18       	ld.sh	r8,r2++
800023e8:	80 00       	ld.sh	r0,r0[0x0]
800023ea:	99 d0       	st.w	r12[0x34],r0
800023ec:	00 00       	add	r0,r0
800023ee:	05 18       	ld.sh	r8,r2++
800023f0:	00 00       	add	r0,r0
800023f2:	06 48       	or	r8,r3

800023f4 <board_init>:
{
	/* This function is meant to contain board-specific initialization code
	 * for, e.g., the I/O pins. The initialization can rely on application-
	 * specific board configuration, found in conf_board.h.
	 */
}
800023f4:	5e fc       	retal	r12

800023f6 <osc_enable>:

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags;

	flags = sysreg_read(AVR32_SR);
800023f6:	e1 b9 00 00 	mfsr	r9,0x0
	cpu_irq_disable();
800023fa:	d3 03       	ssrf	0x10
	irqflags_t flags;
	uint32_t   oscctrl;

	flags = cpu_irq_save();

	switch (id) {
800023fc:	58 0c       	cp.w	r12,0
800023fe:	c0 91       	brne	80002410 <osc_enable+0x1a>
#ifdef BOARD_OSC0_HZ
	case OSC_ID_OSC0:
		oscctrl = OSC0_STARTUP_VALUE <<
				AVR32_PM_OSCCTRL0_STARTUP_OFFSET;
		oscctrl |= OSC0_MODE_VALUE << AVR32_PM_OSCCTRL0_MODE_OFFSET;
		AVR32_PM.oscctrl0 = oscctrl;
80002400:	fe 78 0c 00 	mov	r8,-62464
80002404:	e0 6a 03 07 	mov	r10,775
80002408:	91 aa       	st.w	r8[0x28],r10
		AVR32_PM.mcctrl |= 1U << AVR32_PM_MCCTRL_OSC0EN;
8000240a:	70 0a       	ld.w	r10,r8[0x0]
8000240c:	a3 aa       	sbr	r10,0x2
8000240e:	91 0a       	st.w	r8[0x0],r10
   // Don't work with sysreg_write(AVR32_SR, flags)
   if( cpu_irq_is_enabled_flags(flags) ) {
      cpu_irq_enable();
   }
#else
	sysreg_write(AVR32_SR, flags);
80002410:	e3 b9 00 00 	mtsr	0x0,r9
		/* unhandled_case(id); */
		break;
	}

	cpu_irq_restore(flags);
}
80002414:	5e fc       	retal	r12
80002416:	d7 03       	nop

80002418 <sysclk_init>:
}
#endif // CONFIG_USBCLK_SOURCE


void sysclk_init(void)
{
80002418:	d4 01       	pushm	lr

	if (pbb_shift > 0)
		cksel |= ((pbb_shift - 1) << AVR32_PM_CKSEL_PBBSEL)
				| (1U << AVR32_PM_CKSEL_PBBDIV);

	AVR32_PM.cksel = cksel;
8000241a:	fe 78 0c 00 	mov	r8,-62464
8000241e:	e0 69 00 80 	mov	r9,128
80002422:	ea 19 80 80 	orh	r9,0x8080
80002426:	91 19       	st.w	r8[0x4],r9

static inline bool pll_is_locked(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	return !!(AVR32_PM.poscsr & (1U << (AVR32_PM_POSCSR_LOCK0 + pll_id)));
80002428:	71 58       	ld.w	r8,r8[0x54]

static inline void pll_enable_config_defaults(unsigned int pll_id)
{
	struct pll_config pllcfg;

	if (pll_is_locked(pll_id)) {
8000242a:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
8000242e:	c1 c1       	brne	80002466 <sysclk_init+0x4e>
static inline bool osc_is_ready(uint8_t id)
{
	switch (id) {
#ifdef BOARD_OSC0_HZ
	case OSC_ID_OSC0:
		return !!(AVR32_PM.poscsr & (1U << AVR32_PM_POSCSR_OSC0RDY));
80002430:	fe 78 0c 00 	mov	r8,-62464
80002434:	71 58       	ld.w	r8,r8[0x54]

static inline void pll_enable_source(enum pll_source src)
{
	switch (src) {
	case PLL_SRC_OSC0:
		if (!osc_is_ready(OSC_ID_OSC0)) {
80002436:	e2 18 00 80 	andl	r8,0x80,COH
8000243a:	c0 a1       	brne	8000244e <sysclk_init+0x36>
			osc_enable(OSC_ID_OSC0);
8000243c:	30 0c       	mov	r12,0
8000243e:	f0 1f 00 14 	mcall	8000248c <sysclk_init+0x74>
80002442:	fe 79 0c 00 	mov	r9,-62464
80002446:	73 58       	ld.w	r8,r9[0x54]
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
80002448:	e2 18 00 80 	andl	r8,0x80,COH
8000244c:	cf d0       	breq	80002446 <sysclk_init+0x2e>
static inline void pll_enable(const struct pll_config *cfg,
		unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	AVR32_PM.pll[pll_id] = cfg->ctrl | (1U << AVR32_PM_PLL0_PLLEN);
8000244e:	fe 78 0c 00 	mov	r8,-62464
80002452:	e0 69 01 05 	mov	r9,261
80002456:	ea 19 3f 0a 	orh	r9,0x3f0a
8000245a:	91 89       	st.w	r8[0x20],r9

static inline bool pll_is_locked(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	return !!(AVR32_PM.poscsr & (1U << (AVR32_PM_POSCSR_LOCK0 + pll_id)));
8000245c:	10 99       	mov	r9,r8
8000245e:	73 58       	ld.w	r8,r9[0x54]
	default:
		Assert(false);
		break;
	}
	pll_enable(&pllcfg, pll_id);
	while (!pll_is_locked(pll_id));
80002460:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80002464:	cf d0       	breq	8000245e <sysclk_init+0x46>

#ifdef CONFIG_PLL0_SOURCE
	case SYSCLK_SRC_PLL0: {
		pll_enable_config_defaults(0);
		// Set a flash wait state depending on the new cpu frequency.
		flash_set_bus_freq(sysclk_get_cpu_hz());
80002466:	e0 6c 14 80 	mov	r12,5248
8000246a:	ea 1c 03 ef 	orh	r12,0x3ef
8000246e:	f0 1f 00 09 	mcall	80002490 <sysclk_init+0x78>

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags;

	flags = sysreg_read(AVR32_SR);
80002472:	e1 b9 00 00 	mfsr	r9,0x0
	cpu_irq_disable();
80002476:	d3 03       	ssrf	0x10
	uint32_t   mcctrl;

	Assert(src <= SYSCLK_SRC_PLL0);

	flags = cpu_irq_save();
	mcctrl = AVR32_PM.mcctrl & ~AVR32_PM_MCCTRL_MCSEL_MASK;
80002478:	fe 78 0c 00 	mov	r8,-62464
8000247c:	70 0a       	ld.w	r10,r8[0x0]
8000247e:	e0 1a ff fc 	andl	r10,0xfffc
	mcctrl |= src << AVR32_PM_MCCTRL_MCSEL;
80002482:	a1 ba       	sbr	r10,0x1
	AVR32_PM.mcctrl = mcctrl;
80002484:	91 0a       	st.w	r8[0x0],r10
   // Don't work with sysreg_write(AVR32_SR, flags)
   if( cpu_irq_is_enabled_flags(flags) ) {
      cpu_irq_enable();
   }
#else
	sysreg_write(AVR32_SR, flags);
80002486:	e3 b9 00 00 	mtsr	0x0,r9

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = true;
#endif
}
8000248a:	d8 02       	popm	pc
8000248c:	80 00       	ld.sh	r0,r0[0x0]
8000248e:	23 f6       	sub	r6,63
80002490:	80 00       	ld.sh	r0,r0[0x0]
80002492:	21 a4       	sub	r4,26

80002494 <LCD_Reset>:
void setFontSize(int size)
{
	text_size = size;
}

void LCD_Reset() {
80002494:	d4 01       	pushm	lr
	/*Reset sequence*/
	gpio_clr_gpio_pin(LCD_RST); //reset low
80002496:	31 dc       	mov	r12,29
80002498:	f0 1f 00 0d 	mcall	800024cc <LCD_Reset+0x38>
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
8000249c:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
800024a0:	f0 ca e9 80 	sub	r10,r8,-5760
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
800024a4:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occured.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
800024a8:	14 38       	cp.w	r8,r10
800024aa:	e0 88 00 08 	brls	800024ba <LCD_Reset+0x26>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
800024ae:	12 38       	cp.w	r8,r9
800024b0:	fe 98 ff fa 	brls	800024a4 <LCD_Reset+0x10>
800024b4:	12 3a       	cp.w	r10,r9
800024b6:	c0 73       	brcs	800024c4 <LCD_Reset+0x30>
800024b8:	cf 6b       	rjmp	800024a4 <LCD_Reset+0x10>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
800024ba:	12 38       	cp.w	r8,r9
800024bc:	e0 8b 00 04 	brhi	800024c4 <LCD_Reset+0x30>
800024c0:	12 3a       	cp.w	r10,r9
800024c2:	cf 12       	brcc	800024a4 <LCD_Reset+0x10>
	cpu_delay_ms(50, 115200);
	gpio_set_gpio_pin(LCD_RST); //reset high
800024c4:	31 dc       	mov	r12,29
800024c6:	f0 1f 00 03 	mcall	800024d0 <LCD_Reset+0x3c>
}
800024ca:	d8 02       	popm	pc
800024cc:	80 00       	ld.sh	r0,r0[0x0]
800024ce:	23 36       	sub	r6,51
800024d0:	80 00       	ld.sh	r0,r0[0x0]
800024d2:	23 1a       	sub	r10,49

800024d4 <set_LCD_Data>:
 *  Author: kevin
 */ 

#include "LCD.h"

void set_LCD_Data(int data) {
800024d4:	d4 31       	pushm	r0-r7,lr
800024d6:	18 96       	mov	r6,r12
800024d8:	30 17       	mov	r7,1
	int mask = 1;
	int i;
	int result = 0;
	for (i = 0; i < 8; i++) {
		switch (i) {
800024da:	4b c5       	lddpc	r5,800025c8 <set_LCD_Data+0xf4>
		case 6:
			result = mask & data;
			if (result == 1) {
				gpio_set_gpio_pin(LCD_DATA1);
			} else {
				gpio_clr_gpio_pin(LCD_DATA1);
800024dc:	32 34       	mov	r4,35
		case 5:
			result = mask & data;
			if (result == 1) {
				gpio_set_gpio_pin(LCD_DATA2);
			} else {
				gpio_clr_gpio_pin(LCD_DATA2);
800024de:	32 43       	mov	r3,36
		case 4:
			result = mask & data;
			if (result == 1) {
				gpio_set_gpio_pin(LCD_DATA3);
			} else {
				gpio_clr_gpio_pin(LCD_DATA3);
800024e0:	32 52       	mov	r2,37
		case 3:
			result = mask & data;
			if (result == 1) {
				gpio_set_gpio_pin(LCD_DATA4);
			} else {
				gpio_clr_gpio_pin(LCD_DATA4);
800024e2:	32 61       	mov	r1,38
		case 2:
			result = mask & data;
			if (result == 1) {
				gpio_set_gpio_pin(LCD_DATA5);
			} else {
				gpio_clr_gpio_pin(LCD_DATA5);
800024e4:	32 70       	mov	r0,39
800024e6:	c0 28       	rjmp	800024ea <set_LCD_Data+0x16>
 *  Author: kevin
 */ 

#include "LCD.h"

void set_LCD_Data(int data) {
800024e8:	2f f7       	sub	r7,-1
	int mask = 1;
	int i;
	int result = 0;
	for (i = 0; i < 8; i++) {
		switch (i) {
800024ea:	ee c8 00 01 	sub	r8,r7,1
800024ee:	58 78       	cp.w	r8,7
800024f0:	e0 8b 00 63 	brhi	800025b6 <set_LCD_Data+0xe2>
800024f4:	ea 08 03 2f 	ld.w	pc,r5[r8<<0x2]
		case 0:
			result = mask & data;
			if (result == 1) {
800024f8:	f1 d6 c0 01 	bfextu	r8,r6,0x0,0x1
800024fc:	58 18       	cp.w	r8,1
800024fe:	c0 51       	brne	80002508 <set_LCD_Data+0x34>
				gpio_set_gpio_pin(LCD_DATA7);
80002500:	32 9c       	mov	r12,41
80002502:	f0 1f 00 33 	mcall	800025cc <set_LCD_Data+0xf8>
80002506:	c5 d8       	rjmp	800025c0 <set_LCD_Data+0xec>
			} else {
				gpio_clr_gpio_pin(LCD_DATA7);
80002508:	32 9c       	mov	r12,41
8000250a:	f0 1f 00 32 	mcall	800025d0 <set_LCD_Data+0xfc>
8000250e:	c5 48       	rjmp	800025b6 <set_LCD_Data+0xe2>
			}
			break;
		case 1:
			result = mask & data;
			if (result == 1) {
80002510:	f1 d6 c0 01 	bfextu	r8,r6,0x0,0x1
80002514:	58 18       	cp.w	r8,1
80002516:	c0 51       	brne	80002520 <set_LCD_Data+0x4c>
				gpio_set_gpio_pin(LCD_DATA6);
80002518:	32 8c       	mov	r12,40
8000251a:	f0 1f 00 2d 	mcall	800025cc <set_LCD_Data+0xf8>
8000251e:	c5 18       	rjmp	800025c0 <set_LCD_Data+0xec>
			} else {
				gpio_clr_gpio_pin(LCD_DATA6);
80002520:	32 8c       	mov	r12,40
80002522:	f0 1f 00 2c 	mcall	800025d0 <set_LCD_Data+0xfc>
80002526:	c4 88       	rjmp	800025b6 <set_LCD_Data+0xe2>
			}
			break;
		case 2:
			result = mask & data;
			if (result == 1) {
80002528:	f1 d6 c0 01 	bfextu	r8,r6,0x0,0x1
8000252c:	58 18       	cp.w	r8,1
8000252e:	c0 51       	brne	80002538 <set_LCD_Data+0x64>
				gpio_set_gpio_pin(LCD_DATA5);
80002530:	00 9c       	mov	r12,r0
80002532:	f0 1f 00 27 	mcall	800025cc <set_LCD_Data+0xf8>
80002536:	c4 58       	rjmp	800025c0 <set_LCD_Data+0xec>
			} else {
				gpio_clr_gpio_pin(LCD_DATA5);
80002538:	00 9c       	mov	r12,r0
8000253a:	f0 1f 00 26 	mcall	800025d0 <set_LCD_Data+0xfc>
8000253e:	c3 c8       	rjmp	800025b6 <set_LCD_Data+0xe2>
			}
			break;
		case 3:
			result = mask & data;
			if (result == 1) {
80002540:	f1 d6 c0 01 	bfextu	r8,r6,0x0,0x1
80002544:	58 18       	cp.w	r8,1
80002546:	c0 51       	brne	80002550 <set_LCD_Data+0x7c>
				gpio_set_gpio_pin(LCD_DATA4);
80002548:	02 9c       	mov	r12,r1
8000254a:	f0 1f 00 21 	mcall	800025cc <set_LCD_Data+0xf8>
8000254e:	c3 98       	rjmp	800025c0 <set_LCD_Data+0xec>
			} else {
				gpio_clr_gpio_pin(LCD_DATA4);
80002550:	02 9c       	mov	r12,r1
80002552:	f0 1f 00 20 	mcall	800025d0 <set_LCD_Data+0xfc>
80002556:	c3 08       	rjmp	800025b6 <set_LCD_Data+0xe2>
			}
			break;
		case 4:
			result = mask & data;
			if (result == 1) {
80002558:	f1 d6 c0 01 	bfextu	r8,r6,0x0,0x1
8000255c:	58 18       	cp.w	r8,1
8000255e:	c0 51       	brne	80002568 <set_LCD_Data+0x94>
				gpio_set_gpio_pin(LCD_DATA3);
80002560:	04 9c       	mov	r12,r2
80002562:	f0 1f 00 1b 	mcall	800025cc <set_LCD_Data+0xf8>
80002566:	c2 d8       	rjmp	800025c0 <set_LCD_Data+0xec>
			} else {
				gpio_clr_gpio_pin(LCD_DATA3);
80002568:	04 9c       	mov	r12,r2
8000256a:	f0 1f 00 1a 	mcall	800025d0 <set_LCD_Data+0xfc>
8000256e:	c2 48       	rjmp	800025b6 <set_LCD_Data+0xe2>
			}
			break;
		case 5:
			result = mask & data;
			if (result == 1) {
80002570:	f1 d6 c0 01 	bfextu	r8,r6,0x0,0x1
80002574:	58 18       	cp.w	r8,1
80002576:	c0 51       	brne	80002580 <set_LCD_Data+0xac>
				gpio_set_gpio_pin(LCD_DATA2);
80002578:	06 9c       	mov	r12,r3
8000257a:	f0 1f 00 15 	mcall	800025cc <set_LCD_Data+0xf8>
8000257e:	c2 18       	rjmp	800025c0 <set_LCD_Data+0xec>
			} else {
				gpio_clr_gpio_pin(LCD_DATA2);
80002580:	06 9c       	mov	r12,r3
80002582:	f0 1f 00 14 	mcall	800025d0 <set_LCD_Data+0xfc>
80002586:	c1 88       	rjmp	800025b6 <set_LCD_Data+0xe2>
			}
			break;
		case 6:
			result = mask & data;
			if (result == 1) {
80002588:	f1 d6 c0 01 	bfextu	r8,r6,0x0,0x1
8000258c:	58 18       	cp.w	r8,1
8000258e:	c0 51       	brne	80002598 <set_LCD_Data+0xc4>
				gpio_set_gpio_pin(LCD_DATA1);
80002590:	08 9c       	mov	r12,r4
80002592:	f0 1f 00 0f 	mcall	800025cc <set_LCD_Data+0xf8>
80002596:	c1 58       	rjmp	800025c0 <set_LCD_Data+0xec>
			} else {
				gpio_clr_gpio_pin(LCD_DATA1);
80002598:	08 9c       	mov	r12,r4
8000259a:	f0 1f 00 0e 	mcall	800025d0 <set_LCD_Data+0xfc>
8000259e:	c0 c8       	rjmp	800025b6 <set_LCD_Data+0xe2>
			}
			break;
		case 7:
			result = mask & data;
			if (result == 1) {
800025a0:	f1 d6 c0 01 	bfextu	r8,r6,0x0,0x1
800025a4:	58 18       	cp.w	r8,1
800025a6:	c0 51       	brne	800025b0 <set_LCD_Data+0xdc>
				gpio_set_gpio_pin(LCD_DATA0);
800025a8:	32 2c       	mov	r12,34
800025aa:	f0 1f 00 09 	mcall	800025cc <set_LCD_Data+0xf8>
800025ae:	d8 32       	popm	r0-r7,pc
			} else {
				gpio_clr_gpio_pin(LCD_DATA0);
800025b0:	32 2c       	mov	r12,34
800025b2:	f0 1f 00 08 	mcall	800025d0 <set_LCD_Data+0xfc>

void set_LCD_Data(int data) {
	int mask = 1;
	int i;
	int result = 0;
	for (i = 0; i < 8; i++) {
800025b6:	58 77       	cp.w	r7,7
800025b8:	e0 89 00 06 	brgt	800025c4 <set_LCD_Data+0xf0>
			} else {
				gpio_clr_gpio_pin(LCD_DATA0);
			}
			break;
		}
		data = data >> 1;
800025bc:	a1 56       	asr	r6,0x1
800025be:	c9 5b       	rjmp	800024e8 <set_LCD_Data+0x14>
800025c0:	a1 56       	asr	r6,0x1
800025c2:	c9 3b       	rjmp	800024e8 <set_LCD_Data+0x14>
800025c4:	d8 32       	popm	r0-r7,pc
800025c6:	00 00       	add	r0,r0
800025c8:	80 00       	ld.sh	r0,r0[0x0]
800025ca:	8e f0       	ld.uh	r0,r7[0xe]
800025cc:	80 00       	ld.sh	r0,r0[0x0]
800025ce:	23 1a       	sub	r10,49
800025d0:	80 00       	ld.sh	r0,r0[0x0]
800025d2:	23 36       	sub	r6,51

800025d4 <get_LCD_Data>:
	gpio_configure_pin(LCD_DATA5, GPIO_DIR_OUTPUT);
	gpio_configure_pin(LCD_DATA6, GPIO_DIR_OUTPUT);
	gpio_configure_pin(LCD_DATA7, GPIO_DIR_OUTPUT);
}

void get_LCD_Data() {
800025d4:	d4 31       	pushm	r0-r7,lr
	int i = 0;
	data_reg = 0;
800025d6:	30 09       	mov	r9,0
800025d8:	4b 58       	lddpc	r8,800026ac <get_LCD_Data+0xd8>
800025da:	91 09       	st.w	r8[0x0],r9
800025dc:	30 17       	mov	r7,1


	for (i = 0; i < 8; i++) {
		switch (i) {
800025de:	4b 55       	lddpc	r5,800026b0 <get_LCD_Data+0xdc>
		case 5:
			data_reg = data_reg << 1;
			data_reg = data_reg | gpio_get_pin_value(LCD_DATA5);
			break;
		case 6:
			data_reg = data_reg << 1;
800025e0:	10 96       	mov	r6,r8
			data_reg = data_reg | gpio_get_pin_value(LCD_DATA6);
800025e2:	32 84       	mov	r4,40
			data_reg = data_reg << 1;
			data_reg = data_reg | gpio_get_pin_value(LCD_DATA4);
			break;
		case 5:
			data_reg = data_reg << 1;
			data_reg = data_reg | gpio_get_pin_value(LCD_DATA5);
800025e4:	32 73       	mov	r3,39
			data_reg = data_reg << 1;
			data_reg = data_reg | gpio_get_pin_value(LCD_DATA3);
			break;
		case 4:
			data_reg = data_reg << 1;
			data_reg = data_reg | gpio_get_pin_value(LCD_DATA4);
800025e6:	32 62       	mov	r2,38
			data_reg = data_reg << 1;
			data_reg = data_reg | gpio_get_pin_value(LCD_DATA2);
			break;
		case 3:
			data_reg = data_reg << 1;
			data_reg = data_reg | gpio_get_pin_value(LCD_DATA3);
800025e8:	32 51       	mov	r1,37
			data_reg = data_reg << 1;
			data_reg = data_reg | gpio_get_pin_value(LCD_DATA1);
			break;
		case 2:
			data_reg = data_reg << 1;
			data_reg = data_reg | gpio_get_pin_value(LCD_DATA2);
800025ea:	32 40       	mov	r0,36
800025ec:	c0 28       	rjmp	800025f0 <get_LCD_Data+0x1c>
	gpio_configure_pin(LCD_DATA7, GPIO_DIR_OUTPUT);
}

void get_LCD_Data() {
	int i = 0;
	data_reg = 0;
800025ee:	2f f7       	sub	r7,-1


	for (i = 0; i < 8; i++) {
		switch (i) {
800025f0:	ee c8 00 01 	sub	r8,r7,1
800025f4:	58 78       	cp.w	r8,7
800025f6:	e0 8b 00 57 	brhi	800026a4 <get_LCD_Data+0xd0>
800025fa:	ea 08 03 2f 	ld.w	pc,r5[r8<<0x2]
		case 0:
			data_reg = gpio_get_pin_value(LCD_DATA0);
800025fe:	32 2c       	mov	r12,34
80002600:	f0 1f 00 2d 	mcall	800026b4 <get_LCD_Data+0xe0>
80002604:	8d 0c       	st.w	r6[0x0],r12
			break;
80002606:	cf 4b       	rjmp	800025ee <get_LCD_Data+0x1a>
		case 1:
			data_reg = data_reg << 1;
80002608:	6c 08       	ld.w	r8,r6[0x0]
8000260a:	a1 78       	lsl	r8,0x1
8000260c:	8d 08       	st.w	r6[0x0],r8
			data_reg = data_reg | gpio_get_pin_value(LCD_DATA1);
8000260e:	32 3c       	mov	r12,35
80002610:	f0 1f 00 29 	mcall	800026b4 <get_LCD_Data+0xe0>
80002614:	6c 08       	ld.w	r8,r6[0x0]
80002616:	f9 e8 10 08 	or	r8,r12,r8
8000261a:	8d 08       	st.w	r6[0x0],r8
			break;
8000261c:	ce 9b       	rjmp	800025ee <get_LCD_Data+0x1a>
		case 2:
			data_reg = data_reg << 1;
8000261e:	6c 08       	ld.w	r8,r6[0x0]
80002620:	a1 78       	lsl	r8,0x1
80002622:	8d 08       	st.w	r6[0x0],r8
			data_reg = data_reg | gpio_get_pin_value(LCD_DATA2);
80002624:	00 9c       	mov	r12,r0
80002626:	f0 1f 00 24 	mcall	800026b4 <get_LCD_Data+0xe0>
8000262a:	6c 08       	ld.w	r8,r6[0x0]
8000262c:	f9 e8 10 08 	or	r8,r12,r8
80002630:	8d 08       	st.w	r6[0x0],r8
			break;
80002632:	cd eb       	rjmp	800025ee <get_LCD_Data+0x1a>
		case 3:
			data_reg = data_reg << 1;
80002634:	6c 08       	ld.w	r8,r6[0x0]
80002636:	a1 78       	lsl	r8,0x1
80002638:	8d 08       	st.w	r6[0x0],r8
			data_reg = data_reg | gpio_get_pin_value(LCD_DATA3);
8000263a:	02 9c       	mov	r12,r1
8000263c:	f0 1f 00 1e 	mcall	800026b4 <get_LCD_Data+0xe0>
80002640:	6c 08       	ld.w	r8,r6[0x0]
80002642:	f9 e8 10 08 	or	r8,r12,r8
80002646:	8d 08       	st.w	r6[0x0],r8
			break;
80002648:	cd 3b       	rjmp	800025ee <get_LCD_Data+0x1a>
		case 4:
			data_reg = data_reg << 1;
8000264a:	6c 08       	ld.w	r8,r6[0x0]
8000264c:	a1 78       	lsl	r8,0x1
8000264e:	8d 08       	st.w	r6[0x0],r8
			data_reg = data_reg | gpio_get_pin_value(LCD_DATA4);
80002650:	04 9c       	mov	r12,r2
80002652:	f0 1f 00 19 	mcall	800026b4 <get_LCD_Data+0xe0>
80002656:	6c 08       	ld.w	r8,r6[0x0]
80002658:	f9 e8 10 08 	or	r8,r12,r8
8000265c:	8d 08       	st.w	r6[0x0],r8
			break;
8000265e:	cc 8b       	rjmp	800025ee <get_LCD_Data+0x1a>
		case 5:
			data_reg = data_reg << 1;
80002660:	6c 08       	ld.w	r8,r6[0x0]
80002662:	a1 78       	lsl	r8,0x1
80002664:	8d 08       	st.w	r6[0x0],r8
			data_reg = data_reg | gpio_get_pin_value(LCD_DATA5);
80002666:	06 9c       	mov	r12,r3
80002668:	f0 1f 00 13 	mcall	800026b4 <get_LCD_Data+0xe0>
8000266c:	6c 08       	ld.w	r8,r6[0x0]
8000266e:	f9 e8 10 08 	or	r8,r12,r8
80002672:	8d 08       	st.w	r6[0x0],r8
			break;
80002674:	cb db       	rjmp	800025ee <get_LCD_Data+0x1a>
		case 6:
			data_reg = data_reg << 1;
80002676:	6c 08       	ld.w	r8,r6[0x0]
80002678:	a1 78       	lsl	r8,0x1
8000267a:	8d 08       	st.w	r6[0x0],r8
			data_reg = data_reg | gpio_get_pin_value(LCD_DATA6);
8000267c:	08 9c       	mov	r12,r4
8000267e:	f0 1f 00 0e 	mcall	800026b4 <get_LCD_Data+0xe0>
80002682:	6c 08       	ld.w	r8,r6[0x0]
80002684:	f9 e8 10 08 	or	r8,r12,r8
80002688:	8d 08       	st.w	r6[0x0],r8
			break;
8000268a:	cb 2b       	rjmp	800025ee <get_LCD_Data+0x1a>
		case 7:
			data_reg = data_reg << 1;
8000268c:	48 87       	lddpc	r7,800026ac <get_LCD_Data+0xd8>
8000268e:	6e 08       	ld.w	r8,r7[0x0]
80002690:	a1 78       	lsl	r8,0x1
80002692:	8f 08       	st.w	r7[0x0],r8
			data_reg = data_reg | gpio_get_pin_value(LCD_DATA7);
80002694:	32 9c       	mov	r12,41
80002696:	f0 1f 00 08 	mcall	800026b4 <get_LCD_Data+0xe0>
8000269a:	6e 08       	ld.w	r8,r7[0x0]
8000269c:	f9 e8 10 08 	or	r8,r12,r8
800026a0:	8f 08       	st.w	r7[0x0],r8
800026a2:	d8 32       	popm	r0-r7,pc
void get_LCD_Data() {
	int i = 0;
	data_reg = 0;


	for (i = 0; i < 8; i++) {
800026a4:	58 77       	cp.w	r7,7
800026a6:	fe 9a ff a4 	brle	800025ee <get_LCD_Data+0x1a>
800026aa:	d8 32       	popm	r0-r7,pc
800026ac:	00 00       	add	r0,r0
800026ae:	06 04       	add	r4,r3
800026b0:	80 00       	ld.sh	r0,r0[0x0]
800026b2:	8f 10       	st.w	r7[0x4],r0
800026b4:	80 00       	ld.sh	r0,r0[0x0]
800026b6:	23 04       	sub	r4,48

800026b8 <set_LCD_data_out>:
	gpio_configure_pin(LCD_DATA6, GPIO_DIR_INPUT);
	gpio_configure_pin(LCD_DATA7, GPIO_DIR_INPUT);
}

void set_LCD_data_out()
{
800026b8:	d4 01       	pushm	lr
	gpio_configure_pin(LCD_DATA0, GPIO_DIR_OUTPUT);
800026ba:	30 1b       	mov	r11,1
800026bc:	32 2c       	mov	r12,34
800026be:	f0 1f 00 10 	mcall	800026fc <set_LCD_data_out+0x44>
	gpio_configure_pin(LCD_DATA1, GPIO_DIR_OUTPUT);
800026c2:	30 1b       	mov	r11,1
800026c4:	32 3c       	mov	r12,35
800026c6:	f0 1f 00 0e 	mcall	800026fc <set_LCD_data_out+0x44>
	gpio_configure_pin(LCD_DATA2, GPIO_DIR_OUTPUT);
800026ca:	30 1b       	mov	r11,1
800026cc:	32 4c       	mov	r12,36
800026ce:	f0 1f 00 0c 	mcall	800026fc <set_LCD_data_out+0x44>
	gpio_configure_pin(LCD_DATA3, GPIO_DIR_OUTPUT);
800026d2:	30 1b       	mov	r11,1
800026d4:	32 5c       	mov	r12,37
800026d6:	f0 1f 00 0a 	mcall	800026fc <set_LCD_data_out+0x44>
	gpio_configure_pin(LCD_DATA4, GPIO_DIR_OUTPUT);
800026da:	30 1b       	mov	r11,1
800026dc:	32 6c       	mov	r12,38
800026de:	f0 1f 00 08 	mcall	800026fc <set_LCD_data_out+0x44>
	gpio_configure_pin(LCD_DATA5, GPIO_DIR_OUTPUT);
800026e2:	30 1b       	mov	r11,1
800026e4:	32 7c       	mov	r12,39
800026e6:	f0 1f 00 06 	mcall	800026fc <set_LCD_data_out+0x44>
	gpio_configure_pin(LCD_DATA6, GPIO_DIR_OUTPUT);
800026ea:	30 1b       	mov	r11,1
800026ec:	32 8c       	mov	r12,40
800026ee:	f0 1f 00 04 	mcall	800026fc <set_LCD_data_out+0x44>
	gpio_configure_pin(LCD_DATA7, GPIO_DIR_OUTPUT);
800026f2:	30 1b       	mov	r11,1
800026f4:	32 9c       	mov	r12,41
800026f6:	f0 1f 00 02 	mcall	800026fc <set_LCD_data_out+0x44>
}
800026fa:	d8 02       	popm	pc
800026fc:	80 00       	ld.sh	r0,r0[0x0]
800026fe:	22 4c       	sub	r12,36

80002700 <writeData_unsafe>:
	gpio_clr_gpio_pin(LCD_WR); //wr low
	gpio_set_gpio_pin(LCD_WR); //wr high
	gpio_set_gpio_pin(LCD_CS); //cs high
}

void writeData_unsafe(int data) {
80002700:	eb cd 40 80 	pushm	r7,lr
80002704:	18 97       	mov	r7,r12
	set_LCD_data_out();
80002706:	f0 1f 00 0c 	mcall	80002734 <writeData_unsafe+0x34>
	set_LCD_Data(data >> 8);
8000270a:	ee 0c 14 08 	asr	r12,r7,0x8
8000270e:	f0 1f 00 0b 	mcall	80002738 <writeData_unsafe+0x38>
	gpio_clr_gpio_pin(LCD_WR); //wr low
80002712:	32 0c       	mov	r12,32
80002714:	f0 1f 00 0a 	mcall	8000273c <writeData_unsafe+0x3c>
	gpio_set_gpio_pin(LCD_WR); //wr high
80002718:	32 0c       	mov	r12,32
8000271a:	f0 1f 00 0a 	mcall	80002740 <writeData_unsafe+0x40>
	set_LCD_Data(data);
8000271e:	0e 9c       	mov	r12,r7
80002720:	f0 1f 00 06 	mcall	80002738 <writeData_unsafe+0x38>
	gpio_clr_gpio_pin(LCD_WR); //wr low
80002724:	32 0c       	mov	r12,32
80002726:	f0 1f 00 06 	mcall	8000273c <writeData_unsafe+0x3c>
	gpio_set_gpio_pin(LCD_WR); //wr high
8000272a:	32 0c       	mov	r12,32
8000272c:	f0 1f 00 05 	mcall	80002740 <writeData_unsafe+0x40>
}
80002730:	e3 cd 80 80 	ldm	sp++,r7,pc
80002734:	80 00       	ld.sh	r0,r0[0x0]
80002736:	26 b8       	sub	r8,107
80002738:	80 00       	ld.sh	r0,r0[0x0]
8000273a:	24 d4       	sub	r4,77
8000273c:	80 00       	ld.sh	r0,r0[0x0]
8000273e:	23 36       	sub	r6,51
80002740:	80 00       	ld.sh	r0,r0[0x0]
80002742:	23 1a       	sub	r10,49

80002744 <writeData>:
	gpio_clr_gpio_pin(LCD_WR); //wr low
	gpio_set_gpio_pin(LCD_WR); //wr high
	gpio_set_gpio_pin(LCD_RS); //rs high
}

void writeData(int data) {
80002744:	eb cd 40 80 	pushm	r7,lr
80002748:	18 97       	mov	r7,r12
	set_LCD_data_out();
8000274a:	f0 1f 00 0e 	mcall	80002780 <writeData+0x3c>
	set_LCD_Data(data >> 8);
8000274e:	ee 0c 14 08 	asr	r12,r7,0x8
80002752:	f0 1f 00 0d 	mcall	80002784 <writeData+0x40>
	gpio_clr_gpio_pin(LCD_WR); //wr low
80002756:	32 0c       	mov	r12,32
80002758:	f0 1f 00 0c 	mcall	80002788 <writeData+0x44>
	gpio_set_gpio_pin(LCD_WR); //wr high
8000275c:	32 0c       	mov	r12,32
8000275e:	f0 1f 00 0c 	mcall	8000278c <writeData+0x48>
	set_LCD_Data(data);
80002762:	0e 9c       	mov	r12,r7
80002764:	f0 1f 00 08 	mcall	80002784 <writeData+0x40>
	gpio_clr_gpio_pin(LCD_WR); //wr low
80002768:	32 0c       	mov	r12,32
8000276a:	f0 1f 00 08 	mcall	80002788 <writeData+0x44>
	gpio_set_gpio_pin(LCD_WR); //wr high
8000276e:	32 0c       	mov	r12,32
80002770:	f0 1f 00 07 	mcall	8000278c <writeData+0x48>
	gpio_set_gpio_pin(LCD_CS); //cs high
80002774:	35 2c       	mov	r12,82
80002776:	f0 1f 00 06 	mcall	8000278c <writeData+0x48>
}
8000277a:	e3 cd 80 80 	ldm	sp++,r7,pc
8000277e:	00 00       	add	r0,r0
80002780:	80 00       	ld.sh	r0,r0[0x0]
80002782:	26 b8       	sub	r8,107
80002784:	80 00       	ld.sh	r0,r0[0x0]
80002786:	24 d4       	sub	r4,77
80002788:	80 00       	ld.sh	r0,r0[0x0]
8000278a:	23 36       	sub	r6,51
8000278c:	80 00       	ld.sh	r0,r0[0x0]
8000278e:	23 1a       	sub	r10,49

80002790 <writeCommand>:
	gpio_set_gpio_pin(LCD_WR); //wr
	gpio_set_gpio_pin(LCD_RST); //reset
}


void writeCommand(int cmd) {
80002790:	eb cd 40 80 	pushm	r7,lr
80002794:	18 97       	mov	r7,r12
	set_LCD_data_out();
80002796:	f0 1f 00 13 	mcall	800027e0 <writeCommand+0x50>
	gpio_set_gpio_pin(LCD_RD); //rd high
8000279a:	31 cc       	mov	r12,28
8000279c:	f0 1f 00 12 	mcall	800027e4 <writeCommand+0x54>
	gpio_set_gpio_pin(LCD_WR); //wr high
800027a0:	32 0c       	mov	r12,32
800027a2:	f0 1f 00 11 	mcall	800027e4 <writeCommand+0x54>
	gpio_clr_gpio_pin(LCD_CS); //cs low
800027a6:	35 2c       	mov	r12,82
800027a8:	f0 1f 00 10 	mcall	800027e8 <writeCommand+0x58>
	set_LCD_Data(0x0);
800027ac:	30 0c       	mov	r12,0
800027ae:	f0 1f 00 10 	mcall	800027ec <writeCommand+0x5c>
	gpio_clr_gpio_pin(LCD_RS); //rs low
800027b2:	32 1c       	mov	r12,33
800027b4:	f0 1f 00 0d 	mcall	800027e8 <writeCommand+0x58>
	gpio_clr_gpio_pin(LCD_WR); //wr low
800027b8:	32 0c       	mov	r12,32
800027ba:	f0 1f 00 0c 	mcall	800027e8 <writeCommand+0x58>
	gpio_set_gpio_pin(LCD_WR); //wr high
800027be:	32 0c       	mov	r12,32
800027c0:	f0 1f 00 09 	mcall	800027e4 <writeCommand+0x54>
	set_LCD_Data(cmd);
800027c4:	0e 9c       	mov	r12,r7
800027c6:	f0 1f 00 0a 	mcall	800027ec <writeCommand+0x5c>
	gpio_clr_gpio_pin(LCD_WR); //wr low
800027ca:	32 0c       	mov	r12,32
800027cc:	f0 1f 00 07 	mcall	800027e8 <writeCommand+0x58>
	gpio_set_gpio_pin(LCD_WR); //wr high
800027d0:	32 0c       	mov	r12,32
800027d2:	f0 1f 00 05 	mcall	800027e4 <writeCommand+0x54>
	gpio_set_gpio_pin(LCD_RS); //rs high
800027d6:	32 1c       	mov	r12,33
800027d8:	f0 1f 00 03 	mcall	800027e4 <writeCommand+0x54>
}
800027dc:	e3 cd 80 80 	ldm	sp++,r7,pc
800027e0:	80 00       	ld.sh	r0,r0[0x0]
800027e2:	26 b8       	sub	r8,107
800027e4:	80 00       	ld.sh	r0,r0[0x0]
800027e6:	23 1a       	sub	r10,49
800027e8:	80 00       	ld.sh	r0,r0[0x0]
800027ea:	23 36       	sub	r6,51
800027ec:	80 00       	ld.sh	r0,r0[0x0]
800027ee:	24 d4       	sub	r4,77

800027f0 <writeRegister>:
	final_data |= data_reg;
	gpio_set_gpio_pin(LCD_RD); //rd high
	gpio_set_gpio_pin(LCD_CS); //cs high
}

void writeRegister(int addr, int data) {
800027f0:	eb cd 40 80 	pushm	r7,lr
800027f4:	16 97       	mov	r7,r11
	writeCommand(addr);
800027f6:	f0 1f 00 04 	mcall	80002804 <writeRegister+0x14>
	writeData(data);
800027fa:	0e 9c       	mov	r12,r7
800027fc:	f0 1f 00 03 	mcall	80002808 <writeRegister+0x18>
}
80002800:	e3 cd 80 80 	ldm	sp++,r7,pc
80002804:	80 00       	ld.sh	r0,r0[0x0]
80002806:	27 90       	sub	r0,121
80002808:	80 00       	ld.sh	r0,r0[0x0]
8000280a:	27 44       	sub	r4,116

8000280c <drawPixel>:
	writeRegister(TFTLCD_GRAM_VER_AD, y); // GRAM Address Set (Vertical Address) (R21h)
	writeCommand(TFTLCD_RW_GRAM); // Write Data to GRAM (R22h)
}

void drawPixel(int x, int y, int color)
{
8000280c:	eb cd 40 c0 	pushm	r6-r7,lr
80002810:	16 96       	mov	r6,r11
80002812:	14 97       	mov	r7,r10
	writeRegister(TFTLCD_GRAM_HOR_AD, x);
80002814:	18 9b       	mov	r11,r12
80002816:	32 0c       	mov	r12,32
80002818:	f0 1f 00 06 	mcall	80002830 <drawPixel+0x24>
	writeRegister(TFTLCD_GRAM_VER_AD, y);
8000281c:	0c 9b       	mov	r11,r6
8000281e:	32 1c       	mov	r12,33
80002820:	f0 1f 00 04 	mcall	80002830 <drawPixel+0x24>
	writeRegister(TFTLCD_RW_GRAM, color);
80002824:	0e 9b       	mov	r11,r7
80002826:	32 2c       	mov	r12,34
80002828:	f0 1f 00 02 	mcall	80002830 <drawPixel+0x24>
}
8000282c:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002830:	80 00       	ld.sh	r0,r0[0x0]
80002832:	27 f0       	sub	r0,127

80002834 <drawFastLine>:
	gpio_set_gpio_pin(LCD_CS); //cs high

}

void drawFastLine(int x, int y, int length, int color, int orientation)
{
80002834:	d4 21       	pushm	r4-r7,lr
80002836:	18 94       	mov	r4,r12
80002838:	16 95       	mov	r5,r11
8000283a:	14 96       	mov	r6,r10
8000283c:	12 97       	mov	r7,r9
	if (orientation == 0)
		entrymode = 0x1030;	//horizontal line
	else
		entrymode = 0x1028;	//vertical line
		
	writeRegister(TFTLCD_ENTRY_MOD, entrymode);
8000283e:	e0 69 10 28 	mov	r9,4136
80002842:	e0 6b 10 30 	mov	r11,4144
80002846:	58 08       	cp.w	r8,0
80002848:	f2 0b 17 10 	movne	r11,r9
8000284c:	30 3c       	mov	r12,3
8000284e:	f0 1f 00 14 	mcall	8000289c <drawFastLine+0x68>
	
	writeRegister(TFTLCD_GRAM_HOR_AD, x);
80002852:	08 9b       	mov	r11,r4
80002854:	32 0c       	mov	r12,32
80002856:	f0 1f 00 12 	mcall	8000289c <drawFastLine+0x68>
	writeRegister(TFTLCD_GRAM_VER_AD, y);
8000285a:	0a 9b       	mov	r11,r5
8000285c:	32 1c       	mov	r12,33
8000285e:	f0 1f 00 10 	mcall	8000289c <drawFastLine+0x68>
	writeCommand(TFTLCD_RW_GRAM);
80002862:	32 2c       	mov	r12,34
80002864:	f0 1f 00 0f 	mcall	800028a0 <drawFastLine+0x6c>
	
	gpio_set_gpio_pin(LCD_RS); //rs high
80002868:	32 1c       	mov	r12,33
8000286a:	f0 1f 00 0f 	mcall	800028a4 <drawFastLine+0x70>
	gpio_set_gpio_pin(LCD_RD); //rd high
8000286e:	31 cc       	mov	r12,28
80002870:	f0 1f 00 0d 	mcall	800028a4 <drawFastLine+0x70>
	gpio_set_gpio_pin(LCD_WR); //wr high
80002874:	32 0c       	mov	r12,32
80002876:	f0 1f 00 0c 	mcall	800028a4 <drawFastLine+0x70>
	
	while(length--)
8000287a:	58 06       	cp.w	r6,0
8000287c:	c0 60       	breq	80002888 <drawFastLine+0x54>
	{
		writeData_unsafe(color);
8000287e:	0e 9c       	mov	r12,r7
80002880:	f0 1f 00 0a 	mcall	800028a8 <drawFastLine+0x74>
80002884:	20 16       	sub	r6,1
	
	gpio_set_gpio_pin(LCD_RS); //rs high
	gpio_set_gpio_pin(LCD_RD); //rd high
	gpio_set_gpio_pin(LCD_WR); //wr high
	
	while(length--)
80002886:	cf c1       	brne	8000287e <drawFastLine+0x4a>
	{
		writeData_unsafe(color);
	}
	
	gpio_set_gpio_pin(LCD_CS); //cs high
80002888:	35 2c       	mov	r12,82
8000288a:	f0 1f 00 07 	mcall	800028a4 <drawFastLine+0x70>
	writeRegister(TFTLCD_ENTRY_MOD, 0x1030);
8000288e:	e0 6b 10 30 	mov	r11,4144
80002892:	30 3c       	mov	r12,3
80002894:	f0 1f 00 02 	mcall	8000289c <drawFastLine+0x68>
	
}
80002898:	d8 22       	popm	r4-r7,pc
8000289a:	00 00       	add	r0,r0
8000289c:	80 00       	ld.sh	r0,r0[0x0]
8000289e:	27 f0       	sub	r0,127
800028a0:	80 00       	ld.sh	r0,r0[0x0]
800028a2:	27 90       	sub	r0,121
800028a4:	80 00       	ld.sh	r0,r0[0x0]
800028a6:	23 1a       	sub	r10,49
800028a8:	80 00       	ld.sh	r0,r0[0x0]
800028aa:	27 00       	sub	r0,112

800028ac <drawHorzLine>:
{
	drawFastLine(x, y, length, color, 1);
}

void drawHorzLine(int x, int y, int length, int color)
{
800028ac:	d4 01       	pushm	lr
	drawFastLine(x, y, length, color, 0);
800028ae:	30 08       	mov	r8,0
800028b0:	f0 1f 00 02 	mcall	800028b8 <drawHorzLine+0xc>
}
800028b4:	d8 02       	popm	pc
800028b6:	00 00       	add	r0,r0
800028b8:	80 00       	ld.sh	r0,r0[0x0]
800028ba:	28 34       	sub	r4,-125

800028bc <fillRect>:

void fillRect(int x, int y, int w, int h, int color)
{
800028bc:	eb cd 40 f8 	pushm	r3-r7,lr
800028c0:	18 93       	mov	r3,r12
800028c2:	14 94       	mov	r4,r10
800028c4:	10 95       	mov	r5,r8
	while (h--)
800028c6:	58 09       	cp.w	r9,0
800028c8:	c0 d0       	breq	800028e2 <fillRect+0x26>
800028ca:	12 97       	mov	r7,r9
	{
		drawHorzLine(x, y++, w, color);
800028cc:	f6 c6 ff ff 	sub	r6,r11,-1
800028d0:	0a 99       	mov	r9,r5
800028d2:	08 9a       	mov	r10,r4
800028d4:	06 9c       	mov	r12,r3
800028d6:	f0 1f 00 05 	mcall	800028e8 <fillRect+0x2c>
800028da:	20 17       	sub	r7,1
	drawFastLine(x, y, length, color, 0);
}

void fillRect(int x, int y, int w, int h, int color)
{
	while (h--)
800028dc:	c0 30       	breq	800028e2 <fillRect+0x26>
800028de:	0c 9b       	mov	r11,r6
800028e0:	cf 6b       	rjmp	800028cc <fillRect+0x10>
800028e2:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
800028e6:	00 00       	add	r0,r0
800028e8:	80 00       	ld.sh	r0,r0[0x0]
800028ea:	28 ac       	sub	r12,-118

800028ec <drawChar>:
		drawHorzLine(x, y++, w, color);
	}
}

void drawChar(int x, int y, unsigned char c, int color, int bg, int size)
{
800028ec:	d4 31       	pushm	r0-r7,lr
800028ee:	20 6d       	sub	sp,24
800028f0:	12 91       	mov	r1,r9
800028f2:	10 90       	mov	r0,r8
800028f4:	40 f3       	lddsp	r3,sp[0x3c]
	int i, j;
	if ((x >= 240) || (y >= 320) || ((x + 5 * size - 1) < 0) || ((y + 8 * size - 1) < 0))
800028f6:	e0 4c 00 ef 	cp.w	r12,239
800028fa:	5f 99       	srgt	r9
800028fc:	e0 4b 01 3f 	cp.w	r11,319
80002900:	5f 98       	srgt	r8
80002902:	f3 e8 10 08 	or	r8,r9,r8
80002906:	c6 01       	brne	800029c6 <drawChar+0xda>
80002908:	f8 c9 00 01 	sub	r9,r12,1
8000290c:	e6 03 00 28 	add	r8,r3,r3<<0x2
80002910:	f2 08 00 08 	add	r8,r9,r8
80002914:	c5 96       	brmi	800029c6 <drawChar+0xda>
80002916:	f6 c8 00 01 	sub	r8,r11,1
8000291a:	f0 03 00 38 	add	r8,r8,r3<<0x3
8000291e:	c5 46       	brmi	800029c6 <drawChar+0xda>
	{
		drawHorzLine(x, y++, w, color);
	}
}

void drawChar(int x, int y, unsigned char c, int color, int bg, int size)
80002920:	06 92       	mov	r2,r3
80002922:	50 4c       	stdsp	sp[0x10],r12
80002924:	f4 0a 00 2a 	add	r10,r10,r10<<0x2
80002928:	4a 98       	lddpc	r8,800029cc <drawChar+0xe0>
8000292a:	f0 0a 00 0a 	add	r10,r8,r10
8000292e:	50 3a       	stdsp	sp[0xc],r10
80002930:	50 1c       	stdsp	sp[0x4],r12
80002932:	30 08       	mov	r8,0
80002934:	50 28       	stdsp	sp[0x8],r8
	{
		int line;
		if (i == 5)
			line = 0x0;
		else
			line = glcdfont[(c*5) + i];
80002936:	50 5b       	stdsp	sp[0x14],r11
		return;
		
	for (i = 0; i < 6; i++)
	{
		int line;
		if (i == 5)
80002938:	40 28       	lddsp	r8,sp[0x8]
8000293a:	58 58       	cp.w	r8,5
8000293c:	f9 b6 00 00 	moveq	r6,0
			line = 0x0;
		else
			line = glcdfont[(c*5) + i];
80002940:	fb f8 10 03 	ld.wne	r8,sp[0xc]
80002944:	f1 f6 18 00 	ld.ubne	r6,r8[0x0]
80002948:	40 48       	lddsp	r8,sp[0x10]
8000294a:	50 08       	stdsp	sp[0x0],r8
8000294c:	40 55       	lddsp	r5,sp[0x14]
8000294e:	0a 94       	mov	r4,r5
80002950:	30 07       	mov	r7,0
		for (j = 0; j < 8; j++)
		{
			if (line & 0x1)
80002952:	f1 d6 c0 01 	bfextu	r8,r6,0x0,0x1
80002956:	c1 10       	breq	80002978 <drawChar+0x8c>
			{
				if (size == 1)
80002958:	58 13       	cp.w	r3,1
8000295a:	c0 71       	brne	80002968 <drawChar+0x7c>
					drawPixel((x+i), (y+j), color);
8000295c:	02 9a       	mov	r10,r1
8000295e:	08 9b       	mov	r11,r4
80002960:	40 1c       	lddsp	r12,sp[0x4]
80002962:	f0 1f 00 1c 	mcall	800029d0 <drawChar+0xe4>
80002966:	c1 a8       	rjmp	8000299a <drawChar+0xae>
				else
					fillRect((x+(i*size)), (y+(j*size)), size, size, color);
80002968:	02 98       	mov	r8,r1
8000296a:	06 99       	mov	r9,r3
8000296c:	06 9a       	mov	r10,r3
8000296e:	0a 9b       	mov	r11,r5
80002970:	40 0c       	lddsp	r12,sp[0x0]
80002972:	f0 1f 00 19 	mcall	800029d4 <drawChar+0xe8>
80002976:	c1 28       	rjmp	8000299a <drawChar+0xae>
			}
			else if (bg != color)
80002978:	02 30       	cp.w	r0,r1
8000297a:	c1 00       	breq	8000299a <drawChar+0xae>
			{
				if (size == 1)
8000297c:	58 13       	cp.w	r3,1
8000297e:	c0 71       	brne	8000298c <drawChar+0xa0>
					drawPixel((x+i), (y+j), bg);
80002980:	00 9a       	mov	r10,r0
80002982:	08 9b       	mov	r11,r4
80002984:	40 1c       	lddsp	r12,sp[0x4]
80002986:	f0 1f 00 13 	mcall	800029d0 <drawChar+0xe4>
8000298a:	c0 88       	rjmp	8000299a <drawChar+0xae>
				else
					fillRect((x+(i*size)), (y+(j*size)), size, size, bg);
8000298c:	00 98       	mov	r8,r0
8000298e:	06 99       	mov	r9,r3
80002990:	06 9a       	mov	r10,r3
80002992:	0a 9b       	mov	r11,r5
80002994:	40 0c       	lddsp	r12,sp[0x0]
80002996:	f0 1f 00 10 	mcall	800029d4 <drawChar+0xe8>
		int line;
		if (i == 5)
			line = 0x0;
		else
			line = glcdfont[(c*5) + i];
		for (j = 0; j < 8; j++)
8000299a:	2f f7       	sub	r7,-1
8000299c:	04 05       	add	r5,r2
8000299e:	2f f4       	sub	r4,-1
800029a0:	58 87       	cp.w	r7,8
800029a2:	c0 30       	breq	800029a8 <drawChar+0xbc>
					drawPixel((x+i), (y+j), bg);
				else
					fillRect((x+(i*size)), (y+(j*size)), size, size, bg);
			}
			
			line >>= 1;
800029a4:	a1 56       	asr	r6,0x1
800029a6:	cd 6b       	rjmp	80002952 <drawChar+0x66>
{
	int i, j;
	if ((x >= 240) || (y >= 320) || ((x + 5 * size - 1) < 0) || ((y + 8 * size - 1) < 0))
		return;
		
	for (i = 0; i < 6; i++)
800029a8:	40 28       	lddsp	r8,sp[0x8]
800029aa:	2f f8       	sub	r8,-1
800029ac:	50 28       	stdsp	sp[0x8],r8
800029ae:	40 48       	lddsp	r8,sp[0x10]
800029b0:	04 08       	add	r8,r2
800029b2:	50 48       	stdsp	sp[0x10],r8
800029b4:	40 18       	lddsp	r8,sp[0x4]
800029b6:	2f f8       	sub	r8,-1
800029b8:	50 18       	stdsp	sp[0x4],r8
800029ba:	40 38       	lddsp	r8,sp[0xc]
800029bc:	2f f8       	sub	r8,-1
800029be:	50 38       	stdsp	sp[0xc],r8
800029c0:	40 28       	lddsp	r8,sp[0x8]
800029c2:	58 68       	cp.w	r8,6
800029c4:	cb a1       	brne	80002938 <drawChar+0x4c>
			}
			
			line >>= 1;
		}
	}	
}
800029c6:	2f ad       	sub	sp,-24
800029c8:	d8 32       	popm	r0-r7,pc
800029ca:	00 00       	add	r0,r0
800029cc:	80 00       	ld.sh	r0,r0[0x0]
800029ce:	8f 30       	st.w	r7[0xc],r0
800029d0:	80 00       	ld.sh	r0,r0[0x0]
800029d2:	28 0c       	sub	r12,-128
800029d4:	80 00       	ld.sh	r0,r0[0x0]
800029d6:	28 bc       	sub	r12,-117

800029d8 <drawCharArray>:

void drawCharArray(int x, int y, char * text, int length)
{
800029d8:	d4 31       	pushm	r0-r7,lr
800029da:	14 91       	mov	r1,r10
800029dc:	12 92       	mov	r2,r9
	int i, xsofar, ysofar;
	
	xsofar = x;
	ysofar = y;
	for (i = 0; i < length; i++)
800029de:	58 09       	cp.w	r9,0
800029e0:	e0 8a 00 38 	brle	80002a50 <drawCharArray+0x78>
800029e4:	18 97       	mov	r7,r12
800029e6:	16 94       	mov	r4,r11
800029e8:	30 05       	mov	r5,0
	{
		if (text[i] == '\n')
800029ea:	30 a3       	mov	r3,10
		if ((xsofar >= 240) || ((xsofar + ((6*text_size)-1)) > 240))
		{
			ysofar = ysofar + (8*text_size);
			xsofar = 0;
		}			
		drawChar(xsofar, ysofar, text[i], font_color, bg_color, text_size);
800029ec:	49 a6       	lddpc	r6,80002a54 <drawCharArray+0x7c>
			xsofar = 0;
			continue;
		}
		if ((xsofar >= 240) || ((xsofar + ((6*text_size)-1)) > 240))
		{
			ysofar = ysofar + (8*text_size);
800029ee:	0a 90       	mov	r0,r5
	
	xsofar = x;
	ysofar = y;
	for (i = 0; i < length; i++)
	{
		if (text[i] == '\n')
800029f0:	e2 05 07 0a 	ld.ub	r10,r1[r5]
800029f4:	e6 0a 18 00 	cp.b	r10,r3
800029f8:	c0 61       	brne	80002a04 <drawCharArray+0x2c>
		{
			ysofar = ysofar + (8*text_size);
800029fa:	6c 08       	ld.w	r8,r6[0x0]
800029fc:	e8 08 00 34 	add	r4,r4,r8<<0x3
80002a00:	00 97       	mov	r7,r0
			xsofar = 0;
			continue;
80002a02:	c2 38       	rjmp	80002a48 <drawCharArray+0x70>
		}
		if ((xsofar >= 240) || ((xsofar + ((6*text_size)-1)) > 240))
80002a04:	e0 47 00 ef 	cp.w	r7,239
80002a08:	e0 89 00 0c 	brgt	80002a20 <drawCharArray+0x48>
80002a0c:	6c 08       	ld.w	r8,r6[0x0]
80002a0e:	f0 08 00 18 	add	r8,r8,r8<<0x1
80002a12:	a1 78       	lsl	r8,0x1
80002a14:	20 18       	sub	r8,1
80002a16:	0e 08       	add	r8,r7
80002a18:	e0 48 00 f0 	cp.w	r8,240
80002a1c:	e0 8a 00 06 	brle	80002a28 <drawCharArray+0x50>
		{
			ysofar = ysofar + (8*text_size);
80002a20:	6c 08       	ld.w	r8,r6[0x0]
80002a22:	e8 08 00 34 	add	r4,r4,r8<<0x3
80002a26:	00 97       	mov	r7,r0
			xsofar = 0;
		}			
		drawChar(xsofar, ysofar, text[i], font_color, bg_color, text_size);
80002a28:	6c 08       	ld.w	r8,r6[0x0]
80002a2a:	1a d8       	st.w	--sp,r8
80002a2c:	48 bb       	lddpc	r11,80002a58 <drawCharArray+0x80>
80002a2e:	76 08       	ld.w	r8,r11[0x0]
80002a30:	48 bb       	lddpc	r11,80002a5c <drawCharArray+0x84>
80002a32:	76 09       	ld.w	r9,r11[0x0]
80002a34:	08 9b       	mov	r11,r4
80002a36:	0e 9c       	mov	r12,r7
80002a38:	f0 1f 00 0a 	mcall	80002a60 <drawCharArray+0x88>
		xsofar = xsofar + (6*text_size); 
80002a3c:	6c 08       	ld.w	r8,r6[0x0]
80002a3e:	f0 08 00 18 	add	r8,r8,r8<<0x1
80002a42:	ee 08 00 17 	add	r7,r7,r8<<0x1
80002a46:	2f fd       	sub	sp,-4
{
	int i, xsofar, ysofar;
	
	xsofar = x;
	ysofar = y;
	for (i = 0; i < length; i++)
80002a48:	2f f5       	sub	r5,-1
80002a4a:	0a 32       	cp.w	r2,r5
80002a4c:	fe 99 ff d2 	brgt	800029f0 <drawCharArray+0x18>
80002a50:	d8 32       	popm	r0-r7,pc
80002a52:	00 00       	add	r0,r0
80002a54:	00 00       	add	r0,r0
80002a56:	00 04       	add	r4,r0
80002a58:	00 00       	add	r0,r0
80002a5a:	06 08       	add	r8,r3
80002a5c:	00 00       	add	r0,r0
80002a5e:	00 0c       	add	r12,r0
80002a60:	80 00       	ld.sh	r0,r0[0x0]
80002a62:	28 ec       	sub	r12,-114

80002a64 <goTo>:
void readRegister(int addr) {
	writeCommand(addr);
	readData();
}

void goTo(int x, int y) {
80002a64:	eb cd 40 80 	pushm	r7,lr
80002a68:	16 97       	mov	r7,r11
	writeRegister(TFTLCD_GRAM_HOR_AD, x); // GRAM Address Set (Horizontal Address) (R20h)
80002a6a:	18 9b       	mov	r11,r12
80002a6c:	32 0c       	mov	r12,32
80002a6e:	f0 1f 00 06 	mcall	80002a84 <goTo+0x20>
	writeRegister(TFTLCD_GRAM_VER_AD, y); // GRAM Address Set (Vertical Address) (R21h)
80002a72:	0e 9b       	mov	r11,r7
80002a74:	32 1c       	mov	r12,33
80002a76:	f0 1f 00 04 	mcall	80002a84 <goTo+0x20>
	writeCommand(TFTLCD_RW_GRAM); // Write Data to GRAM (R22h)
80002a7a:	32 2c       	mov	r12,34
80002a7c:	f0 1f 00 03 	mcall	80002a88 <goTo+0x24>
}
80002a80:	e3 cd 80 80 	ldm	sp++,r7,pc
80002a84:	80 00       	ld.sh	r0,r0[0x0]
80002a86:	27 f0       	sub	r0,127
80002a88:	80 00       	ld.sh	r0,r0[0x0]
80002a8a:	27 90       	sub	r0,121

80002a8c <fillScreen>:
	writeRegister(TFTLCD_GRAM_HOR_AD, x);
	writeRegister(TFTLCD_GRAM_VER_AD, y);
	writeRegister(TFTLCD_RW_GRAM, color);
}

void fillScreen(int color) {
80002a8c:	eb cd 40 c0 	pushm	r6-r7,lr
80002a90:	18 96       	mov	r6,r12
	goTo(0,0);
80002a92:	30 0b       	mov	r11,0
80002a94:	16 9c       	mov	r12,r11
80002a96:	f0 1f 00 0e 	mcall	80002acc <fillScreen+0x40>
	int i;

	i = 320;
	i *= 240;

	gpio_clr_gpio_pin(LCD_CS); //cs low
80002a9a:	35 2c       	mov	r12,82
80002a9c:	f0 1f 00 0d 	mcall	80002ad0 <fillScreen+0x44>
	gpio_set_gpio_pin(LCD_RS); //rs high
80002aa0:	32 1c       	mov	r12,33
80002aa2:	f0 1f 00 0d 	mcall	80002ad4 <fillScreen+0x48>
	gpio_set_gpio_pin(LCD_RD); //rd high
80002aa6:	31 cc       	mov	r12,28
80002aa8:	f0 1f 00 0b 	mcall	80002ad4 <fillScreen+0x48>
	gpio_set_gpio_pin(LCD_WR); //wr high
80002aac:	32 0c       	mov	r12,32
80002aae:	f0 1f 00 0a 	mcall	80002ad4 <fillScreen+0x48>
80002ab2:	e0 77 2b ff 	mov	r7,76799
	while (i--) {
		writeData_unsafe(color);
80002ab6:	0c 9c       	mov	r12,r6
80002ab8:	f0 1f 00 08 	mcall	80002ad8 <fillScreen+0x4c>

	gpio_clr_gpio_pin(LCD_CS); //cs low
	gpio_set_gpio_pin(LCD_RS); //rs high
	gpio_set_gpio_pin(LCD_RD); //rd high
	gpio_set_gpio_pin(LCD_WR); //wr high
	while (i--) {
80002abc:	20 17       	sub	r7,1
80002abe:	5b f7       	cp.w	r7,-1
80002ac0:	cf b1       	brne	80002ab6 <fillScreen+0x2a>
		writeData_unsafe(color);
	}
	gpio_set_gpio_pin(LCD_CS); //cs high
80002ac2:	35 2c       	mov	r12,82
80002ac4:	f0 1f 00 04 	mcall	80002ad4 <fillScreen+0x48>

}
80002ac8:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002acc:	80 00       	ld.sh	r0,r0[0x0]
80002ace:	2a 64       	sub	r4,-90
80002ad0:	80 00       	ld.sh	r0,r0[0x0]
80002ad2:	23 36       	sub	r6,51
80002ad4:	80 00       	ld.sh	r0,r0[0x0]
80002ad6:	23 1a       	sub	r10,49
80002ad8:	80 00       	ld.sh	r0,r0[0x0]
80002ada:	27 00       	sub	r0,112

80002adc <set_LCD_data_in>:
	}
}


void set_LCD_data_in()
{
80002adc:	d4 01       	pushm	lr
	gpio_configure_pin(LCD_DATA0, GPIO_DIR_INPUT);
80002ade:	30 0b       	mov	r11,0
80002ae0:	32 2c       	mov	r12,34
80002ae2:	f0 1f 00 10 	mcall	80002b20 <set_LCD_data_in+0x44>
	gpio_configure_pin(LCD_DATA1, GPIO_DIR_INPUT);
80002ae6:	30 0b       	mov	r11,0
80002ae8:	32 3c       	mov	r12,35
80002aea:	f0 1f 00 0e 	mcall	80002b20 <set_LCD_data_in+0x44>
	gpio_configure_pin(LCD_DATA2, GPIO_DIR_INPUT);
80002aee:	30 0b       	mov	r11,0
80002af0:	32 4c       	mov	r12,36
80002af2:	f0 1f 00 0c 	mcall	80002b20 <set_LCD_data_in+0x44>
	gpio_configure_pin(LCD_DATA3, GPIO_DIR_INPUT);
80002af6:	30 0b       	mov	r11,0
80002af8:	32 5c       	mov	r12,37
80002afa:	f0 1f 00 0a 	mcall	80002b20 <set_LCD_data_in+0x44>
	gpio_configure_pin(LCD_DATA4, GPIO_DIR_INPUT);
80002afe:	30 0b       	mov	r11,0
80002b00:	32 6c       	mov	r12,38
80002b02:	f0 1f 00 08 	mcall	80002b20 <set_LCD_data_in+0x44>
	gpio_configure_pin(LCD_DATA5, GPIO_DIR_INPUT);
80002b06:	30 0b       	mov	r11,0
80002b08:	32 7c       	mov	r12,39
80002b0a:	f0 1f 00 06 	mcall	80002b20 <set_LCD_data_in+0x44>
	gpio_configure_pin(LCD_DATA6, GPIO_DIR_INPUT);
80002b0e:	30 0b       	mov	r11,0
80002b10:	32 8c       	mov	r12,40
80002b12:	f0 1f 00 04 	mcall	80002b20 <set_LCD_data_in+0x44>
	gpio_configure_pin(LCD_DATA7, GPIO_DIR_INPUT);
80002b16:	30 0b       	mov	r11,0
80002b18:	32 9c       	mov	r12,41
80002b1a:	f0 1f 00 02 	mcall	80002b20 <set_LCD_data_in+0x44>
}
80002b1e:	d8 02       	popm	pc
80002b20:	80 00       	ld.sh	r0,r0[0x0]
80002b22:	22 4c       	sub	r12,36

80002b24 <readData>:
	set_LCD_Data(data);
	gpio_clr_gpio_pin(LCD_WR); //wr low
	gpio_set_gpio_pin(LCD_WR); //wr high
}

void readData() {
80002b24:	d4 01       	pushm	lr

	gpio_clr_gpio_pin(LCD_RD); //rd low
80002b26:	31 cc       	mov	r12,28
80002b28:	f0 1f 00 26 	mcall	80002bc0 <readData+0x9c>
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002b2c:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002b30:	f0 ca ff 8c 	sub	r10,r8,-116
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002b34:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occured.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002b38:	14 38       	cp.w	r8,r10
80002b3a:	e0 88 00 08 	brls	80002b4a <readData+0x26>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002b3e:	12 38       	cp.w	r8,r9
80002b40:	fe 98 ff fa 	brls	80002b34 <readData+0x10>
80002b44:	12 3a       	cp.w	r10,r9
80002b46:	c1 93       	brcs	80002b78 <readData+0x54>
80002b48:	cf 6b       	rjmp	80002b34 <readData+0x10>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002b4a:	12 38       	cp.w	r8,r9
80002b4c:	e0 8b 00 16 	brhi	80002b78 <readData+0x54>
80002b50:	12 3a       	cp.w	r10,r9
80002b52:	c1 33       	brcs	80002b78 <readData+0x54>
80002b54:	cf 0b       	rjmp	80002b34 <readData+0x10>
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002b56:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occured.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002b5a:	14 38       	cp.w	r8,r10
80002b5c:	e0 88 00 08 	brls	80002b6c <readData+0x48>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002b60:	12 38       	cp.w	r8,r9
80002b62:	fe 98 ff fa 	brls	80002b56 <readData+0x32>
80002b66:	12 3a       	cp.w	r10,r9
80002b68:	c1 b3       	brcs	80002b9e <readData+0x7a>
80002b6a:	cf 6b       	rjmp	80002b56 <readData+0x32>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002b6c:	12 38       	cp.w	r8,r9
80002b6e:	e0 8b 00 18 	brhi	80002b9e <readData+0x7a>
80002b72:	12 3a       	cp.w	r10,r9
80002b74:	c1 53       	brcs	80002b9e <readData+0x7a>
80002b76:	cf 0b       	rjmp	80002b56 <readData+0x32>
	cpu_delay_ms(1, 115200);
	set_LCD_data_in();
80002b78:	f0 1f 00 13 	mcall	80002bc4 <readData+0xa0>
	get_LCD_Data();
80002b7c:	f0 1f 00 13 	mcall	80002bc8 <readData+0xa4>
	final_data = data_reg;
80002b80:	49 38       	lddpc	r8,80002bcc <readData+0xa8>
80002b82:	70 09       	ld.w	r9,r8[0x0]
80002b84:	49 38       	lddpc	r8,80002bd0 <readData+0xac>
80002b86:	91 09       	st.w	r8[0x0],r9
	gpio_set_gpio_pin(LCD_RD); //rd high
80002b88:	31 cc       	mov	r12,28
80002b8a:	f0 1f 00 13 	mcall	80002bd4 <readData+0xb0>
	gpio_clr_gpio_pin(LCD_RD); //rd low
80002b8e:	31 cc       	mov	r12,28
80002b90:	f0 1f 00 0c 	mcall	80002bc0 <readData+0x9c>
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002b94:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002b98:	f0 ca ff 8c 	sub	r10,r8,-116
80002b9c:	cd db       	rjmp	80002b56 <readData+0x32>
	cpu_delay_ms(1, 115200);
	get_LCD_Data();
80002b9e:	f0 1f 00 0b 	mcall	80002bc8 <readData+0xa4>
	final_data <<= 8;
	final_data |= data_reg;
80002ba2:	48 c8       	lddpc	r8,80002bd0 <readData+0xac>
80002ba4:	70 0a       	ld.w	r10,r8[0x0]
80002ba6:	48 a9       	lddpc	r9,80002bcc <readData+0xa8>
80002ba8:	72 09       	ld.w	r9,r9[0x0]
80002baa:	f3 ea 10 89 	or	r9,r9,r10<<0x8
80002bae:	91 09       	st.w	r8[0x0],r9
	gpio_set_gpio_pin(LCD_RD); //rd high
80002bb0:	31 cc       	mov	r12,28
80002bb2:	f0 1f 00 09 	mcall	80002bd4 <readData+0xb0>
	gpio_set_gpio_pin(LCD_CS); //cs high
80002bb6:	35 2c       	mov	r12,82
80002bb8:	f0 1f 00 07 	mcall	80002bd4 <readData+0xb0>
}
80002bbc:	d8 02       	popm	pc
80002bbe:	00 00       	add	r0,r0
80002bc0:	80 00       	ld.sh	r0,r0[0x0]
80002bc2:	23 36       	sub	r6,51
80002bc4:	80 00       	ld.sh	r0,r0[0x0]
80002bc6:	2a dc       	sub	r12,-83
80002bc8:	80 00       	ld.sh	r0,r0[0x0]
80002bca:	25 d4       	sub	r4,93
80002bcc:	00 00       	add	r0,r0
80002bce:	06 04       	add	r4,r3
80002bd0:	00 00       	add	r0,r0
80002bd2:	00 08       	add	r8,r0
80002bd4:	80 00       	ld.sh	r0,r0[0x0]
80002bd6:	23 1a       	sub	r10,49

80002bd8 <readRegister>:
void writeRegister(int addr, int data) {
	writeCommand(addr);
	writeData(data);
}

void readRegister(int addr) {
80002bd8:	d4 01       	pushm	lr
	writeCommand(addr);
80002bda:	f0 1f 00 03 	mcall	80002be4 <readRegister+0xc>
	readData();
80002bde:	f0 1f 00 03 	mcall	80002be8 <readRegister+0x10>
}
80002be2:	d8 02       	popm	pc
80002be4:	80 00       	ld.sh	r0,r0[0x0]
80002be6:	27 90       	sub	r0,121
80002be8:	80 00       	ld.sh	r0,r0[0x0]
80002bea:	2b 24       	sub	r4,-78

80002bec <initDisplay>:
	gpio_clr_gpio_pin(LCD_RST); //reset low
	cpu_delay_ms(50, 115200);
	gpio_set_gpio_pin(LCD_RST); //reset high
}

void initDisplay() {
80002bec:	d4 01       	pushm	lr
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002bee:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002bf2:	f0 ca d3 00 	sub	r10,r8,-11520
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002bf6:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occured.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002bfa:	14 38       	cp.w	r8,r10
80002bfc:	e0 88 00 08 	brls	80002c0c <initDisplay+0x20>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002c00:	12 38       	cp.w	r8,r9
80002c02:	fe 98 ff fa 	brls	80002bf6 <initDisplay+0xa>
80002c06:	12 3a       	cp.w	r10,r9
80002c08:	c6 13       	brcs	80002cca <initDisplay+0xde>
80002c0a:	cf 6b       	rjmp	80002bf6 <initDisplay+0xa>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002c0c:	12 38       	cp.w	r8,r9
80002c0e:	e0 8b 00 5e 	brhi	80002cca <initDisplay+0xde>
80002c12:	12 3a       	cp.w	r10,r9
80002c14:	c5 b3       	brcs	80002cca <initDisplay+0xde>
80002c16:	cf 0b       	rjmp	80002bf6 <initDisplay+0xa>
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002c18:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occured.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002c1c:	14 38       	cp.w	r8,r10
80002c1e:	e0 88 00 08 	brls	80002c2e <initDisplay+0x42>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002c22:	12 38       	cp.w	r8,r9
80002c24:	fe 98 ff fa 	brls	80002c18 <initDisplay+0x2c>
80002c28:	12 3a       	cp.w	r10,r9
80002c2a:	c5 c3       	brcs	80002ce2 <initDisplay+0xf6>
80002c2c:	cf 6b       	rjmp	80002c18 <initDisplay+0x2c>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002c2e:	12 38       	cp.w	r8,r9
80002c30:	e0 8b 00 59 	brhi	80002ce2 <initDisplay+0xf6>
80002c34:	12 3a       	cp.w	r10,r9
80002c36:	c5 63       	brcs	80002ce2 <initDisplay+0xf6>
80002c38:	cf 0b       	rjmp	80002c18 <initDisplay+0x2c>
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002c3a:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occured.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002c3e:	14 38       	cp.w	r8,r10
80002c40:	e0 88 00 09 	brls	80002c52 <initDisplay+0x66>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002c44:	12 38       	cp.w	r8,r9
80002c46:	fe 98 ff fa 	brls	80002c3a <initDisplay+0x4e>
80002c4a:	12 3a       	cp.w	r10,r9
80002c4c:	e0 83 00 8c 	brlo	80002d64 <initDisplay+0x178>
80002c50:	cf 5b       	rjmp	80002c3a <initDisplay+0x4e>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002c52:	12 38       	cp.w	r8,r9
80002c54:	e0 8b 00 88 	brhi	80002d64 <initDisplay+0x178>
80002c58:	12 3a       	cp.w	r10,r9
80002c5a:	e0 83 00 85 	brlo	80002d64 <initDisplay+0x178>
80002c5e:	ce eb       	rjmp	80002c3a <initDisplay+0x4e>
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002c60:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occured.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002c64:	14 38       	cp.w	r8,r10
80002c66:	e0 88 00 09 	brls	80002c78 <initDisplay+0x8c>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002c6a:	12 38       	cp.w	r8,r9
80002c6c:	fe 98 ff fa 	brls	80002c60 <initDisplay+0x74>
80002c70:	12 3a       	cp.w	r10,r9
80002c72:	e0 83 00 88 	brlo	80002d82 <initDisplay+0x196>
80002c76:	cf 5b       	rjmp	80002c60 <initDisplay+0x74>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002c78:	12 38       	cp.w	r8,r9
80002c7a:	e0 8b 00 84 	brhi	80002d82 <initDisplay+0x196>
80002c7e:	12 3a       	cp.w	r10,r9
80002c80:	e0 83 00 81 	brlo	80002d82 <initDisplay+0x196>
80002c84:	ce eb       	rjmp	80002c60 <initDisplay+0x74>
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002c86:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occured.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002c8a:	14 38       	cp.w	r8,r10
80002c8c:	e0 88 00 08 	brls	80002c9c <initDisplay+0xb0>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002c90:	12 38       	cp.w	r8,r9
80002c92:	fe 98 ff fa 	brls	80002c86 <initDisplay+0x9a>
80002c96:	12 3a       	cp.w	r10,r9
80002c98:	c7 e3       	brcs	80002d94 <initDisplay+0x1a8>
80002c9a:	cf 6b       	rjmp	80002c86 <initDisplay+0x9a>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002c9c:	12 38       	cp.w	r8,r9
80002c9e:	e0 8b 00 7b 	brhi	80002d94 <initDisplay+0x1a8>
80002ca2:	12 3a       	cp.w	r10,r9
80002ca4:	c7 83       	brcs	80002d94 <initDisplay+0x1a8>
80002ca6:	cf 0b       	rjmp	80002c86 <initDisplay+0x9a>
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002ca8:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occured.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002cac:	14 38       	cp.w	r8,r10
80002cae:	e0 88 00 08 	brls	80002cbe <initDisplay+0xd2>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002cb2:	12 38       	cp.w	r8,r9
80002cb4:	fe 98 ff fa 	brls	80002ca8 <initDisplay+0xbc>
80002cb8:	12 3a       	cp.w	r10,r9
80002cba:	c7 b3       	brcs	80002db0 <initDisplay+0x1c4>
80002cbc:	cf 6b       	rjmp	80002ca8 <initDisplay+0xbc>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002cbe:	12 38       	cp.w	r8,r9
80002cc0:	e0 8b 00 78 	brhi	80002db0 <initDisplay+0x1c4>
80002cc4:	12 3a       	cp.w	r10,r9
80002cc6:	c7 53       	brcs	80002db0 <initDisplay+0x1c4>
80002cc8:	cf 0b       	rjmp	80002ca8 <initDisplay+0xbc>

	//LCD_Reset();
	
	cpu_delay_ms(100, 115200);
	
	readRegister(0x0);
80002cca:	30 0c       	mov	r12,0
80002ccc:	f0 1f 00 77 	mcall	80002ea8 <initDisplay+0x2bc>

/*	writeRegister(0x00E3, 0x3008);
	writeRegister(0x00E7, 0x0012);
	writeRegister(0x00EF, 0x1231); */
	
	writeRegister(TFTLCD_START_OSC, 0x0001);//start oscillator
80002cd0:	30 1b       	mov	r11,1
80002cd2:	30 0c       	mov	r12,0
80002cd4:	f0 1f 00 76 	mcall	80002eac <initDisplay+0x2c0>
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002cd8:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002cdc:	f0 ca e9 80 	sub	r10,r8,-5760
80002ce0:	c9 cb       	rjmp	80002c18 <initDisplay+0x2c>

	cpu_delay_ms(50, 115200); //this will make a delay of 50 ms

	writeRegister(TFTLCD_DRIV_OUT_CTRL, 0x0100);
80002ce2:	e0 6b 01 00 	mov	r11,256
80002ce6:	30 1c       	mov	r12,1
80002ce8:	f0 1f 00 71 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_DRIV_WAV_CTRL, 0x0700);
80002cec:	e0 6b 07 00 	mov	r11,1792
80002cf0:	30 2c       	mov	r12,2
80002cf2:	f0 1f 00 6f 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_ENTRY_MOD, 0x1030); //data=0x0030 works
80002cf6:	e0 6b 10 30 	mov	r11,4144
80002cfa:	30 3c       	mov	r12,3
80002cfc:	f0 1f 00 6c 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_RESIZE_CTRL, 0x0000);
80002d00:	30 0b       	mov	r11,0
80002d02:	30 4c       	mov	r12,4
80002d04:	f0 1f 00 6a 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_DISP_CTRL2, 0x0202);
80002d08:	e0 6b 02 02 	mov	r11,514
80002d0c:	30 8c       	mov	r12,8
80002d0e:	f0 1f 00 68 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_DISP_CTRL3, 0x0000);
80002d12:	30 0b       	mov	r11,0
80002d14:	30 9c       	mov	r12,9
80002d16:	f0 1f 00 66 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_DISP_CTRL4, 0x0000);//data = 0x0002?
80002d1a:	30 0b       	mov	r11,0
80002d1c:	30 ac       	mov	r12,10
80002d1e:	f0 1f 00 64 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_RGB_DISP_IF_CTRL1, 0x0);
80002d22:	30 0b       	mov	r11,0
80002d24:	30 cc       	mov	r12,12
80002d26:	f0 1f 00 62 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_FRM_MARKER_POS, 0x0);
80002d2a:	30 0b       	mov	r11,0
80002d2c:	30 dc       	mov	r12,13
80002d2e:	f0 1f 00 60 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_RGB_DISP_IF_CTRL2, 0x0);
80002d32:	30 0b       	mov	r11,0
80002d34:	30 fc       	mov	r12,15
80002d36:	f0 1f 00 5e 	mcall	80002eac <initDisplay+0x2c0>

	writeRegister(TFTLCD_POW_CTRL1, 0x0000);
80002d3a:	30 0b       	mov	r11,0
80002d3c:	31 0c       	mov	r12,16
80002d3e:	f0 1f 00 5c 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_POW_CTRL2, 0x0007);//data=0x0007?
80002d42:	30 7b       	mov	r11,7
80002d44:	31 1c       	mov	r12,17
80002d46:	f0 1f 00 5a 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_POW_CTRL3, 0x0000);
80002d4a:	30 0b       	mov	r11,0
80002d4c:	31 2c       	mov	r12,18
80002d4e:	f0 1f 00 58 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_POW_CTRL4, 0x0000);
80002d52:	30 0b       	mov	r11,0
80002d54:	31 3c       	mov	r12,19
80002d56:	f0 1f 00 56 	mcall	80002eac <initDisplay+0x2c0>
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002d5a:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002d5e:	f0 ca a6 00 	sub	r10,r8,-23040
80002d62:	c6 cb       	rjmp	80002c3a <initDisplay+0x4e>
	cpu_delay_ms(200, 115200);

	writeRegister(TFTLCD_POW_CTRL1, 0x1690);//data=0x14B0?
80002d64:	e0 6b 16 90 	mov	r11,5776
80002d68:	31 0c       	mov	r12,16
80002d6a:	f0 1f 00 51 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_POW_CTRL2, 0x0227);//data=0x0227?
80002d6e:	e0 6b 02 27 	mov	r11,551
80002d72:	31 1c       	mov	r12,17
80002d74:	f0 1f 00 4e 	mcall	80002eac <initDisplay+0x2c0>
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002d78:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002d7c:	f0 ca e9 80 	sub	r10,r8,-5760
80002d80:	c7 0b       	rjmp	80002c60 <initDisplay+0x74>
	cpu_delay_ms(50, 115200);

	writeRegister(TFTLCD_POW_CTRL3, 0x001A); //data=0x008E?
80002d82:	31 ab       	mov	r11,26
80002d84:	31 2c       	mov	r12,18
80002d86:	f0 1f 00 4a 	mcall	80002eac <initDisplay+0x2c0>
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002d8a:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002d8e:	f0 ca e9 80 	sub	r10,r8,-5760
80002d92:	c7 ab       	rjmp	80002c86 <initDisplay+0x9a>
	cpu_delay_ms(50, 115200);

	writeRegister(TFTLCD_POW_CTRL4, 0x1800);//data=0x0C00?
80002d94:	e0 6b 18 00 	mov	r11,6144
80002d98:	31 3c       	mov	r12,19
80002d9a:	f0 1f 00 45 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_POW_CTRL7, 0x002A);//data=0x0015?
80002d9e:	32 ab       	mov	r11,42
80002da0:	32 9c       	mov	r12,41
80002da2:	f0 1f 00 43 	mcall	80002eac <initDisplay+0x2c0>
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002da6:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002daa:	f0 ca e9 80 	sub	r10,r8,-5760
80002dae:	c7 db       	rjmp	80002ca8 <initDisplay+0xbc>
	cpu_delay_ms(50, 115200);
	
	writeRegister(TFTLCD_GRAM_HOR_AD, 0x0000);
80002db0:	30 0b       	mov	r11,0
80002db2:	32 0c       	mov	r12,32
80002db4:	f0 1f 00 3e 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_GRAM_VER_AD, 0x0000);
80002db8:	30 0b       	mov	r11,0
80002dba:	32 1c       	mov	r12,33
80002dbc:	f0 1f 00 3c 	mcall	80002eac <initDisplay+0x2c0>

	writeRegister(TFTLCD_GAMMA_CTRL1, 0x0007);
80002dc0:	30 7b       	mov	r11,7
80002dc2:	33 0c       	mov	r12,48
80002dc4:	f0 1f 00 3a 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_GAMMA_CTRL2, 0x0605);
80002dc8:	e0 6b 06 05 	mov	r11,1541
80002dcc:	33 1c       	mov	r12,49
80002dce:	f0 1f 00 38 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_GAMMA_CTRL3, 0x0106);
80002dd2:	e0 6b 01 06 	mov	r11,262
80002dd6:	33 2c       	mov	r12,50
80002dd8:	f0 1f 00 35 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_GAMMA_CTRL4, 0x0206);
80002ddc:	e0 6b 02 06 	mov	r11,518
80002de0:	33 5c       	mov	r12,53
80002de2:	f0 1f 00 33 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_GAMMA_CTRL5, 0x0808);
80002de6:	e0 6b 08 08 	mov	r11,2056
80002dea:	33 6c       	mov	r12,54
80002dec:	f0 1f 00 30 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_GAMMA_CTRL6, 0x0007);
80002df0:	30 7b       	mov	r11,7
80002df2:	33 7c       	mov	r12,55
80002df4:	f0 1f 00 2e 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_GAMMA_CTRL7, 0x0201);
80002df8:	e0 6b 02 01 	mov	r11,513
80002dfc:	33 8c       	mov	r12,56
80002dfe:	f0 1f 00 2c 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_GAMMA_CTRL8, 0x0007);
80002e02:	30 7b       	mov	r11,7
80002e04:	33 9c       	mov	r12,57
80002e06:	f0 1f 00 2a 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_GAMMA_CTRL9, 0x0602);
80002e0a:	e0 6b 06 02 	mov	r11,1538
80002e0e:	33 cc       	mov	r12,60
80002e10:	f0 1f 00 27 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_GAMMA_CTRL10, 0x0808);
80002e14:	e0 6b 08 08 	mov	r11,2056
80002e18:	33 dc       	mov	r12,61
80002e1a:	f0 1f 00 25 	mcall	80002eac <initDisplay+0x2c0>

	writeRegister(TFTLCD_HOR_START_AD, 0x0000);
80002e1e:	30 0b       	mov	r11,0
80002e20:	35 0c       	mov	r12,80
80002e22:	f0 1f 00 23 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_HOR_END_AD, 0x00EF);
80002e26:	e0 6b 00 ef 	mov	r11,239
80002e2a:	35 1c       	mov	r12,81
80002e2c:	f0 1f 00 20 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_VER_START_AD, 0x0000);
80002e30:	30 0b       	mov	r11,0
80002e32:	35 2c       	mov	r12,82
80002e34:	f0 1f 00 1e 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_VER_END_AD, 0x013F);
80002e38:	e0 6b 01 3f 	mov	r11,319
80002e3c:	35 3c       	mov	r12,83
80002e3e:	f0 1f 00 1c 	mcall	80002eac <initDisplay+0x2c0>

	writeRegister(TFTLCD_GATE_SCAN_CTRL1, 0xA700); // Driver Output Control (R60h) data=0xA700?
80002e42:	e0 6b a7 00 	mov	r11,42752
80002e46:	36 0c       	mov	r12,96
80002e48:	f0 1f 00 19 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_GATE_SCAN_CTRL2, 0x0003); // data = 0x0001 works Driver Output Control (R61h) data = 0x0003?
80002e4c:	30 3b       	mov	r11,3
80002e4e:	36 1c       	mov	r12,97
80002e50:	f0 1f 00 17 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_GATE_SCAN_CTRL3, 0x0000); // Driver Output Control (R62h)
80002e54:	30 0b       	mov	r11,0
80002e56:	36 ac       	mov	r12,106
80002e58:	f0 1f 00 15 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(0x82, 0x0);
	writeRegister(0x83, 0x0);
	writeRegister(0x84, 0x0);
	writeRegister(0x85, 0x0);*/

	writeRegister(TFTLCD_PANEL_IF_CTRL1, 0X0010); // Panel Interface Control 1 (R90h)
80002e5c:	31 0b       	mov	r11,16
80002e5e:	e0 6c 00 90 	mov	r12,144
80002e62:	f0 1f 00 13 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_PANEL_IF_CTRL2, 0X0000);
80002e66:	30 0b       	mov	r11,0
80002e68:	e0 6c 00 92 	mov	r12,146
80002e6c:	f0 1f 00 10 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_PANEL_IF_CTRL3, 0X0003);
80002e70:	30 3b       	mov	r11,3
80002e72:	e0 6c 00 93 	mov	r12,147
80002e76:	f0 1f 00 0e 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_PANEL_IF_CTRL4, 0X1100); // data = 0x0110 works
80002e7a:	e0 6b 11 00 	mov	r11,4352
80002e7e:	e0 6c 00 95 	mov	r12,149
80002e82:	f0 1f 00 0b 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_PANEL_IF_CTRL5, 0X0000);
80002e86:	30 0b       	mov	r11,0
80002e88:	e0 6c 00 97 	mov	r12,151
80002e8c:	f0 1f 00 08 	mcall	80002eac <initDisplay+0x2c0>
	writeRegister(TFTLCD_PANEL_IF_CTRL6, 0X0000);
80002e90:	30 0b       	mov	r11,0
80002e92:	e0 6c 00 98 	mov	r12,152
80002e96:	f0 1f 00 06 	mcall	80002eac <initDisplay+0x2c0>

	// Display On
	writeRegister(TFTLCD_DISP_CTRL1, 0X0133); // Display Control (R07h)
80002e9a:	e0 6b 01 33 	mov	r11,307
80002e9e:	30 7c       	mov	r12,7
80002ea0:	f0 1f 00 03 	mcall	80002eac <initDisplay+0x2c0>

80002ea4:	d8 02       	popm	pc
80002ea6:	00 00       	add	r0,r0
80002ea8:	80 00       	ld.sh	r0,r0[0x0]
80002eaa:	2b d8       	sub	r8,-67
80002eac:	80 00       	ld.sh	r0,r0[0x0]
80002eae:	27 f0       	sub	r0,127

80002eb0 <main>:
#include "gpio.h"
#include "LCD.h"
#include "sdramc.h"

int main (void)
{
80002eb0:	eb cd 40 f8 	pushm	r3-r7,lr
80002eb4:	21 9d       	sub	sp,100
	board_init();
80002eb6:	f0 1f 00 57 	mcall	80003010 <main+0x160>
	sysclk_init();
80002eba:	f0 1f 00 57 	mcall	80003014 <main+0x164>
	
	int clock_speed;
	char msg[100];
	
	LCD_Reset();
80002ebe:	f0 1f 00 57 	mcall	80003018 <main+0x168>
	initDisplay();
80002ec2:	f0 1f 00 57 	mcall	8000301c <main+0x16c>
	fillScreen(BLACK);
80002ec6:	30 0c       	mov	r12,0
80002ec8:	f0 1f 00 56 	mcall	80003020 <main+0x170>
 *
 * \return Frequency of the CPU clock, in Hz.
 */
static inline uint32_t sysclk_get_cpu_hz(void)
{
	return sysclk_get_main_hz() >> CONFIG_SYSCLK_CPU_DIV;
80002ecc:	e0 64 14 80 	mov	r4,5248
80002ed0:	ea 14 03 ef 	orh	r4,0x3ef
	clock_speed = sysclk_get_cpu_hz();
	sprintf(msg, "The clock speed is %d", clock_speed);
80002ed4:	1a 97       	mov	r7,sp
80002ed6:	1a d4       	st.w	--sp,r4
80002ed8:	4d 3b       	lddpc	r11,80003024 <main+0x174>
80002eda:	0e 9c       	mov	r12,r7
80002edc:	f0 1f 00 53 	mcall	80003028 <main+0x178>
	drawCharArray(0, 0, msg, 77);
80002ee0:	34 d9       	mov	r9,77
80002ee2:	0e 9a       	mov	r10,r7
80002ee4:	30 0b       	mov	r11,0
80002ee6:	16 9c       	mov	r12,r11
80002ee8:	f0 1f 00 51 	mcall	8000302c <main+0x17c>
	
	// Calculate SDRAM size in words (32 bits).
	sdram_size = SDRAM_SIZE >> 2;

	// Initialize the external SDRAM chip.
	sdramc_init(sysclk_get_hsb_hz());
80002eec:	08 9c       	mov	r12,r4
80002eee:	f0 1f 00 51 	mcall	80003030 <main+0x180>
80002ef2:	fc 16 d0 00 	movh	r6,0xd000
80002ef6:	30 15       	mov	r5,1
80002ef8:	30 07       	mov	r7,0
80002efa:	2f fd       	sub	sp,-4
	  // Fill the SDRAM with the test pattern.
	  for (i = 0, j = 0; i < sdram_size; i++)
	  {
		if (i == j * progress_inc)
		{
		  gpio_tgl_gpio_pin(AVR32_PIN_PB21);
80002efc:	33 53       	mov	r3,53
80002efe:	c0 48       	rjmp	80002f06 <main+0x56>
	
	// Calculate SDRAM size in words (32 bits).
	sdram_size = SDRAM_SIZE >> 2;

	// Initialize the external SDRAM chip.
	sdramc_init(sysclk_get_hsb_hz());
80002f00:	2f f7       	sub	r7,-1
80002f02:	2f f5       	sub	r5,-1
80002f04:	2f c6       	sub	r6,-4
	progress_inc = (sdram_size + 50) / 100;

	  // Fill the SDRAM with the test pattern.
	  for (i = 0, j = 0; i < sdram_size; i++)
	  {
		if (i == j * progress_inc)
80002f06:	58 07       	cp.w	r7,0
80002f08:	c0 61       	brne	80002f14 <main+0x64>
		{
		  gpio_tgl_gpio_pin(AVR32_PIN_PB21);
80002f0a:	06 9c       	mov	r12,r3
80002f0c:	f0 1f 00 4a 	mcall	80003034 <main+0x184>
		}
		sdram[i] = i;
80002f10:	8d 07       	st.w	r6[0x0],r7
80002f12:	cf 7b       	rjmp	80002f00 <main+0x50>
80002f14:	8d 07       	st.w	r6[0x0],r7
	sdramc_init(sysclk_get_hsb_hz());
	
	progress_inc = (sdram_size + 50) / 100;

	  // Fill the SDRAM with the test pattern.
	  for (i = 0, j = 0; i < sdram_size; i++)
80002f16:	e0 68 ff ff 	mov	r8,65535
80002f1a:	ea 18 00 7f 	orh	r8,0x7f
80002f1e:	10 35       	cp.w	r5,r8
80002f20:	fe 98 ff f0 	brls	80002f00 <main+0x50>
		{
		  gpio_tgl_gpio_pin(AVR32_PIN_PB21);
		}
		sdram[i] = i;
	  }
	  gpio_clr_gpio_pin(AVR32_PIN_PB21);
80002f24:	33 5c       	mov	r12,53
80002f26:	f0 1f 00 45 	mcall	80003038 <main+0x188>
80002f2a:	fc 16 d0 00 	movh	r6,0xd000
80002f2e:	30 05       	mov	r5,0
80002f30:	0a 97       	mov	r7,r5
	  // Recover the test pattern from the SDRAM and verify it.
	  for (i = 0, j = 0; i < sdram_size; i++)
	  {
		if (i == j * progress_inc)
		{
		  gpio_tgl_gpio_pin(AVR32_PIN_PB22);
80002f32:	33 63       	mov	r3,54
	  gpio_clr_gpio_pin(AVR32_PIN_PB21);

	  // Recover the test pattern from the SDRAM and verify it.
	  for (i = 0, j = 0; i < sdram_size; i++)
	  {
		if (i == j * progress_inc)
80002f34:	58 07       	cp.w	r7,0
80002f36:	c0 41       	brne	80002f3e <main+0x8e>
		{
		  gpio_tgl_gpio_pin(AVR32_PIN_PB22);
80002f38:	06 9c       	mov	r12,r3
80002f3a:	f0 1f 00 3f 	mcall	80003034 <main+0x184>
		}
		tmp = sdram[i];
80002f3e:	6c 08       	ld.w	r8,r6[0x0]
		if (tmp != i)
		{
		  noErrors++;
80002f40:	0e 38       	cp.w	r8,r7
80002f42:	f7 b5 01 ff 	subne	r5,-1
		sdram[i] = i;
	  }
	  gpio_clr_gpio_pin(AVR32_PIN_PB21);

	  // Recover the test pattern from the SDRAM and verify it.
	  for (i = 0, j = 0; i < sdram_size; i++)
80002f46:	2f f7       	sub	r7,-1
80002f48:	2f c6       	sub	r6,-4
80002f4a:	fc 18 00 80 	movh	r8,0x80
80002f4e:	10 37       	cp.w	r7,r8
80002f50:	cf 21       	brne	80002f34 <main+0x84>
		if (tmp != i)
		{
		  noErrors++;
		}
	  }
	  gpio_clr_gpio_pin(AVR32_PIN_PB22);
80002f52:	33 6c       	mov	r12,54
80002f54:	f0 1f 00 39 	mcall	80003038 <main+0x188>
	  if (noErrors)
80002f58:	58 05       	cp.w	r5,0
80002f5a:	c2 e0       	breq	80002fb6 <main+0x106>
	  {
		gpio_clr_gpio_pin(AVR32_PIN_PB23);
80002f5c:	33 7c       	mov	r12,55
80002f5e:	f0 1f 00 37 	mcall	80003038 <main+0x188>
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline uint32_t cpu_ms_2_cy(unsigned long ms, unsigned long fcpu_hz)
{
  return ((unsigned long long)ms * fcpu_hz + 999) / 1000;
80002f62:	e0 67 00 c8 	mov	r7,200
80002f66:	e8 07 06 46 	mulu.d	r6,r4,r7
80002f6a:	e0 68 03 e8 	mov	r8,1000
80002f6e:	30 09       	mov	r9,0
80002f70:	e0 6a 03 e7 	mov	r10,999
80002f74:	30 0b       	mov	r11,0
80002f76:	ec 0a 00 0a 	add	r10,r6,r10
80002f7a:	ee 0b 00 4b 	adc	r11,r7,r11
80002f7e:	f0 1f 00 30 	mcall	8000303c <main+0x18c>
80002f82:	14 96       	mov	r6,r10
			
			/*fillScreen(RED);
			clock_speed = sysclk_get_cpu_hz();
			sprintf(msg, "The clock speed is %d", clock_speed);
			drawCharArray(0, 0, msg, 77);*/
		  gpio_tgl_gpio_pin(AVR32_PIN_PB23);
80002f84:	33 77       	mov	r7,55
80002f86:	0e 9c       	mov	r12,r7
80002f88:	f0 1f 00 2b 	mcall	80003034 <main+0x184>
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002f8c:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002f90:	f0 06 00 0a 	add	r10,r8,r6
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002f94:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occured.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002f98:	14 38       	cp.w	r8,r10
80002f9a:	e0 88 00 08 	brls	80002faa <main+0xfa>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002f9e:	12 38       	cp.w	r8,r9
80002fa0:	fe 98 ff fa 	brls	80002f94 <main+0xe4>
80002fa4:	12 3a       	cp.w	r10,r9
80002fa6:	cf 03       	brcs	80002f86 <main+0xd6>
80002fa8:	cf 6b       	rjmp	80002f94 <main+0xe4>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002faa:	12 38       	cp.w	r8,r9
80002fac:	fe 9b ff ed 	brhi	80002f86 <main+0xd6>
80002fb0:	12 3a       	cp.w	r10,r9
80002fb2:	ce a3       	brcs	80002f86 <main+0xd6>
80002fb4:	cf 0b       	rjmp	80002f94 <main+0xe4>
		  cpu_delay_ms(200, sysclk_get_cpu_hz());   // Fast blink means errors.
		}
	  }
	  else
	  {
		gpio_clr_gpio_pin(AVR32_PIN_PB30);
80002fb6:	33 ec       	mov	r12,62
80002fb8:	f0 1f 00 20 	mcall	80003038 <main+0x188>
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline uint32_t cpu_ms_2_cy(unsigned long ms, unsigned long fcpu_hz)
{
  return ((unsigned long long)ms * fcpu_hz + 999) / 1000;
80002fbc:	e0 67 03 e8 	mov	r7,1000
80002fc0:	e8 07 06 46 	mulu.d	r6,r4,r7
80002fc4:	e0 68 03 e8 	mov	r8,1000
80002fc8:	30 09       	mov	r9,0
80002fca:	e0 6a 03 e7 	mov	r10,999
80002fce:	30 0b       	mov	r11,0
80002fd0:	ec 0a 00 0a 	add	r10,r6,r10
80002fd4:	ee 0b 00 4b 	adc	r11,r7,r11
80002fd8:	f0 1f 00 19 	mcall	8000303c <main+0x18c>
80002fdc:	14 96       	mov	r6,r10
		{
			/*fillScreen(BLUE);
			clock_speed = sysclk_get_cpu_hz();
			sprintf(msg, "The clock speed is %d", clock_speed);
			drawCharArray(0, 0, msg, 77);*/
		  gpio_tgl_gpio_pin(AVR32_PIN_PB30);
80002fde:	33 e7       	mov	r7,62
80002fe0:	0e 9c       	mov	r12,r7
80002fe2:	f0 1f 00 15 	mcall	80003034 <main+0x184>
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002fe6:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002fea:	f0 06 00 0a 	add	r10,r8,r6
#if (defined __GNUC__)
__attribute__((__always_inline__))
#endif
static inline unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002fee:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occured.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002ff2:	14 38       	cp.w	r8,r10
80002ff4:	e0 88 00 08 	brls	80003004 <main+0x154>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002ff8:	12 38       	cp.w	r8,r9
80002ffa:	fe 98 ff fa 	brls	80002fee <main+0x13e>
80002ffe:	12 3a       	cp.w	r10,r9
80003000:	cf 03       	brcs	80002fe0 <main+0x130>
80003002:	cf 6b       	rjmp	80002fee <main+0x13e>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80003004:	12 38       	cp.w	r8,r9
80003006:	fe 9b ff ed 	brhi	80002fe0 <main+0x130>
8000300a:	12 3a       	cp.w	r10,r9
8000300c:	ce a3       	brcs	80002fe0 <main+0x130>
8000300e:	cf 0b       	rjmp	80002fee <main+0x13e>
80003010:	80 00       	ld.sh	r0,r0[0x0]
80003012:	23 f4       	sub	r4,63
80003014:	80 00       	ld.sh	r0,r0[0x0]
80003016:	24 18       	sub	r8,65
80003018:	80 00       	ld.sh	r0,r0[0x0]
8000301a:	24 94       	sub	r4,73
8000301c:	80 00       	ld.sh	r0,r0[0x0]
8000301e:	2b ec       	sub	r12,-66
80003020:	80 00       	ld.sh	r0,r0[0x0]
80003022:	2a 8c       	sub	r12,-88
80003024:	80 00       	ld.sh	r0,r0[0x0]
80003026:	94 2c       	ld.sh	r12,r10[0x4]
80003028:	80 00       	ld.sh	r0,r0[0x0]
8000302a:	34 1c       	mov	r12,65
8000302c:	80 00       	ld.sh	r0,r0[0x0]
8000302e:	29 d8       	sub	r8,-99
80003030:	80 00       	ld.sh	r0,r0[0x0]
80003032:	20 28       	sub	r8,2
80003034:	80 00       	ld.sh	r0,r0[0x0]
80003036:	23 52       	sub	r2,53
80003038:	80 00       	ld.sh	r0,r0[0x0]
8000303a:	23 36       	sub	r6,51
8000303c:	80 00       	ld.sh	r0,r0[0x0]
8000303e:	30 40       	mov	r0,4

80003040 <__avr32_udiv64>:
80003040:	d4 31       	pushm	r0-r7,lr
80003042:	1a 97       	mov	r7,sp
80003044:	20 2d       	sub	sp,8
80003046:	10 9e       	mov	lr,r8
80003048:	12 95       	mov	r5,r9
8000304a:	14 96       	mov	r6,r10
8000304c:	58 09       	cp.w	r9,0
8000304e:	c4 91       	brne	800030e0 <__avr32_udiv64+0xa0>
80003050:	16 38       	cp.w	r8,r11
80003052:	e0 88 00 57 	brls	80003100 <__avr32_udiv64+0xc0>
80003056:	f0 08 12 00 	clz	r8,r8
8000305a:	c0 d0       	breq	80003074 <__avr32_udiv64+0x34>
8000305c:	f6 08 09 4b 	lsl	r11,r11,r8
80003060:	f0 09 11 20 	rsub	r9,r8,32
80003064:	fc 08 09 4e 	lsl	lr,lr,r8
80003068:	f4 09 0a 49 	lsr	r9,r10,r9
8000306c:	f4 08 09 46 	lsl	r6,r10,r8
80003070:	f3 eb 10 0b 	or	r11,r9,r11
80003074:	fc 05 16 10 	lsr	r5,lr,0x10
80003078:	f9 de c0 10 	bfextu	r12,lr,0x0,0x10
8000307c:	f6 05 0d 0a 	divu	r10,r11,r5
80003080:	ec 08 16 10 	lsr	r8,r6,0x10
80003084:	14 99       	mov	r9,r10
80003086:	f1 eb 11 08 	or	r8,r8,r11<<0x10
8000308a:	b9 3a       	mul	r10,r12
8000308c:	10 3a       	cp.w	r10,r8
8000308e:	e0 88 00 0c 	brls	800030a6 <__avr32_udiv64+0x66>
80003092:	20 19       	sub	r9,1
80003094:	1c 08       	add	r8,lr
80003096:	10 3e       	cp.w	lr,r8
80003098:	e0 8b 00 07 	brhi	800030a6 <__avr32_udiv64+0x66>
8000309c:	10 3a       	cp.w	r10,r8
8000309e:	f7 b9 0b 01 	subhi	r9,1
800030a2:	f1 de eb 08 	addhi	r8,r8,lr
800030a6:	f0 0a 01 0b 	sub	r11,r8,r10
800030aa:	ed d6 c0 10 	bfextu	r6,r6,0x0,0x10
800030ae:	f6 05 0d 0a 	divu	r10,r11,r5
800030b2:	ed eb 11 06 	or	r6,r6,r11<<0x10
800030b6:	14 98       	mov	r8,r10
800030b8:	f4 0c 02 4c 	mul	r12,r10,r12
800030bc:	0c 3c       	cp.w	r12,r6
800030be:	e0 88 00 0a 	brls	800030d2 <__avr32_udiv64+0x92>
800030c2:	20 18       	sub	r8,1
800030c4:	1c 06       	add	r6,lr
800030c6:	0c 3e       	cp.w	lr,r6
800030c8:	e0 8b 00 05 	brhi	800030d2 <__avr32_udiv64+0x92>
800030cc:	0c 3c       	cp.w	r12,r6
800030ce:	f7 b8 0b 01 	subhi	r8,1
800030d2:	f1 e9 11 0b 	or	r11,r8,r9<<0x10
800030d6:	30 0c       	mov	r12,0
800030d8:	16 9a       	mov	r10,r11
800030da:	18 9b       	mov	r11,r12
800030dc:	2f ed       	sub	sp,-8
800030de:	d8 32       	popm	r0-r7,pc
800030e0:	16 39       	cp.w	r9,r11
800030e2:	e0 8b 00 51 	brhi	80003184 <__avr32_udiv64+0x144>
800030e6:	f2 0c 12 00 	clz	r12,r9
800030ea:	c5 31       	brne	80003190 <__avr32_udiv64+0x150>
800030ec:	14 38       	cp.w	r8,r10
800030ee:	5f 89       	srls	r9
800030f0:	16 35       	cp.w	r5,r11
800030f2:	5f 38       	srlo	r8
800030f4:	10 49       	or	r9,r8
800030f6:	f8 09 18 00 	cp.b	r9,r12
800030fa:	c4 50       	breq	80003184 <__avr32_udiv64+0x144>
800030fc:	30 1b       	mov	r11,1
800030fe:	c4 58       	rjmp	80003188 <__avr32_udiv64+0x148>
80003100:	58 08       	cp.w	r8,0
80003102:	c0 51       	brne	8000310c <__avr32_udiv64+0xcc>
80003104:	30 19       	mov	r9,1
80003106:	f2 08 0d 08 	divu	r8,r9,r8
8000310a:	10 9e       	mov	lr,r8
8000310c:	fc 08 12 00 	clz	r8,lr
80003110:	e0 81 00 91 	brne	80003232 <__avr32_udiv64+0x1f2>
80003114:	1c 1b       	sub	r11,lr
80003116:	fc 05 16 10 	lsr	r5,lr,0x10
8000311a:	f3 de c0 10 	bfextu	r9,lr,0x0,0x10
8000311e:	30 1c       	mov	r12,1
80003120:	f6 05 0d 0a 	divu	r10,r11,r5
80003124:	ec 08 16 10 	lsr	r8,r6,0x10
80003128:	f4 09 02 43 	mul	r3,r10,r9
8000312c:	f1 eb 11 08 	or	r8,r8,r11<<0x10
80003130:	14 9b       	mov	r11,r10
80003132:	10 33       	cp.w	r3,r8
80003134:	e0 88 00 0c 	brls	8000314c <__avr32_udiv64+0x10c>
80003138:	20 1b       	sub	r11,1
8000313a:	1c 08       	add	r8,lr
8000313c:	10 3e       	cp.w	lr,r8
8000313e:	e0 8b 00 07 	brhi	8000314c <__avr32_udiv64+0x10c>
80003142:	10 33       	cp.w	r3,r8
80003144:	f7 bb 0b 01 	subhi	r11,1
80003148:	f1 de eb 08 	addhi	r8,r8,lr
8000314c:	f0 03 01 03 	sub	r3,r8,r3
80003150:	ed d6 c0 10 	bfextu	r6,r6,0x0,0x10
80003154:	e6 05 0d 02 	divu	r2,r3,r5
80003158:	ed e3 11 06 	or	r6,r6,r3<<0x10
8000315c:	04 98       	mov	r8,r2
8000315e:	e4 09 02 49 	mul	r9,r2,r9
80003162:	0c 39       	cp.w	r9,r6
80003164:	e0 88 00 0a 	brls	80003178 <__avr32_udiv64+0x138>
80003168:	20 18       	sub	r8,1
8000316a:	1c 06       	add	r6,lr
8000316c:	0c 3e       	cp.w	lr,r6
8000316e:	e0 8b 00 05 	brhi	80003178 <__avr32_udiv64+0x138>
80003172:	0c 39       	cp.w	r9,r6
80003174:	f7 b8 0b 01 	subhi	r8,1
80003178:	f1 eb 11 0b 	or	r11,r8,r11<<0x10
8000317c:	16 9a       	mov	r10,r11
8000317e:	18 9b       	mov	r11,r12
80003180:	2f ed       	sub	sp,-8
80003182:	d8 32       	popm	r0-r7,pc
80003184:	30 0b       	mov	r11,0
80003186:	16 9c       	mov	r12,r11
80003188:	16 9a       	mov	r10,r11
8000318a:	18 9b       	mov	r11,r12
8000318c:	2f ed       	sub	sp,-8
8000318e:	d8 32       	popm	r0-r7,pc
80003190:	f2 0c 09 45 	lsl	r5,r9,r12
80003194:	f8 0e 11 20 	rsub	lr,r12,32
80003198:	f0 0c 09 43 	lsl	r3,r8,r12
8000319c:	f4 0e 0a 46 	lsr	r6,r10,lr
800031a0:	f0 0e 0a 48 	lsr	r8,r8,lr
800031a4:	f6 0e 0a 4e 	lsr	lr,r11,lr
800031a8:	0a 48       	or	r8,r5
800031aa:	f0 01 16 10 	lsr	r1,r8,0x10
800031ae:	fc 01 0d 04 	divu	r4,lr,r1
800031b2:	ee e5 ff f8 	st.d	r7[-8],r4
800031b6:	f6 0c 09 49 	lsl	r9,r11,r12
800031ba:	eb d8 c0 10 	bfextu	r5,r8,0x0,0x10
800031be:	ed e9 10 09 	or	r9,r6,r9
800031c2:	08 96       	mov	r6,r4
800031c4:	f2 0e 16 10 	lsr	lr,r9,0x10
800031c8:	ee f4 ff f8 	ld.w	r4,r7[-8]
800031cc:	ec 05 02 4b 	mul	r11,r6,r5
800031d0:	fd e4 11 0e 	or	lr,lr,r4<<0x10
800031d4:	1c 3b       	cp.w	r11,lr
800031d6:	e0 88 00 07 	brls	800031e4 <__avr32_udiv64+0x1a4>
800031da:	20 16       	sub	r6,1
800031dc:	10 0e       	add	lr,r8
800031de:	1c 38       	cp.w	r8,lr
800031e0:	e0 88 00 6d 	brls	800032ba <__avr32_udiv64+0x27a>
800031e4:	16 1e       	sub	lr,r11
800031e6:	f3 d9 c0 10 	bfextu	r9,r9,0x0,0x10
800031ea:	fc 01 0d 00 	divu	r0,lr,r1
800031ee:	f3 e1 11 09 	or	r9,r9,r1<<0x10
800031f2:	00 9b       	mov	r11,r0
800031f4:	e0 05 02 4e 	mul	lr,r0,r5
800031f8:	12 3e       	cp.w	lr,r9
800031fa:	e0 88 00 07 	brls	80003208 <__avr32_udiv64+0x1c8>
800031fe:	20 1b       	sub	r11,1
80003200:	10 09       	add	r9,r8
80003202:	12 38       	cp.w	r8,r9
80003204:	e0 88 00 55 	brls	800032ae <__avr32_udiv64+0x26e>
80003208:	f7 e6 11 0b 	or	r11,r11,r6<<0x10
8000320c:	1c 19       	sub	r9,lr
8000320e:	f6 03 06 42 	mulu.d	r2,r11,r3
80003212:	06 39       	cp.w	r9,r3
80003214:	c0 93       	brcs	80003226 <__avr32_udiv64+0x1e6>
80003216:	5f 09       	sreq	r9
80003218:	f4 0c 09 4c 	lsl	r12,r10,r12
8000321c:	04 3c       	cp.w	r12,r2
8000321e:	5f 38       	srlo	r8
80003220:	f3 e8 00 08 	and	r8,r9,r8
80003224:	c0 20       	breq	80003228 <__avr32_udiv64+0x1e8>
80003226:	20 1b       	sub	r11,1
80003228:	30 0c       	mov	r12,0
8000322a:	16 9a       	mov	r10,r11
8000322c:	18 9b       	mov	r11,r12
8000322e:	2f ed       	sub	sp,-8
80003230:	d8 32       	popm	r0-r7,pc
80003232:	f6 08 09 49 	lsl	r9,r11,r8
80003236:	fc 08 09 4e 	lsl	lr,lr,r8
8000323a:	f0 01 11 20 	rsub	r1,r8,32
8000323e:	fc 05 16 10 	lsr	r5,lr,0x10
80003242:	f4 01 0a 42 	lsr	r2,r10,r1
80003246:	f6 01 0a 41 	lsr	r1,r11,r1
8000324a:	12 42       	or	r2,r9
8000324c:	e2 05 0d 00 	divu	r0,r1,r5
80003250:	f3 de c0 10 	bfextu	r9,lr,0x0,0x10
80003254:	e4 06 16 10 	lsr	r6,r2,0x10
80003258:	00 93       	mov	r3,r0
8000325a:	ed e1 11 06 	or	r6,r6,r1<<0x10
8000325e:	e0 09 02 4c 	mul	r12,r0,r9
80003262:	0c 3c       	cp.w	r12,r6
80003264:	e0 88 00 07 	brls	80003272 <__avr32_udiv64+0x232>
80003268:	20 13       	sub	r3,1
8000326a:	1c 06       	add	r6,lr
8000326c:	0c 3e       	cp.w	lr,r6
8000326e:	e0 88 00 2c 	brls	800032c6 <__avr32_udiv64+0x286>
80003272:	ec 0c 01 01 	sub	r1,r6,r12
80003276:	f7 d2 c0 10 	bfextu	r11,r2,0x0,0x10
8000327a:	e2 05 0d 00 	divu	r0,r1,r5
8000327e:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
80003282:	00 9c       	mov	r12,r0
80003284:	e0 09 02 41 	mul	r1,r0,r9
80003288:	16 31       	cp.w	r1,r11
8000328a:	e0 88 00 0c 	brls	800032a2 <__avr32_udiv64+0x262>
8000328e:	20 1c       	sub	r12,1
80003290:	1c 0b       	add	r11,lr
80003292:	16 3e       	cp.w	lr,r11
80003294:	e0 8b 00 07 	brhi	800032a2 <__avr32_udiv64+0x262>
80003298:	16 31       	cp.w	r1,r11
8000329a:	f7 bc 0b 01 	subhi	r12,1
8000329e:	f7 de eb 0b 	addhi	r11,r11,lr
800032a2:	f4 08 09 46 	lsl	r6,r10,r8
800032a6:	02 1b       	sub	r11,r1
800032a8:	f9 e3 11 0c 	or	r12,r12,r3<<0x10
800032ac:	c3 ab       	rjmp	80003120 <__avr32_udiv64+0xe0>
800032ae:	12 3e       	cp.w	lr,r9
800032b0:	f3 d8 eb 09 	addhi	r9,r9,r8
800032b4:	f7 bb 0b 01 	subhi	r11,1
800032b8:	ca 8b       	rjmp	80003208 <__avr32_udiv64+0x1c8>
800032ba:	1c 3b       	cp.w	r11,lr
800032bc:	f7 b6 0b 01 	subhi	r6,1
800032c0:	fd d8 eb 0e 	addhi	lr,lr,r8
800032c4:	c9 0b       	rjmp	800031e4 <__avr32_udiv64+0x1a4>
800032c6:	0c 3c       	cp.w	r12,r6
800032c8:	f7 b3 0b 01 	subhi	r3,1
800032cc:	ed de eb 06 	addhi	r6,r6,lr
800032d0:	cd 1b       	rjmp	80003272 <__avr32_udiv64+0x232>

800032d2 <memcpy>:
800032d2:	58 8a       	cp.w	r10,8
800032d4:	c2 f5       	brlt	80003332 <memcpy+0x60>
800032d6:	f9 eb 10 09 	or	r9,r12,r11
800032da:	e2 19 00 03 	andl	r9,0x3,COH
800032de:	e0 81 00 97 	brne	8000340c <memcpy+0x13a>
800032e2:	e0 4a 00 20 	cp.w	r10,32
800032e6:	c3 b4       	brge	8000335c <memcpy+0x8a>
800032e8:	f4 08 14 02 	asr	r8,r10,0x2
800032ec:	f0 09 11 08 	rsub	r9,r8,8
800032f0:	fe 09 00 2f 	add	pc,pc,r9<<0x2
800032f4:	76 69       	ld.w	r9,r11[0x18]
800032f6:	99 69       	st.w	r12[0x18],r9
800032f8:	76 59       	ld.w	r9,r11[0x14]
800032fa:	99 59       	st.w	r12[0x14],r9
800032fc:	76 49       	ld.w	r9,r11[0x10]
800032fe:	99 49       	st.w	r12[0x10],r9
80003300:	76 39       	ld.w	r9,r11[0xc]
80003302:	99 39       	st.w	r12[0xc],r9
80003304:	76 29       	ld.w	r9,r11[0x8]
80003306:	99 29       	st.w	r12[0x8],r9
80003308:	76 19       	ld.w	r9,r11[0x4]
8000330a:	99 19       	st.w	r12[0x4],r9
8000330c:	76 09       	ld.w	r9,r11[0x0]
8000330e:	99 09       	st.w	r12[0x0],r9
80003310:	f6 08 00 2b 	add	r11,r11,r8<<0x2
80003314:	f8 08 00 28 	add	r8,r12,r8<<0x2
80003318:	e0 1a 00 03 	andl	r10,0x3
8000331c:	f4 0a 11 04 	rsub	r10,r10,4
80003320:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
80003324:	17 a9       	ld.ub	r9,r11[0x2]
80003326:	b0 a9       	st.b	r8[0x2],r9
80003328:	17 99       	ld.ub	r9,r11[0x1]
8000332a:	b0 99       	st.b	r8[0x1],r9
8000332c:	17 89       	ld.ub	r9,r11[0x0]
8000332e:	b0 89       	st.b	r8[0x0],r9
80003330:	5e fc       	retal	r12
80003332:	f4 0a 11 09 	rsub	r10,r10,9
80003336:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
8000333a:	17 f9       	ld.ub	r9,r11[0x7]
8000333c:	b8 f9       	st.b	r12[0x7],r9
8000333e:	17 e9       	ld.ub	r9,r11[0x6]
80003340:	b8 e9       	st.b	r12[0x6],r9
80003342:	17 d9       	ld.ub	r9,r11[0x5]
80003344:	b8 d9       	st.b	r12[0x5],r9
80003346:	17 c9       	ld.ub	r9,r11[0x4]
80003348:	b8 c9       	st.b	r12[0x4],r9
8000334a:	17 b9       	ld.ub	r9,r11[0x3]
8000334c:	b8 b9       	st.b	r12[0x3],r9
8000334e:	17 a9       	ld.ub	r9,r11[0x2]
80003350:	b8 a9       	st.b	r12[0x2],r9
80003352:	17 99       	ld.ub	r9,r11[0x1]
80003354:	b8 99       	st.b	r12[0x1],r9
80003356:	17 89       	ld.ub	r9,r11[0x0]
80003358:	b8 89       	st.b	r12[0x0],r9
8000335a:	5e fc       	retal	r12
8000335c:	eb cd 40 c0 	pushm	r6-r7,lr
80003360:	18 99       	mov	r9,r12
80003362:	22 0a       	sub	r10,32
80003364:	b7 07       	ld.d	r6,r11++
80003366:	b3 26       	st.d	r9++,r6
80003368:	b7 07       	ld.d	r6,r11++
8000336a:	b3 26       	st.d	r9++,r6
8000336c:	b7 07       	ld.d	r6,r11++
8000336e:	b3 26       	st.d	r9++,r6
80003370:	b7 07       	ld.d	r6,r11++
80003372:	b3 26       	st.d	r9++,r6
80003374:	22 0a       	sub	r10,32
80003376:	cf 74       	brge	80003364 <memcpy+0x92>
80003378:	2f 0a       	sub	r10,-16
8000337a:	c0 65       	brlt	80003386 <memcpy+0xb4>
8000337c:	b7 07       	ld.d	r6,r11++
8000337e:	b3 26       	st.d	r9++,r6
80003380:	b7 07       	ld.d	r6,r11++
80003382:	b3 26       	st.d	r9++,r6
80003384:	21 0a       	sub	r10,16
80003386:	5c 3a       	neg	r10
80003388:	fe 0a 00 3f 	add	pc,pc,r10<<0x3
8000338c:	d7 03       	nop
8000338e:	d7 03       	nop
80003390:	f7 36 00 0e 	ld.ub	r6,r11[14]
80003394:	f3 66 00 0e 	st.b	r9[14],r6
80003398:	f7 36 00 0d 	ld.ub	r6,r11[13]
8000339c:	f3 66 00 0d 	st.b	r9[13],r6
800033a0:	f7 36 00 0c 	ld.ub	r6,r11[12]
800033a4:	f3 66 00 0c 	st.b	r9[12],r6
800033a8:	f7 36 00 0b 	ld.ub	r6,r11[11]
800033ac:	f3 66 00 0b 	st.b	r9[11],r6
800033b0:	f7 36 00 0a 	ld.ub	r6,r11[10]
800033b4:	f3 66 00 0a 	st.b	r9[10],r6
800033b8:	f7 36 00 09 	ld.ub	r6,r11[9]
800033bc:	f3 66 00 09 	st.b	r9[9],r6
800033c0:	f7 36 00 08 	ld.ub	r6,r11[8]
800033c4:	f3 66 00 08 	st.b	r9[8],r6
800033c8:	f7 36 00 07 	ld.ub	r6,r11[7]
800033cc:	f3 66 00 07 	st.b	r9[7],r6
800033d0:	f7 36 00 06 	ld.ub	r6,r11[6]
800033d4:	f3 66 00 06 	st.b	r9[6],r6
800033d8:	f7 36 00 05 	ld.ub	r6,r11[5]
800033dc:	f3 66 00 05 	st.b	r9[5],r6
800033e0:	f7 36 00 04 	ld.ub	r6,r11[4]
800033e4:	f3 66 00 04 	st.b	r9[4],r6
800033e8:	f7 36 00 03 	ld.ub	r6,r11[3]
800033ec:	f3 66 00 03 	st.b	r9[3],r6
800033f0:	f7 36 00 02 	ld.ub	r6,r11[2]
800033f4:	f3 66 00 02 	st.b	r9[2],r6
800033f8:	f7 36 00 01 	ld.ub	r6,r11[1]
800033fc:	f3 66 00 01 	st.b	r9[1],r6
80003400:	f7 36 00 00 	ld.ub	r6,r11[0]
80003404:	f3 66 00 00 	st.b	r9[0],r6
80003408:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
8000340c:	20 1a       	sub	r10,1
8000340e:	f6 0a 07 09 	ld.ub	r9,r11[r10]
80003412:	f8 0a 0b 09 	st.b	r12[r10],r9
80003416:	cf b1       	brne	8000340c <memcpy+0x13a>
80003418:	5e fc       	retal	r12
8000341a:	d7 03       	nop

8000341c <sprintf>:
8000341c:	d4 01       	pushm	lr
8000341e:	21 7d       	sub	sp,92
80003420:	e0 68 ff ff 	mov	r8,65535
80003424:	ea 18 7f ff 	orh	r8,0x7fff
80003428:	50 58       	stdsp	sp[0x14],r8
8000342a:	50 28       	stdsp	sp[0x8],r8
8000342c:	e0 68 02 08 	mov	r8,520
80003430:	ba 68       	st.h	sp[0xc],r8
80003432:	3f f8       	mov	r8,-1
80003434:	ba 78       	st.h	sp[0xe],r8
80003436:	48 88       	lddpc	r8,80003454 <sprintf+0x38>
80003438:	50 4c       	stdsp	sp[0x10],r12
8000343a:	16 9a       	mov	r10,r11
8000343c:	50 0c       	stdsp	sp[0x0],r12
8000343e:	fa c9 ff a0 	sub	r9,sp,-96
80003442:	70 0c       	ld.w	r12,r8[0x0]
80003444:	1a 9b       	mov	r11,sp
80003446:	ca 5d       	rcall	80003790 <_vfprintf_r>
80003448:	30 09       	mov	r9,0
8000344a:	40 08       	lddsp	r8,sp[0x0]
8000344c:	b0 89       	st.b	r8[0x0],r9
8000344e:	2e 9d       	sub	sp,-92
80003450:	d8 02       	popm	pc
80003452:	d7 03       	nop
80003454:	00 00       	add	r0,r0
80003456:	01 00       	ld.w	r0,r0++

80003458 <get_arg>:
80003458:	d4 31       	pushm	r0-r7,lr
8000345a:	20 8d       	sub	sp,32
8000345c:	fa c4 ff bc 	sub	r4,sp,-68
80003460:	50 4b       	stdsp	sp[0x10],r11
80003462:	68 2e       	ld.w	lr,r4[0x8]
80003464:	50 58       	stdsp	sp[0x14],r8
80003466:	12 96       	mov	r6,r9
80003468:	7c 0b       	ld.w	r11,lr[0x0]
8000346a:	70 05       	ld.w	r5,r8[0x0]
8000346c:	50 6e       	stdsp	sp[0x18],lr
8000346e:	58 0b       	cp.w	r11,0
80003470:	f4 0b 17 00 	moveq	r11,r10
80003474:	68 03       	ld.w	r3,r4[0x0]
80003476:	68 11       	ld.w	r1,r4[0x4]
80003478:	40 49       	lddsp	r9,sp[0x10]
8000347a:	30 08       	mov	r8,0
8000347c:	c2 c9       	rjmp	800036d4 <get_arg+0x27c>
8000347e:	2f fb       	sub	r11,-1
80003480:	32 5c       	mov	r12,37
80003482:	17 8a       	ld.ub	r10,r11[0x0]
80003484:	f8 0a 18 00 	cp.b	r10,r12
80003488:	5f 1e       	srne	lr
8000348a:	f0 0a 18 00 	cp.b	r10,r8
8000348e:	5f 1c       	srne	r12
80003490:	fd ec 00 0c 	and	r12,lr,r12
80003494:	f0 0c 18 00 	cp.b	r12,r8
80003498:	cf 31       	brne	8000347e <get_arg+0x26>
8000349a:	58 0a       	cp.w	r10,0
8000349c:	e0 80 01 29 	breq	800036ee <get_arg+0x296>
800034a0:	30 0c       	mov	r12,0
800034a2:	3f fa       	mov	r10,-1
800034a4:	18 90       	mov	r0,r12
800034a6:	50 3a       	stdsp	sp[0xc],r10
800034a8:	18 94       	mov	r4,r12
800034aa:	18 92       	mov	r2,r12
800034ac:	f8 0c 00 3c 	add	r12,r12,r12<<0x3
800034b0:	16 97       	mov	r7,r11
800034b2:	50 7c       	stdsp	sp[0x1c],r12
800034b4:	4c dc       	lddpc	r12,800035e8 <get_arg+0x190>
800034b6:	0f 3a       	ld.ub	r10,r7++
800034b8:	f8 0a 07 0e 	ld.ub	lr,r12[r10]
800034bc:	40 7c       	lddsp	r12,sp[0x1c]
800034be:	1c 0c       	add	r12,lr
800034c0:	4c be       	lddpc	lr,800035ec <get_arg+0x194>
800034c2:	fc 0c 07 0e 	ld.ub	lr,lr[r12]
800034c6:	20 1e       	sub	lr,1
800034c8:	50 0e       	stdsp	sp[0x0],lr
800034ca:	4c ae       	lddpc	lr,800035f0 <get_arg+0x198>
800034cc:	fc 0c 07 0c 	ld.ub	r12,lr[r12]
800034d0:	50 7c       	stdsp	sp[0x1c],r12
800034d2:	40 0c       	lddsp	r12,sp[0x0]
800034d4:	58 7c       	cp.w	r12,7
800034d6:	e0 8b 00 f8 	brhi	800036c6 <get_arg+0x26e>
800034da:	4c 7e       	lddpc	lr,800035f4 <get_arg+0x19c>
800034dc:	fc 0c 03 2f 	ld.w	pc,lr[r12<<0x2]
800034e0:	36 8b       	mov	r11,104
800034e2:	f6 0a 18 00 	cp.b	r10,r11
800034e6:	e0 80 00 f0 	breq	800036c6 <get_arg+0x26e>
800034ea:	37 1b       	mov	r11,113
800034ec:	f6 0a 18 00 	cp.b	r10,r11
800034f0:	c0 70       	breq	800034fe <get_arg+0xa6>
800034f2:	34 cb       	mov	r11,76
800034f4:	f6 0a 18 00 	cp.b	r10,r11
800034f8:	c0 51       	brne	80003502 <get_arg+0xaa>
800034fa:	a3 b4       	sbr	r4,0x3
800034fc:	ce 58       	rjmp	800036c6 <get_arg+0x26e>
800034fe:	a5 b4       	sbr	r4,0x5
80003500:	ce 38       	rjmp	800036c6 <get_arg+0x26e>
80003502:	0f 8b       	ld.ub	r11,r7[0x0]
80003504:	36 ca       	mov	r10,108
80003506:	f4 0b 18 00 	cp.b	r11,r10
8000350a:	c0 51       	brne	80003514 <get_arg+0xbc>
8000350c:	a5 b4       	sbr	r4,0x5
8000350e:	ee cb ff ff 	sub	r11,r7,-1
80003512:	cd b8       	rjmp	800036c8 <get_arg+0x270>
80003514:	a5 a4       	sbr	r4,0x4
80003516:	cd 88       	rjmp	800036c6 <get_arg+0x26e>
80003518:	eb d5 c0 05 	bfextu	r5,r5,0x0,0x5
8000351c:	36 7c       	mov	r12,103
8000351e:	f8 0a 18 00 	cp.b	r10,r12
80003522:	e0 8b 00 27 	brhi	80003570 <get_arg+0x118>
80003526:	36 5b       	mov	r11,101
80003528:	f6 0a 18 00 	cp.b	r10,r11
8000352c:	c4 82       	brcc	800035bc <get_arg+0x164>
8000352e:	34 fb       	mov	r11,79
80003530:	f6 0a 18 00 	cp.b	r10,r11
80003534:	c4 80       	breq	800035c4 <get_arg+0x16c>
80003536:	e0 8b 00 0c 	brhi	8000354e <get_arg+0xf6>
8000353a:	34 5b       	mov	r11,69
8000353c:	f6 0a 18 00 	cp.b	r10,r11
80003540:	c3 e0       	breq	800035bc <get_arg+0x164>
80003542:	34 7b       	mov	r11,71
80003544:	f6 0a 18 00 	cp.b	r10,r11
80003548:	c3 a0       	breq	800035bc <get_arg+0x164>
8000354a:	34 4b       	mov	r11,68
8000354c:	c0 88       	rjmp	8000355c <get_arg+0x104>
8000354e:	35 8b       	mov	r11,88
80003550:	f6 0a 18 00 	cp.b	r10,r11
80003554:	c2 c0       	breq	800035ac <get_arg+0x154>
80003556:	e0 8b 00 07 	brhi	80003564 <get_arg+0x10c>
8000355a:	35 5b       	mov	r11,85
8000355c:	f6 0a 18 00 	cp.b	r10,r11
80003560:	c3 51       	brne	800035ca <get_arg+0x172>
80003562:	c3 18       	rjmp	800035c4 <get_arg+0x16c>
80003564:	36 3b       	mov	r11,99
80003566:	f6 0a 18 00 	cp.b	r10,r11
8000356a:	c2 f0       	breq	800035c8 <get_arg+0x170>
8000356c:	36 4b       	mov	r11,100
8000356e:	c0 e8       	rjmp	8000358a <get_arg+0x132>
80003570:	37 0b       	mov	r11,112
80003572:	f6 0a 18 00 	cp.b	r10,r11
80003576:	c2 50       	breq	800035c0 <get_arg+0x168>
80003578:	e0 8b 00 0d 	brhi	80003592 <get_arg+0x13a>
8000357c:	36 eb       	mov	r11,110
8000357e:	f6 0a 18 00 	cp.b	r10,r11
80003582:	c1 f0       	breq	800035c0 <get_arg+0x168>
80003584:	e0 8b 00 14 	brhi	800035ac <get_arg+0x154>
80003588:	36 9b       	mov	r11,105
8000358a:	f6 0a 18 00 	cp.b	r10,r11
8000358e:	c1 e1       	brne	800035ca <get_arg+0x172>
80003590:	c0 e8       	rjmp	800035ac <get_arg+0x154>
80003592:	37 5b       	mov	r11,117
80003594:	f6 0a 18 00 	cp.b	r10,r11
80003598:	c0 a0       	breq	800035ac <get_arg+0x154>
8000359a:	37 8b       	mov	r11,120
8000359c:	f6 0a 18 00 	cp.b	r10,r11
800035a0:	c0 60       	breq	800035ac <get_arg+0x154>
800035a2:	37 3b       	mov	r11,115
800035a4:	f6 0a 18 00 	cp.b	r10,r11
800035a8:	c1 11       	brne	800035ca <get_arg+0x172>
800035aa:	c0 b8       	rjmp	800035c0 <get_arg+0x168>
800035ac:	ed b4 00 04 	bld	r4,0x4
800035b0:	c0 a0       	breq	800035c4 <get_arg+0x16c>
800035b2:	ed b4 00 05 	bld	r4,0x5
800035b6:	c0 91       	brne	800035c8 <get_arg+0x170>
800035b8:	30 20       	mov	r0,2
800035ba:	c0 88       	rjmp	800035ca <get_arg+0x172>
800035bc:	30 40       	mov	r0,4
800035be:	c0 68       	rjmp	800035ca <get_arg+0x172>
800035c0:	30 30       	mov	r0,3
800035c2:	c0 48       	rjmp	800035ca <get_arg+0x172>
800035c4:	30 10       	mov	r0,1
800035c6:	c0 28       	rjmp	800035ca <get_arg+0x172>
800035c8:	30 00       	mov	r0,0
800035ca:	40 3b       	lddsp	r11,sp[0xc]
800035cc:	5b fb       	cp.w	r11,-1
800035ce:	c0 40       	breq	800035d6 <get_arg+0x17e>
800035d0:	e2 0b 09 20 	st.w	r1[r11<<0x2],r0
800035d4:	c7 98       	rjmp	800036c6 <get_arg+0x26e>
800035d6:	58 60       	cp.w	r0,6
800035d8:	e0 8b 00 77 	brhi	800036c6 <get_arg+0x26e>
800035dc:	6c 0a       	ld.w	r10,r6[0x0]
800035de:	ea cc ff ff 	sub	r12,r5,-1
800035e2:	48 6e       	lddpc	lr,800035f8 <get_arg+0x1a0>
800035e4:	fc 00 03 2f 	ld.w	pc,lr[r0<<0x2]
800035e8:	80 00       	ld.sh	r0,r0[0x0]
800035ea:	97 18       	st.w	r11[0x4],r8
800035ec:	80 00       	ld.sh	r0,r0[0x0]
800035ee:	96 50       	ld.sh	r0,r11[0xa]
800035f0:	80 00       	ld.sh	r0,r0[0x0]
800035f2:	95 e4       	st.w	r10[0x38],r4
800035f4:	80 00       	ld.sh	r0,r0[0x0]
800035f6:	94 44       	ld.sh	r4,r10[0x8]
800035f8:	80 00       	ld.sh	r0,r0[0x0]
800035fa:	94 64       	ld.sh	r4,r10[0xc]
800035fc:	f4 cb ff f8 	sub	r11,r10,-8
80003600:	8d 0b       	st.w	r6[0x0],r11
80003602:	f4 ea 00 00 	ld.d	r10,r10[0]
80003606:	e6 05 08 3a 	st.d	r3[r5<<0x3],r10
8000360a:	c0 f8       	rjmp	80003628 <get_arg+0x1d0>
8000360c:	f4 cb ff fc 	sub	r11,r10,-4
80003610:	8d 0b       	st.w	r6[0x0],r11
80003612:	74 0a       	ld.w	r10,r10[0x0]
80003614:	e6 05 09 3a 	st.w	r3[r5<<0x3],r10
80003618:	c0 88       	rjmp	80003628 <get_arg+0x1d0>
8000361a:	f4 cb ff f8 	sub	r11,r10,-8
8000361e:	8d 0b       	st.w	r6[0x0],r11
80003620:	f4 ea 00 00 	ld.d	r10,r10[0]
80003624:	e6 05 08 3a 	st.d	r3[r5<<0x3],r10
80003628:	0e 9b       	mov	r11,r7
8000362a:	18 95       	mov	r5,r12
8000362c:	c4 e8       	rjmp	800036c8 <get_arg+0x270>
8000362e:	62 0a       	ld.w	r10,r1[0x0]
80003630:	5b fa       	cp.w	r10,-1
80003632:	c0 b1       	brne	80003648 <get_arg+0x1f0>
80003634:	50 19       	stdsp	sp[0x4],r9
80003636:	50 28       	stdsp	sp[0x8],r8
80003638:	e0 6a 00 80 	mov	r10,128
8000363c:	30 0b       	mov	r11,0
8000363e:	02 9c       	mov	r12,r1
80003640:	e0 a0 1d 8e 	rcall	8000715c <memset>
80003644:	40 28       	lddsp	r8,sp[0x8]
80003646:	40 19       	lddsp	r9,sp[0x4]
80003648:	e4 cc 00 01 	sub	r12,r2,1
8000364c:	0e 9b       	mov	r11,r7
8000364e:	50 3c       	stdsp	sp[0xc],r12
80003650:	f2 0c 0c 49 	max	r9,r9,r12
80003654:	c3 a8       	rjmp	800036c8 <get_arg+0x270>
80003656:	62 0a       	ld.w	r10,r1[0x0]
80003658:	5b fa       	cp.w	r10,-1
8000365a:	c0 b1       	brne	80003670 <get_arg+0x218>
8000365c:	50 19       	stdsp	sp[0x4],r9
8000365e:	50 28       	stdsp	sp[0x8],r8
80003660:	e0 6a 00 80 	mov	r10,128
80003664:	30 0b       	mov	r11,0
80003666:	02 9c       	mov	r12,r1
80003668:	e0 a0 1d 7a 	rcall	8000715c <memset>
8000366c:	40 28       	lddsp	r8,sp[0x8]
8000366e:	40 19       	lddsp	r9,sp[0x4]
80003670:	20 12       	sub	r2,1
80003672:	30 0a       	mov	r10,0
80003674:	0e 9b       	mov	r11,r7
80003676:	e2 02 09 2a 	st.w	r1[r2<<0x2],r10
8000367a:	f2 02 0c 49 	max	r9,r9,r2
8000367e:	c2 58       	rjmp	800036c8 <get_arg+0x270>
80003680:	16 97       	mov	r7,r11
80003682:	6c 0a       	ld.w	r10,r6[0x0]
80003684:	f4 cb ff fc 	sub	r11,r10,-4
80003688:	8d 0b       	st.w	r6[0x0],r11
8000368a:	74 0a       	ld.w	r10,r10[0x0]
8000368c:	0e 9b       	mov	r11,r7
8000368e:	e6 05 09 3a 	st.w	r3[r5<<0x3],r10
80003692:	2f f5       	sub	r5,-1
80003694:	c1 a8       	rjmp	800036c8 <get_arg+0x270>
80003696:	f4 c2 00 30 	sub	r2,r10,48
8000369a:	c0 68       	rjmp	800036a6 <get_arg+0x24e>
8000369c:	e4 02 00 22 	add	r2,r2,r2<<0x2
800036a0:	2f f7       	sub	r7,-1
800036a2:	f4 02 00 12 	add	r2,r10,r2<<0x1
800036a6:	0f 8a       	ld.ub	r10,r7[0x0]
800036a8:	58 0a       	cp.w	r10,0
800036aa:	c0 e0       	breq	800036c6 <get_arg+0x26e>
800036ac:	23 0a       	sub	r10,48
800036ae:	58 9a       	cp.w	r10,9
800036b0:	fe 98 ff f6 	brls	8000369c <get_arg+0x244>
800036b4:	c0 98       	rjmp	800036c6 <get_arg+0x26e>
800036b6:	2f f7       	sub	r7,-1
800036b8:	0f 8a       	ld.ub	r10,r7[0x0]
800036ba:	58 0a       	cp.w	r10,0
800036bc:	c0 50       	breq	800036c6 <get_arg+0x26e>
800036be:	23 0a       	sub	r10,48
800036c0:	58 9a       	cp.w	r10,9
800036c2:	fe 98 ff fa 	brls	800036b6 <get_arg+0x25e>
800036c6:	0e 9b       	mov	r11,r7
800036c8:	40 7c       	lddsp	r12,sp[0x1c]
800036ca:	30 ba       	mov	r10,11
800036cc:	f4 0c 18 00 	cp.b	r12,r10
800036d0:	fe 91 fe ee 	brne	800034ac <get_arg+0x54>
800036d4:	40 42       	lddsp	r2,sp[0x10]
800036d6:	17 8c       	ld.ub	r12,r11[0x0]
800036d8:	0a 32       	cp.w	r2,r5
800036da:	5f 4a       	srge	r10
800036dc:	f0 0c 18 00 	cp.b	r12,r8
800036e0:	5f 1c       	srne	r12
800036e2:	f9 ea 00 0a 	and	r10,r12,r10
800036e6:	f0 0a 18 00 	cp.b	r10,r8
800036ea:	fe 91 fe cb 	brne	80003480 <get_arg+0x28>
800036ee:	30 08       	mov	r8,0
800036f0:	40 4e       	lddsp	lr,sp[0x10]
800036f2:	17 8a       	ld.ub	r10,r11[0x0]
800036f4:	e2 05 00 21 	add	r1,r1,r5<<0x2
800036f8:	f0 0a 18 00 	cp.b	r10,r8
800036fc:	fc 09 17 10 	movne	r9,lr
80003700:	e6 05 00 38 	add	r8,r3,r5<<0x3
80003704:	06 9e       	mov	lr,r3
80003706:	c2 a8       	rjmp	8000375a <get_arg+0x302>
80003708:	62 0a       	ld.w	r10,r1[0x0]
8000370a:	58 3a       	cp.w	r10,3
8000370c:	c1 e0       	breq	80003748 <get_arg+0x2f0>
8000370e:	e0 89 00 07 	brgt	8000371c <get_arg+0x2c4>
80003712:	58 1a       	cp.w	r10,1
80003714:	c1 a0       	breq	80003748 <get_arg+0x2f0>
80003716:	58 2a       	cp.w	r10,2
80003718:	c1 81       	brne	80003748 <get_arg+0x2f0>
8000371a:	c0 58       	rjmp	80003724 <get_arg+0x2cc>
8000371c:	58 5a       	cp.w	r10,5
8000371e:	c0 c0       	breq	80003736 <get_arg+0x2de>
80003720:	c0 b5       	brlt	80003736 <get_arg+0x2de>
80003722:	c1 38       	rjmp	80003748 <get_arg+0x2f0>
80003724:	6c 0a       	ld.w	r10,r6[0x0]
80003726:	f4 cc ff f8 	sub	r12,r10,-8
8000372a:	8d 0c       	st.w	r6[0x0],r12
8000372c:	f4 e2 00 00 	ld.d	r2,r10[0]
80003730:	f0 e3 00 00 	st.d	r8[0],r2
80003734:	c1 08       	rjmp	80003754 <get_arg+0x2fc>
80003736:	6c 0a       	ld.w	r10,r6[0x0]
80003738:	f4 cc ff f8 	sub	r12,r10,-8
8000373c:	8d 0c       	st.w	r6[0x0],r12
8000373e:	f4 e2 00 00 	ld.d	r2,r10[0]
80003742:	f0 e3 00 00 	st.d	r8[0],r2
80003746:	c0 78       	rjmp	80003754 <get_arg+0x2fc>
80003748:	6c 0a       	ld.w	r10,r6[0x0]
8000374a:	f4 cc ff fc 	sub	r12,r10,-4
8000374e:	8d 0c       	st.w	r6[0x0],r12
80003750:	74 0a       	ld.w	r10,r10[0x0]
80003752:	91 0a       	st.w	r8[0x0],r10
80003754:	2f f5       	sub	r5,-1
80003756:	2f 88       	sub	r8,-8
80003758:	2f c1       	sub	r1,-4
8000375a:	12 35       	cp.w	r5,r9
8000375c:	fe 9a ff d6 	brle	80003708 <get_arg+0x2b0>
80003760:	1c 93       	mov	r3,lr
80003762:	40 52       	lddsp	r2,sp[0x14]
80003764:	40 6e       	lddsp	lr,sp[0x18]
80003766:	85 05       	st.w	r2[0x0],r5
80003768:	9d 0b       	st.w	lr[0x0],r11
8000376a:	40 4b       	lddsp	r11,sp[0x10]
8000376c:	e6 0b 00 3c 	add	r12,r3,r11<<0x3
80003770:	2f 8d       	sub	sp,-32
80003772:	d8 32       	popm	r0-r7,pc

80003774 <__sprint_r>:
80003774:	d4 21       	pushm	r4-r7,lr
80003776:	14 97       	mov	r7,r10
80003778:	74 28       	ld.w	r8,r10[0x8]
8000377a:	58 08       	cp.w	r8,0
8000377c:	c0 41       	brne	80003784 <__sprint_r+0x10>
8000377e:	95 18       	st.w	r10[0x4],r8
80003780:	10 9c       	mov	r12,r8
80003782:	d8 22       	popm	r4-r7,pc
80003784:	e0 a0 18 c2 	rcall	80006908 <__sfvwrite_r>
80003788:	30 08       	mov	r8,0
8000378a:	8f 18       	st.w	r7[0x4],r8
8000378c:	8f 28       	st.w	r7[0x8],r8
8000378e:	d8 22       	popm	r4-r7,pc

80003790 <_vfprintf_r>:
80003790:	d4 31       	pushm	r0-r7,lr
80003792:	fa cd 06 bc 	sub	sp,sp,1724
80003796:	51 09       	stdsp	sp[0x40],r9
80003798:	16 91       	mov	r1,r11
8000379a:	14 97       	mov	r7,r10
8000379c:	18 95       	mov	r5,r12
8000379e:	e0 a0 1a 2d 	rcall	80006bf8 <_localeconv_r>
800037a2:	78 0c       	ld.w	r12,r12[0x0]
800037a4:	50 cc       	stdsp	sp[0x30],r12
800037a6:	58 05       	cp.w	r5,0
800037a8:	c0 70       	breq	800037b6 <_vfprintf_r+0x26>
800037aa:	6a 68       	ld.w	r8,r5[0x18]
800037ac:	58 08       	cp.w	r8,0
800037ae:	c0 41       	brne	800037b6 <_vfprintf_r+0x26>
800037b0:	0a 9c       	mov	r12,r5
800037b2:	e0 a0 17 47 	rcall	80006640 <__sinit>
800037b6:	4c f8       	lddpc	r8,800038f0 <_vfprintf_r+0x160>
800037b8:	10 31       	cp.w	r1,r8
800037ba:	c0 31       	brne	800037c0 <_vfprintf_r+0x30>
800037bc:	6a 01       	ld.w	r1,r5[0x0]
800037be:	c0 a8       	rjmp	800037d2 <_vfprintf_r+0x42>
800037c0:	4c d8       	lddpc	r8,800038f4 <_vfprintf_r+0x164>
800037c2:	10 31       	cp.w	r1,r8
800037c4:	c0 31       	brne	800037ca <_vfprintf_r+0x3a>
800037c6:	6a 11       	ld.w	r1,r5[0x4]
800037c8:	c0 58       	rjmp	800037d2 <_vfprintf_r+0x42>
800037ca:	4c c8       	lddpc	r8,800038f8 <_vfprintf_r+0x168>
800037cc:	10 31       	cp.w	r1,r8
800037ce:	eb f1 00 02 	ld.weq	r1,r5[0x8]
800037d2:	82 68       	ld.sh	r8,r1[0xc]
800037d4:	ed b8 00 03 	bld	r8,0x3
800037d8:	c0 41       	brne	800037e0 <_vfprintf_r+0x50>
800037da:	62 48       	ld.w	r8,r1[0x10]
800037dc:	58 08       	cp.w	r8,0
800037de:	c0 71       	brne	800037ec <_vfprintf_r+0x5c>
800037e0:	02 9b       	mov	r11,r1
800037e2:	0a 9c       	mov	r12,r5
800037e4:	e0 a0 0f 64 	rcall	800056ac <__swsetup_r>
800037e8:	e0 81 0f 5c 	brne	800056a0 <_vfprintf_r+0x1f10>
800037ec:	82 68       	ld.sh	r8,r1[0xc]
800037ee:	10 99       	mov	r9,r8
800037f0:	e2 19 00 1a 	andl	r9,0x1a,COH
800037f4:	58 a9       	cp.w	r9,10
800037f6:	c3 c1       	brne	8000386e <_vfprintf_r+0xde>
800037f8:	82 79       	ld.sh	r9,r1[0xe]
800037fa:	30 0a       	mov	r10,0
800037fc:	f4 09 19 00 	cp.h	r9,r10
80003800:	c3 75       	brlt	8000386e <_vfprintf_r+0xde>
80003802:	a1 d8       	cbr	r8,0x1
80003804:	fb 58 05 d0 	st.h	sp[1488],r8
80003808:	62 88       	ld.w	r8,r1[0x20]
8000380a:	fb 48 05 e4 	st.w	sp[1508],r8
8000380e:	62 a8       	ld.w	r8,r1[0x28]
80003810:	fb 48 05 ec 	st.w	sp[1516],r8
80003814:	fa c8 ff bc 	sub	r8,sp,-68
80003818:	fb 48 05 d4 	st.w	sp[1492],r8
8000381c:	fb 48 05 c4 	st.w	sp[1476],r8
80003820:	e0 68 04 00 	mov	r8,1024
80003824:	fb 48 05 d8 	st.w	sp[1496],r8
80003828:	fb 48 05 cc 	st.w	sp[1484],r8
8000382c:	30 08       	mov	r8,0
8000382e:	fb 59 05 d2 	st.h	sp[1490],r9
80003832:	0e 9a       	mov	r10,r7
80003834:	41 09       	lddsp	r9,sp[0x40]
80003836:	fa c7 fa 3c 	sub	r7,sp,-1476
8000383a:	fb 48 05 dc 	st.w	sp[1500],r8
8000383e:	0a 9c       	mov	r12,r5
80003840:	0e 9b       	mov	r11,r7
80003842:	ca 7f       	rcall	80003790 <_vfprintf_r>
80003844:	50 bc       	stdsp	sp[0x2c],r12
80003846:	c0 95       	brlt	80003858 <_vfprintf_r+0xc8>
80003848:	0e 9b       	mov	r11,r7
8000384a:	0a 9c       	mov	r12,r5
8000384c:	e0 a0 16 1e 	rcall	80006488 <_fflush_r>
80003850:	40 be       	lddsp	lr,sp[0x2c]
80003852:	f9 be 01 ff 	movne	lr,-1
80003856:	50 be       	stdsp	sp[0x2c],lr
80003858:	fb 08 05 d0 	ld.sh	r8,sp[1488]
8000385c:	ed b8 00 06 	bld	r8,0x6
80003860:	e0 81 0f 22 	brne	800056a4 <_vfprintf_r+0x1f14>
80003864:	82 68       	ld.sh	r8,r1[0xc]
80003866:	a7 a8       	sbr	r8,0x6
80003868:	a2 68       	st.h	r1[0xc],r8
8000386a:	e0 8f 0f 1d 	bral	800056a4 <_vfprintf_r+0x1f14>
8000386e:	30 08       	mov	r8,0
80003870:	fb 48 06 b4 	st.w	sp[1716],r8
80003874:	fb 48 06 90 	st.w	sp[1680],r8
80003878:	fb 48 06 8c 	st.w	sp[1676],r8
8000387c:	fb 48 06 b0 	st.w	sp[1712],r8
80003880:	30 08       	mov	r8,0
80003882:	30 09       	mov	r9,0
80003884:	50 a7       	stdsp	sp[0x28],r7
80003886:	50 78       	stdsp	sp[0x1c],r8
80003888:	fa c4 f9 e0 	sub	r4,sp,-1568
8000388c:	3f f8       	mov	r8,-1
8000388e:	50 59       	stdsp	sp[0x14],r9
80003890:	fb 44 06 88 	st.w	sp[1672],r4
80003894:	fb 48 05 44 	st.w	sp[1348],r8
80003898:	12 9c       	mov	r12,r9
8000389a:	50 69       	stdsp	sp[0x18],r9
8000389c:	50 d9       	stdsp	sp[0x34],r9
8000389e:	50 e9       	stdsp	sp[0x38],r9
800038a0:	50 b9       	stdsp	sp[0x2c],r9
800038a2:	12 97       	mov	r7,r9
800038a4:	40 a2       	lddsp	r2,sp[0x28]
800038a6:	32 5a       	mov	r10,37
800038a8:	30 08       	mov	r8,0
800038aa:	c0 28       	rjmp	800038ae <_vfprintf_r+0x11e>
800038ac:	2f f2       	sub	r2,-1
800038ae:	05 89       	ld.ub	r9,r2[0x0]
800038b0:	f0 09 18 00 	cp.b	r9,r8
800038b4:	5f 1b       	srne	r11
800038b6:	f4 09 18 00 	cp.b	r9,r10
800038ba:	5f 19       	srne	r9
800038bc:	f3 eb 00 0b 	and	r11,r9,r11
800038c0:	f0 0b 18 00 	cp.b	r11,r8
800038c4:	cf 41       	brne	800038ac <_vfprintf_r+0x11c>
800038c6:	40 ab       	lddsp	r11,sp[0x28]
800038c8:	e4 0b 01 06 	sub	r6,r2,r11
800038cc:	c2 40       	breq	80003914 <_vfprintf_r+0x184>
800038ce:	fa f8 06 90 	ld.w	r8,sp[1680]
800038d2:	0c 08       	add	r8,r6
800038d4:	89 0b       	st.w	r4[0x0],r11
800038d6:	fb 48 06 90 	st.w	sp[1680],r8
800038da:	89 16       	st.w	r4[0x4],r6
800038dc:	fa f8 06 8c 	ld.w	r8,sp[1676]
800038e0:	2f f8       	sub	r8,-1
800038e2:	fb 48 06 8c 	st.w	sp[1676],r8
800038e6:	58 78       	cp.w	r8,7
800038e8:	e0 89 00 0a 	brgt	800038fc <_vfprintf_r+0x16c>
800038ec:	2f 84       	sub	r4,-8
800038ee:	c1 08       	rjmp	8000390e <_vfprintf_r+0x17e>
800038f0:	80 00       	ld.sh	r0,r0[0x0]
800038f2:	98 28       	ld.sh	r8,r12[0x4]
800038f4:	80 00       	ld.sh	r0,r0[0x0]
800038f6:	98 48       	ld.sh	r8,r12[0x8]
800038f8:	80 00       	ld.sh	r0,r0[0x0]
800038fa:	98 68       	ld.sh	r8,r12[0xc]
800038fc:	fa ca f9 78 	sub	r10,sp,-1672
80003900:	02 9b       	mov	r11,r1
80003902:	0a 9c       	mov	r12,r5
80003904:	c3 8f       	rcall	80003774 <__sprint_r>
80003906:	e0 81 0e c9 	brne	80005698 <_vfprintf_r+0x1f08>
8000390a:	fa c4 f9 e0 	sub	r4,sp,-1568
8000390e:	40 ba       	lddsp	r10,sp[0x2c]
80003910:	0c 0a       	add	r10,r6
80003912:	50 ba       	stdsp	sp[0x2c],r10
80003914:	05 89       	ld.ub	r9,r2[0x0]
80003916:	30 08       	mov	r8,0
80003918:	f0 09 18 00 	cp.b	r9,r8
8000391c:	e0 80 0e ae 	breq	80005678 <_vfprintf_r+0x1ee8>
80003920:	30 09       	mov	r9,0
80003922:	fb 68 06 bb 	st.b	sp[1723],r8
80003926:	0e 96       	mov	r6,r7
80003928:	e4 c8 ff ff 	sub	r8,r2,-1
8000392c:	3f fe       	mov	lr,-1
8000392e:	50 94       	stdsp	sp[0x24],r4
80003930:	50 41       	stdsp	sp[0x10],r1
80003932:	0e 94       	mov	r4,r7
80003934:	04 91       	mov	r1,r2
80003936:	50 89       	stdsp	sp[0x20],r9
80003938:	50 a8       	stdsp	sp[0x28],r8
8000393a:	50 2e       	stdsp	sp[0x8],lr
8000393c:	50 39       	stdsp	sp[0xc],r9
8000393e:	12 93       	mov	r3,r9
80003940:	12 90       	mov	r0,r9
80003942:	10 97       	mov	r7,r8
80003944:	0a 92       	mov	r2,r5
80003946:	c0 78       	rjmp	80003954 <_vfprintf_r+0x1c4>
80003948:	3f fc       	mov	r12,-1
8000394a:	0a 97       	mov	r7,r5
8000394c:	50 2c       	stdsp	sp[0x8],r12
8000394e:	c0 38       	rjmp	80003954 <_vfprintf_r+0x1c4>
80003950:	30 0b       	mov	r11,0
80003952:	50 3b       	stdsp	sp[0xc],r11
80003954:	0f 38       	ld.ub	r8,r7++
80003956:	c0 28       	rjmp	8000395a <_vfprintf_r+0x1ca>
80003958:	12 90       	mov	r0,r9
8000395a:	f0 c9 00 20 	sub	r9,r8,32
8000395e:	e0 49 00 58 	cp.w	r9,88
80003962:	e0 8b 0a 33 	brhi	80004dc8 <_vfprintf_r+0x1638>
80003966:	4d 9a       	lddpc	r10,80003ac8 <_vfprintf_r+0x338>
80003968:	f4 09 03 2f 	ld.w	pc,r10[r9<<0x2]
8000396c:	50 a7       	stdsp	sp[0x28],r7
8000396e:	50 80       	stdsp	sp[0x20],r0
80003970:	0c 97       	mov	r7,r6
80003972:	04 95       	mov	r5,r2
80003974:	08 96       	mov	r6,r4
80003976:	02 92       	mov	r2,r1
80003978:	4d 59       	lddpc	r9,80003acc <_vfprintf_r+0x33c>
8000397a:	40 94       	lddsp	r4,sp[0x24]
8000397c:	10 90       	mov	r0,r8
8000397e:	40 41       	lddsp	r1,sp[0x10]
80003980:	50 d9       	stdsp	sp[0x34],r9
80003982:	e0 8f 08 95 	bral	80004aac <_vfprintf_r+0x131c>
80003986:	30 08       	mov	r8,0
80003988:	fb 39 06 bb 	ld.ub	r9,sp[1723]
8000398c:	f0 09 18 00 	cp.b	r9,r8
80003990:	ce 21       	brne	80003954 <_vfprintf_r+0x1c4>
80003992:	32 08       	mov	r8,32
80003994:	c6 e8       	rjmp	80003a70 <_vfprintf_r+0x2e0>
80003996:	a1 a3       	sbr	r3,0x0
80003998:	cd eb       	rjmp	80003954 <_vfprintf_r+0x1c4>
8000399a:	0f 89       	ld.ub	r9,r7[0x0]
8000399c:	f2 c8 00 30 	sub	r8,r9,48
800039a0:	58 98       	cp.w	r8,9
800039a2:	e0 8b 00 1d 	brhi	800039dc <_vfprintf_r+0x24c>
800039a6:	ee c8 ff ff 	sub	r8,r7,-1
800039aa:	30 0b       	mov	r11,0
800039ac:	23 09       	sub	r9,48
800039ae:	f6 0b 00 2b 	add	r11,r11,r11<<0x2
800039b2:	f2 0b 00 1b 	add	r11,r9,r11<<0x1
800039b6:	11 39       	ld.ub	r9,r8++
800039b8:	f2 ca 00 30 	sub	r10,r9,48
800039bc:	58 9a       	cp.w	r10,9
800039be:	fe 98 ff f7 	brls	800039ac <_vfprintf_r+0x21c>
800039c2:	e0 49 00 24 	cp.w	r9,36
800039c6:	cc 51       	brne	80003950 <_vfprintf_r+0x1c0>
800039c8:	e0 4b 00 20 	cp.w	r11,32
800039cc:	e0 89 0e 65 	brgt	80005696 <_vfprintf_r+0x1f06>
800039d0:	20 1b       	sub	r11,1
800039d2:	fa f9 06 b4 	ld.w	r9,sp[1716]
800039d6:	12 3b       	cp.w	r11,r9
800039d8:	c0 95       	brlt	800039ea <_vfprintf_r+0x25a>
800039da:	c1 08       	rjmp	800039fa <_vfprintf_r+0x26a>
800039dc:	fa f9 06 b4 	ld.w	r9,sp[1716]
800039e0:	ec ca ff ff 	sub	r10,r6,-1
800039e4:	12 36       	cp.w	r6,r9
800039e6:	c1 f5       	brlt	80003a24 <_vfprintf_r+0x294>
800039e8:	c2 68       	rjmp	80003a34 <_vfprintf_r+0x2a4>
800039ea:	fa ce f9 44 	sub	lr,sp,-1724
800039ee:	10 97       	mov	r7,r8
800039f0:	fc 0b 00 3b 	add	r11,lr,r11<<0x3
800039f4:	f6 f0 fd 88 	ld.w	r0,r11[-632]
800039f8:	c3 58       	rjmp	80003a62 <_vfprintf_r+0x2d2>
800039fa:	10 97       	mov	r7,r8
800039fc:	fa c8 f9 50 	sub	r8,sp,-1712
80003a00:	1a d8       	st.w	--sp,r8
80003a02:	fa c8 fa b8 	sub	r8,sp,-1352
80003a06:	1a d8       	st.w	--sp,r8
80003a08:	fa c8 fb b4 	sub	r8,sp,-1100
80003a0c:	02 9a       	mov	r10,r1
80003a0e:	1a d8       	st.w	--sp,r8
80003a10:	04 9c       	mov	r12,r2
80003a12:	fa c8 f9 40 	sub	r8,sp,-1728
80003a16:	fa c9 ff b4 	sub	r9,sp,-76
80003a1a:	fe b0 fd 1f 	rcall	80003458 <get_arg>
80003a1e:	2f dd       	sub	sp,-12
80003a20:	78 00       	ld.w	r0,r12[0x0]
80003a22:	c2 08       	rjmp	80003a62 <_vfprintf_r+0x2d2>
80003a24:	fa cc f9 44 	sub	r12,sp,-1724
80003a28:	14 96       	mov	r6,r10
80003a2a:	f8 04 00 38 	add	r8,r12,r4<<0x3
80003a2e:	f0 f0 fd 88 	ld.w	r0,r8[-632]
80003a32:	c1 88       	rjmp	80003a62 <_vfprintf_r+0x2d2>
80003a34:	41 08       	lddsp	r8,sp[0x40]
80003a36:	59 f9       	cp.w	r9,31
80003a38:	e0 89 00 11 	brgt	80003a5a <_vfprintf_r+0x2ca>
80003a3c:	f0 cb ff fc 	sub	r11,r8,-4
80003a40:	51 0b       	stdsp	sp[0x40],r11
80003a42:	70 00       	ld.w	r0,r8[0x0]
80003a44:	fa cb f9 44 	sub	r11,sp,-1724
80003a48:	f6 09 00 38 	add	r8,r11,r9<<0x3
80003a4c:	f1 40 fd 88 	st.w	r8[-632],r0
80003a50:	2f f9       	sub	r9,-1
80003a52:	14 96       	mov	r6,r10
80003a54:	fb 49 06 b4 	st.w	sp[1716],r9
80003a58:	c0 58       	rjmp	80003a62 <_vfprintf_r+0x2d2>
80003a5a:	70 00       	ld.w	r0,r8[0x0]
80003a5c:	14 96       	mov	r6,r10
80003a5e:	2f c8       	sub	r8,-4
80003a60:	51 08       	stdsp	sp[0x40],r8
80003a62:	58 00       	cp.w	r0,0
80003a64:	fe 94 ff 78 	brge	80003954 <_vfprintf_r+0x1c4>
80003a68:	5c 30       	neg	r0
80003a6a:	a3 a3       	sbr	r3,0x2
80003a6c:	c7 4b       	rjmp	80003954 <_vfprintf_r+0x1c4>
80003a6e:	32 b8       	mov	r8,43
80003a70:	fb 68 06 bb 	st.b	sp[1723],r8
80003a74:	c7 0b       	rjmp	80003954 <_vfprintf_r+0x1c4>
80003a76:	0f 38       	ld.ub	r8,r7++
80003a78:	e0 48 00 2a 	cp.w	r8,42
80003a7c:	c0 30       	breq	80003a82 <_vfprintf_r+0x2f2>
80003a7e:	30 09       	mov	r9,0
80003a80:	c7 d8       	rjmp	80003b7a <_vfprintf_r+0x3ea>
80003a82:	0f 88       	ld.ub	r8,r7[0x0]
80003a84:	f0 c9 00 30 	sub	r9,r8,48
80003a88:	58 99       	cp.w	r9,9
80003a8a:	e0 8b 00 23 	brhi	80003ad0 <_vfprintf_r+0x340>
80003a8e:	ee c5 ff ff 	sub	r5,r7,-1
80003a92:	30 0b       	mov	r11,0
80003a94:	23 08       	sub	r8,48
80003a96:	f6 0b 00 2b 	add	r11,r11,r11<<0x2
80003a9a:	f0 0b 00 1b 	add	r11,r8,r11<<0x1
80003a9e:	0b 38       	ld.ub	r8,r5++
80003aa0:	f0 c9 00 30 	sub	r9,r8,48
80003aa4:	58 99       	cp.w	r9,9
80003aa6:	fe 98 ff f7 	brls	80003a94 <_vfprintf_r+0x304>
80003aaa:	e0 48 00 24 	cp.w	r8,36
80003aae:	fe 91 ff 51 	brne	80003950 <_vfprintf_r+0x1c0>
80003ab2:	e0 4b 00 20 	cp.w	r11,32
80003ab6:	e0 89 0d f0 	brgt	80005696 <_vfprintf_r+0x1f06>
80003aba:	20 1b       	sub	r11,1
80003abc:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003ac0:	10 3b       	cp.w	r11,r8
80003ac2:	c0 e5       	brlt	80003ade <_vfprintf_r+0x34e>
80003ac4:	c1 58       	rjmp	80003aee <_vfprintf_r+0x35e>
80003ac6:	d7 03       	nop
80003ac8:	80 00       	ld.sh	r0,r0[0x0]
80003aca:	94 80       	ld.uh	r0,r10[0x0]
80003acc:	80 00       	ld.sh	r0,r0[0x0]
80003ace:	96 bc       	ld.uh	r12,r11[0x6]
80003ad0:	fa fa 06 b4 	ld.w	r10,sp[1716]
80003ad4:	ec c9 ff ff 	sub	r9,r6,-1
80003ad8:	14 36       	cp.w	r6,r10
80003ada:	c1 f5       	brlt	80003b18 <_vfprintf_r+0x388>
80003adc:	c2 88       	rjmp	80003b2c <_vfprintf_r+0x39c>
80003ade:	fa ca f9 44 	sub	r10,sp,-1724
80003ae2:	f4 0b 00 3b 	add	r11,r10,r11<<0x3
80003ae6:	f6 fb fd 88 	ld.w	r11,r11[-632]
80003aea:	50 2b       	stdsp	sp[0x8],r11
80003aec:	c3 c8       	rjmp	80003b64 <_vfprintf_r+0x3d4>
80003aee:	fa c8 f9 50 	sub	r8,sp,-1712
80003af2:	1a d8       	st.w	--sp,r8
80003af4:	fa c8 fa b8 	sub	r8,sp,-1352
80003af8:	1a d8       	st.w	--sp,r8
80003afa:	fa c8 fb b4 	sub	r8,sp,-1100
80003afe:	02 9a       	mov	r10,r1
80003b00:	1a d8       	st.w	--sp,r8
80003b02:	04 9c       	mov	r12,r2
80003b04:	fa c8 f9 40 	sub	r8,sp,-1728
80003b08:	fa c9 ff b4 	sub	r9,sp,-76
80003b0c:	fe b0 fc a6 	rcall	80003458 <get_arg>
80003b10:	2f dd       	sub	sp,-12
80003b12:	78 0c       	ld.w	r12,r12[0x0]
80003b14:	50 2c       	stdsp	sp[0x8],r12
80003b16:	c2 78       	rjmp	80003b64 <_vfprintf_r+0x3d4>
80003b18:	12 96       	mov	r6,r9
80003b1a:	0e 95       	mov	r5,r7
80003b1c:	fa c9 f9 44 	sub	r9,sp,-1724
80003b20:	f2 04 00 38 	add	r8,r9,r4<<0x3
80003b24:	f0 f8 fd 88 	ld.w	r8,r8[-632]
80003b28:	50 28       	stdsp	sp[0x8],r8
80003b2a:	c1 d8       	rjmp	80003b64 <_vfprintf_r+0x3d4>
80003b2c:	41 08       	lddsp	r8,sp[0x40]
80003b2e:	59 fa       	cp.w	r10,31
80003b30:	e0 89 00 14 	brgt	80003b58 <_vfprintf_r+0x3c8>
80003b34:	f0 cb ff fc 	sub	r11,r8,-4
80003b38:	70 08       	ld.w	r8,r8[0x0]
80003b3a:	51 0b       	stdsp	sp[0x40],r11
80003b3c:	50 28       	stdsp	sp[0x8],r8
80003b3e:	fa c6 f9 44 	sub	r6,sp,-1724
80003b42:	40 2e       	lddsp	lr,sp[0x8]
80003b44:	ec 0a 00 38 	add	r8,r6,r10<<0x3
80003b48:	f1 4e fd 88 	st.w	r8[-632],lr
80003b4c:	2f fa       	sub	r10,-1
80003b4e:	0e 95       	mov	r5,r7
80003b50:	fb 4a 06 b4 	st.w	sp[1716],r10
80003b54:	12 96       	mov	r6,r9
80003b56:	c0 78       	rjmp	80003b64 <_vfprintf_r+0x3d4>
80003b58:	70 0c       	ld.w	r12,r8[0x0]
80003b5a:	0e 95       	mov	r5,r7
80003b5c:	2f c8       	sub	r8,-4
80003b5e:	50 2c       	stdsp	sp[0x8],r12
80003b60:	12 96       	mov	r6,r9
80003b62:	51 08       	stdsp	sp[0x40],r8
80003b64:	40 2b       	lddsp	r11,sp[0x8]
80003b66:	58 0b       	cp.w	r11,0
80003b68:	fe 95 fe f0 	brlt	80003948 <_vfprintf_r+0x1b8>
80003b6c:	0a 97       	mov	r7,r5
80003b6e:	cf 3a       	rjmp	80003954 <_vfprintf_r+0x1c4>
80003b70:	f2 09 00 29 	add	r9,r9,r9<<0x2
80003b74:	0f 38       	ld.ub	r8,r7++
80003b76:	f4 09 00 19 	add	r9,r10,r9<<0x1
80003b7a:	f0 ca 00 30 	sub	r10,r8,48
80003b7e:	58 9a       	cp.w	r10,9
80003b80:	fe 98 ff f8 	brls	80003b70 <_vfprintf_r+0x3e0>
80003b84:	3f fa       	mov	r10,-1
80003b86:	f2 0a 0c 49 	max	r9,r9,r10
80003b8a:	50 29       	stdsp	sp[0x8],r9
80003b8c:	ce 7a       	rjmp	8000395a <_vfprintf_r+0x1ca>
80003b8e:	a7 b3       	sbr	r3,0x7
80003b90:	ce 2a       	rjmp	80003954 <_vfprintf_r+0x1c4>
80003b92:	30 09       	mov	r9,0
80003b94:	23 08       	sub	r8,48
80003b96:	f2 09 00 29 	add	r9,r9,r9<<0x2
80003b9a:	f0 09 00 19 	add	r9,r8,r9<<0x1
80003b9e:	0f 38       	ld.ub	r8,r7++
80003ba0:	f0 ca 00 30 	sub	r10,r8,48
80003ba4:	58 9a       	cp.w	r10,9
80003ba6:	fe 98 ff f7 	brls	80003b94 <_vfprintf_r+0x404>
80003baa:	e0 48 00 24 	cp.w	r8,36
80003bae:	fe 91 fe d5 	brne	80003958 <_vfprintf_r+0x1c8>
80003bb2:	e0 49 00 20 	cp.w	r9,32
80003bb6:	e0 89 0d 70 	brgt	80005696 <_vfprintf_r+0x1f06>
80003bba:	f2 c4 00 01 	sub	r4,r9,1
80003bbe:	30 19       	mov	r9,1
80003bc0:	50 39       	stdsp	sp[0xc],r9
80003bc2:	cc 9a       	rjmp	80003954 <_vfprintf_r+0x1c4>
80003bc4:	a3 b3       	sbr	r3,0x3
80003bc6:	cc 7a       	rjmp	80003954 <_vfprintf_r+0x1c4>
80003bc8:	a7 a3       	sbr	r3,0x6
80003bca:	cc 5a       	rjmp	80003954 <_vfprintf_r+0x1c4>
80003bcc:	0f 88       	ld.ub	r8,r7[0x0]
80003bce:	36 ce       	mov	lr,108
80003bd0:	fc 08 18 00 	cp.b	r8,lr
80003bd4:	c0 41       	brne	80003bdc <_vfprintf_r+0x44c>
80003bd6:	2f f7       	sub	r7,-1
80003bd8:	a5 b3       	sbr	r3,0x5
80003bda:	cb da       	rjmp	80003954 <_vfprintf_r+0x1c4>
80003bdc:	a5 a3       	sbr	r3,0x4
80003bde:	cb ba       	rjmp	80003954 <_vfprintf_r+0x1c4>
80003be0:	a5 b3       	sbr	r3,0x5
80003be2:	cb 9a       	rjmp	80003954 <_vfprintf_r+0x1c4>
80003be4:	50 a7       	stdsp	sp[0x28],r7
80003be6:	50 80       	stdsp	sp[0x20],r0
80003be8:	0c 97       	mov	r7,r6
80003bea:	10 90       	mov	r0,r8
80003bec:	08 96       	mov	r6,r4
80003bee:	04 95       	mov	r5,r2
80003bf0:	40 94       	lddsp	r4,sp[0x24]
80003bf2:	02 92       	mov	r2,r1
80003bf4:	0e 99       	mov	r9,r7
80003bf6:	40 41       	lddsp	r1,sp[0x10]
80003bf8:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003bfc:	40 3c       	lddsp	r12,sp[0xc]
80003bfe:	58 0c       	cp.w	r12,0
80003c00:	c1 d0       	breq	80003c3a <_vfprintf_r+0x4aa>
80003c02:	10 36       	cp.w	r6,r8
80003c04:	c0 64       	brge	80003c10 <_vfprintf_r+0x480>
80003c06:	fa cb f9 44 	sub	r11,sp,-1724
80003c0a:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003c0e:	c1 d8       	rjmp	80003c48 <_vfprintf_r+0x4b8>
80003c10:	fa c8 f9 50 	sub	r8,sp,-1712
80003c14:	1a d8       	st.w	--sp,r8
80003c16:	fa c8 fa b8 	sub	r8,sp,-1352
80003c1a:	1a d8       	st.w	--sp,r8
80003c1c:	fa c8 fb b4 	sub	r8,sp,-1100
80003c20:	1a d8       	st.w	--sp,r8
80003c22:	fa c8 f9 40 	sub	r8,sp,-1728
80003c26:	fa c9 ff b4 	sub	r9,sp,-76
80003c2a:	04 9a       	mov	r10,r2
80003c2c:	0c 9b       	mov	r11,r6
80003c2e:	0a 9c       	mov	r12,r5
80003c30:	fe b0 fc 14 	rcall	80003458 <get_arg>
80003c34:	2f dd       	sub	sp,-12
80003c36:	19 b8       	ld.ub	r8,r12[0x3]
80003c38:	c2 28       	rjmp	80003c7c <_vfprintf_r+0x4ec>
80003c3a:	2f f7       	sub	r7,-1
80003c3c:	10 39       	cp.w	r9,r8
80003c3e:	c0 84       	brge	80003c4e <_vfprintf_r+0x4be>
80003c40:	fa ca f9 44 	sub	r10,sp,-1724
80003c44:	f4 06 00 36 	add	r6,r10,r6<<0x3
80003c48:	ed 38 fd 8b 	ld.ub	r8,r6[-629]
80003c4c:	c1 88       	rjmp	80003c7c <_vfprintf_r+0x4ec>
80003c4e:	41 09       	lddsp	r9,sp[0x40]
80003c50:	59 f8       	cp.w	r8,31
80003c52:	e0 89 00 12 	brgt	80003c76 <_vfprintf_r+0x4e6>
80003c56:	f2 ca ff fc 	sub	r10,r9,-4
80003c5a:	51 0a       	stdsp	sp[0x40],r10
80003c5c:	72 09       	ld.w	r9,r9[0x0]
80003c5e:	fa c6 f9 44 	sub	r6,sp,-1724
80003c62:	ec 08 00 3a 	add	r10,r6,r8<<0x3
80003c66:	2f f8       	sub	r8,-1
80003c68:	f5 49 fd 88 	st.w	r10[-632],r9
80003c6c:	fb 48 06 b4 	st.w	sp[1716],r8
80003c70:	f1 d9 c0 08 	bfextu	r8,r9,0x0,0x8
80003c74:	c0 48       	rjmp	80003c7c <_vfprintf_r+0x4ec>
80003c76:	13 b8       	ld.ub	r8,r9[0x3]
80003c78:	2f c9       	sub	r9,-4
80003c7a:	51 09       	stdsp	sp[0x40],r9
80003c7c:	fb 68 06 60 	st.b	sp[1632],r8
80003c80:	30 0e       	mov	lr,0
80003c82:	30 08       	mov	r8,0
80003c84:	30 12       	mov	r2,1
80003c86:	fb 68 06 bb 	st.b	sp[1723],r8
80003c8a:	50 2e       	stdsp	sp[0x8],lr
80003c8c:	e0 8f 08 b0 	bral	80004dec <_vfprintf_r+0x165c>
80003c90:	50 a7       	stdsp	sp[0x28],r7
80003c92:	50 80       	stdsp	sp[0x20],r0
80003c94:	0c 97       	mov	r7,r6
80003c96:	04 95       	mov	r5,r2
80003c98:	08 96       	mov	r6,r4
80003c9a:	02 92       	mov	r2,r1
80003c9c:	40 94       	lddsp	r4,sp[0x24]
80003c9e:	10 90       	mov	r0,r8
80003ca0:	40 41       	lddsp	r1,sp[0x10]
80003ca2:	a5 a3       	sbr	r3,0x4
80003ca4:	c0 a8       	rjmp	80003cb8 <_vfprintf_r+0x528>
80003ca6:	50 a7       	stdsp	sp[0x28],r7
80003ca8:	50 80       	stdsp	sp[0x20],r0
80003caa:	0c 97       	mov	r7,r6
80003cac:	04 95       	mov	r5,r2
80003cae:	08 96       	mov	r6,r4
80003cb0:	02 92       	mov	r2,r1
80003cb2:	40 94       	lddsp	r4,sp[0x24]
80003cb4:	10 90       	mov	r0,r8
80003cb6:	40 41       	lddsp	r1,sp[0x10]
80003cb8:	ed b3 00 05 	bld	r3,0x5
80003cbc:	c5 11       	brne	80003d5e <_vfprintf_r+0x5ce>
80003cbe:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003cc2:	40 3c       	lddsp	r12,sp[0xc]
80003cc4:	58 0c       	cp.w	r12,0
80003cc6:	c1 e0       	breq	80003d02 <_vfprintf_r+0x572>
80003cc8:	10 36       	cp.w	r6,r8
80003cca:	c0 64       	brge	80003cd6 <_vfprintf_r+0x546>
80003ccc:	fa cb f9 44 	sub	r11,sp,-1724
80003cd0:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003cd4:	c2 08       	rjmp	80003d14 <_vfprintf_r+0x584>
80003cd6:	fa c8 f9 50 	sub	r8,sp,-1712
80003cda:	1a d8       	st.w	--sp,r8
80003cdc:	fa c8 fa b8 	sub	r8,sp,-1352
80003ce0:	0c 9b       	mov	r11,r6
80003ce2:	1a d8       	st.w	--sp,r8
80003ce4:	fa c8 fb b4 	sub	r8,sp,-1100
80003ce8:	1a d8       	st.w	--sp,r8
80003cea:	fa c9 ff b4 	sub	r9,sp,-76
80003cee:	fa c8 f9 40 	sub	r8,sp,-1728
80003cf2:	04 9a       	mov	r10,r2
80003cf4:	0a 9c       	mov	r12,r5
80003cf6:	fe b0 fb b1 	rcall	80003458 <get_arg>
80003cfa:	2f dd       	sub	sp,-12
80003cfc:	78 1b       	ld.w	r11,r12[0x4]
80003cfe:	78 09       	ld.w	r9,r12[0x0]
80003d00:	c2 b8       	rjmp	80003d56 <_vfprintf_r+0x5c6>
80003d02:	ee ca ff ff 	sub	r10,r7,-1
80003d06:	10 37       	cp.w	r7,r8
80003d08:	c0 b4       	brge	80003d1e <_vfprintf_r+0x58e>
80003d0a:	fa c9 f9 44 	sub	r9,sp,-1724
80003d0e:	14 97       	mov	r7,r10
80003d10:	f2 06 00 36 	add	r6,r9,r6<<0x3
80003d14:	ec fb fd 8c 	ld.w	r11,r6[-628]
80003d18:	ec f9 fd 88 	ld.w	r9,r6[-632]
80003d1c:	c1 d8       	rjmp	80003d56 <_vfprintf_r+0x5c6>
80003d1e:	41 09       	lddsp	r9,sp[0x40]
80003d20:	59 f8       	cp.w	r8,31
80003d22:	e0 89 00 14 	brgt	80003d4a <_vfprintf_r+0x5ba>
80003d26:	f2 cb ff f8 	sub	r11,r9,-8
80003d2a:	51 0b       	stdsp	sp[0x40],r11
80003d2c:	fa c6 f9 44 	sub	r6,sp,-1724
80003d30:	72 1b       	ld.w	r11,r9[0x4]
80003d32:	ec 08 00 3c 	add	r12,r6,r8<<0x3
80003d36:	72 09       	ld.w	r9,r9[0x0]
80003d38:	f9 4b fd 8c 	st.w	r12[-628],r11
80003d3c:	f9 49 fd 88 	st.w	r12[-632],r9
80003d40:	2f f8       	sub	r8,-1
80003d42:	14 97       	mov	r7,r10
80003d44:	fb 48 06 b4 	st.w	sp[1716],r8
80003d48:	c0 78       	rjmp	80003d56 <_vfprintf_r+0x5c6>
80003d4a:	f2 c8 ff f8 	sub	r8,r9,-8
80003d4e:	72 1b       	ld.w	r11,r9[0x4]
80003d50:	14 97       	mov	r7,r10
80003d52:	51 08       	stdsp	sp[0x40],r8
80003d54:	72 09       	ld.w	r9,r9[0x0]
80003d56:	16 98       	mov	r8,r11
80003d58:	fa e9 00 00 	st.d	sp[0],r8
80003d5c:	ca e8       	rjmp	80003eb8 <_vfprintf_r+0x728>
80003d5e:	ed b3 00 04 	bld	r3,0x4
80003d62:	c1 71       	brne	80003d90 <_vfprintf_r+0x600>
80003d64:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003d68:	40 3e       	lddsp	lr,sp[0xc]
80003d6a:	58 0e       	cp.w	lr,0
80003d6c:	c0 80       	breq	80003d7c <_vfprintf_r+0x5ec>
80003d6e:	10 36       	cp.w	r6,r8
80003d70:	c6 94       	brge	80003e42 <_vfprintf_r+0x6b2>
80003d72:	fa cc f9 44 	sub	r12,sp,-1724
80003d76:	f8 06 00 36 	add	r6,r12,r6<<0x3
80003d7a:	c8 28       	rjmp	80003e7e <_vfprintf_r+0x6ee>
80003d7c:	ee ca ff ff 	sub	r10,r7,-1
80003d80:	10 37       	cp.w	r7,r8
80003d82:	e0 84 00 81 	brge	80003e84 <_vfprintf_r+0x6f4>
80003d86:	fa cb f9 44 	sub	r11,sp,-1724
80003d8a:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003d8e:	c7 78       	rjmp	80003e7c <_vfprintf_r+0x6ec>
80003d90:	ed b3 00 06 	bld	r3,0x6
80003d94:	c4 b1       	brne	80003e2a <_vfprintf_r+0x69a>
80003d96:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003d9a:	40 3c       	lddsp	r12,sp[0xc]
80003d9c:	58 0c       	cp.w	r12,0
80003d9e:	c1 d0       	breq	80003dd8 <_vfprintf_r+0x648>
80003da0:	10 36       	cp.w	r6,r8
80003da2:	c0 64       	brge	80003dae <_vfprintf_r+0x61e>
80003da4:	fa cb f9 44 	sub	r11,sp,-1724
80003da8:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003dac:	c1 f8       	rjmp	80003dea <_vfprintf_r+0x65a>
80003dae:	fa c8 f9 50 	sub	r8,sp,-1712
80003db2:	1a d8       	st.w	--sp,r8
80003db4:	fa c8 fa b8 	sub	r8,sp,-1352
80003db8:	1a d8       	st.w	--sp,r8
80003dba:	fa c8 fb b4 	sub	r8,sp,-1100
80003dbe:	1a d8       	st.w	--sp,r8
80003dc0:	fa c8 f9 40 	sub	r8,sp,-1728
80003dc4:	fa c9 ff b4 	sub	r9,sp,-76
80003dc8:	04 9a       	mov	r10,r2
80003dca:	0c 9b       	mov	r11,r6
80003dcc:	0a 9c       	mov	r12,r5
80003dce:	fe b0 fb 45 	rcall	80003458 <get_arg>
80003dd2:	2f dd       	sub	sp,-12
80003dd4:	98 18       	ld.sh	r8,r12[0x2]
80003dd6:	c2 68       	rjmp	80003e22 <_vfprintf_r+0x692>
80003dd8:	ee ca ff ff 	sub	r10,r7,-1
80003ddc:	10 37       	cp.w	r7,r8
80003dde:	c0 94       	brge	80003df0 <_vfprintf_r+0x660>
80003de0:	fa c9 f9 44 	sub	r9,sp,-1724
80003de4:	14 97       	mov	r7,r10
80003de6:	f2 06 00 36 	add	r6,r9,r6<<0x3
80003dea:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
80003dee:	c1 a8       	rjmp	80003e22 <_vfprintf_r+0x692>
80003df0:	41 09       	lddsp	r9,sp[0x40]
80003df2:	59 f8       	cp.w	r8,31
80003df4:	e0 89 00 13 	brgt	80003e1a <_vfprintf_r+0x68a>
80003df8:	f2 cb ff fc 	sub	r11,r9,-4
80003dfc:	51 0b       	stdsp	sp[0x40],r11
80003dfe:	72 09       	ld.w	r9,r9[0x0]
80003e00:	fa c6 f9 44 	sub	r6,sp,-1724
80003e04:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80003e08:	2f f8       	sub	r8,-1
80003e0a:	f7 49 fd 88 	st.w	r11[-632],r9
80003e0e:	fb 48 06 b4 	st.w	sp[1716],r8
80003e12:	14 97       	mov	r7,r10
80003e14:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
80003e18:	c0 58       	rjmp	80003e22 <_vfprintf_r+0x692>
80003e1a:	92 18       	ld.sh	r8,r9[0x2]
80003e1c:	14 97       	mov	r7,r10
80003e1e:	2f c9       	sub	r9,-4
80003e20:	51 09       	stdsp	sp[0x40],r9
80003e22:	50 18       	stdsp	sp[0x4],r8
80003e24:	bf 58       	asr	r8,0x1f
80003e26:	50 08       	stdsp	sp[0x0],r8
80003e28:	c4 88       	rjmp	80003eb8 <_vfprintf_r+0x728>
80003e2a:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003e2e:	40 3c       	lddsp	r12,sp[0xc]
80003e30:	58 0c       	cp.w	r12,0
80003e32:	c1 d0       	breq	80003e6c <_vfprintf_r+0x6dc>
80003e34:	10 36       	cp.w	r6,r8
80003e36:	c0 64       	brge	80003e42 <_vfprintf_r+0x6b2>
80003e38:	fa cb f9 44 	sub	r11,sp,-1724
80003e3c:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003e40:	c1 f8       	rjmp	80003e7e <_vfprintf_r+0x6ee>
80003e42:	fa c8 f9 50 	sub	r8,sp,-1712
80003e46:	1a d8       	st.w	--sp,r8
80003e48:	fa c8 fa b8 	sub	r8,sp,-1352
80003e4c:	0c 9b       	mov	r11,r6
80003e4e:	1a d8       	st.w	--sp,r8
80003e50:	fa c8 fb b4 	sub	r8,sp,-1100
80003e54:	04 9a       	mov	r10,r2
80003e56:	1a d8       	st.w	--sp,r8
80003e58:	0a 9c       	mov	r12,r5
80003e5a:	fa c8 f9 40 	sub	r8,sp,-1728
80003e5e:	fa c9 ff b4 	sub	r9,sp,-76
80003e62:	fe b0 fa fb 	rcall	80003458 <get_arg>
80003e66:	2f dd       	sub	sp,-12
80003e68:	78 0b       	ld.w	r11,r12[0x0]
80003e6a:	c2 48       	rjmp	80003eb2 <_vfprintf_r+0x722>
80003e6c:	ee ca ff ff 	sub	r10,r7,-1
80003e70:	10 37       	cp.w	r7,r8
80003e72:	c0 94       	brge	80003e84 <_vfprintf_r+0x6f4>
80003e74:	fa c9 f9 44 	sub	r9,sp,-1724
80003e78:	f2 06 00 36 	add	r6,r9,r6<<0x3
80003e7c:	14 97       	mov	r7,r10
80003e7e:	ec fb fd 88 	ld.w	r11,r6[-632]
80003e82:	c1 88       	rjmp	80003eb2 <_vfprintf_r+0x722>
80003e84:	41 09       	lddsp	r9,sp[0x40]
80003e86:	59 f8       	cp.w	r8,31
80003e88:	e0 89 00 11 	brgt	80003eaa <_vfprintf_r+0x71a>
80003e8c:	f2 cb ff fc 	sub	r11,r9,-4
80003e90:	51 0b       	stdsp	sp[0x40],r11
80003e92:	fa c6 f9 44 	sub	r6,sp,-1724
80003e96:	72 0b       	ld.w	r11,r9[0x0]
80003e98:	ec 08 00 39 	add	r9,r6,r8<<0x3
80003e9c:	f3 4b fd 88 	st.w	r9[-632],r11
80003ea0:	2f f8       	sub	r8,-1
80003ea2:	14 97       	mov	r7,r10
80003ea4:	fb 48 06 b4 	st.w	sp[1716],r8
80003ea8:	c0 58       	rjmp	80003eb2 <_vfprintf_r+0x722>
80003eaa:	72 0b       	ld.w	r11,r9[0x0]
80003eac:	14 97       	mov	r7,r10
80003eae:	2f c9       	sub	r9,-4
80003eb0:	51 09       	stdsp	sp[0x40],r9
80003eb2:	50 1b       	stdsp	sp[0x4],r11
80003eb4:	bf 5b       	asr	r11,0x1f
80003eb6:	50 0b       	stdsp	sp[0x0],r11
80003eb8:	fa ea 00 00 	ld.d	r10,sp[0]
80003ebc:	58 0a       	cp.w	r10,0
80003ebe:	5c 2b       	cpc	r11
80003ec0:	c0 e4       	brge	80003edc <_vfprintf_r+0x74c>
80003ec2:	30 08       	mov	r8,0
80003ec4:	fa ea 00 00 	ld.d	r10,sp[0]
80003ec8:	30 09       	mov	r9,0
80003eca:	f0 0a 01 0a 	sub	r10,r8,r10
80003ece:	f2 0b 01 4b 	sbc	r11,r9,r11
80003ed2:	32 d8       	mov	r8,45
80003ed4:	fa eb 00 00 	st.d	sp[0],r10
80003ed8:	fb 68 06 bb 	st.b	sp[1723],r8
80003edc:	30 18       	mov	r8,1
80003ede:	e0 8f 06 fd 	bral	80004cd8 <_vfprintf_r+0x1548>
80003ee2:	50 a7       	stdsp	sp[0x28],r7
80003ee4:	50 80       	stdsp	sp[0x20],r0
80003ee6:	0c 97       	mov	r7,r6
80003ee8:	04 95       	mov	r5,r2
80003eea:	08 96       	mov	r6,r4
80003eec:	02 92       	mov	r2,r1
80003eee:	40 94       	lddsp	r4,sp[0x24]
80003ef0:	10 90       	mov	r0,r8
80003ef2:	40 41       	lddsp	r1,sp[0x10]
80003ef4:	0e 99       	mov	r9,r7
80003ef6:	ed b3 00 03 	bld	r3,0x3
80003efa:	c4 11       	brne	80003f7c <_vfprintf_r+0x7ec>
80003efc:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003f00:	40 3a       	lddsp	r10,sp[0xc]
80003f02:	58 0a       	cp.w	r10,0
80003f04:	c1 90       	breq	80003f36 <_vfprintf_r+0x7a6>
80003f06:	10 36       	cp.w	r6,r8
80003f08:	c6 45       	brlt	80003fd0 <_vfprintf_r+0x840>
80003f0a:	fa c8 f9 50 	sub	r8,sp,-1712
80003f0e:	1a d8       	st.w	--sp,r8
80003f10:	fa c8 fa b8 	sub	r8,sp,-1352
80003f14:	1a d8       	st.w	--sp,r8
80003f16:	fa c8 fb b4 	sub	r8,sp,-1100
80003f1a:	0c 9b       	mov	r11,r6
80003f1c:	1a d8       	st.w	--sp,r8
80003f1e:	04 9a       	mov	r10,r2
80003f20:	fa c8 f9 40 	sub	r8,sp,-1728
80003f24:	fa c9 ff b4 	sub	r9,sp,-76
80003f28:	0a 9c       	mov	r12,r5
80003f2a:	fe b0 fa 97 	rcall	80003458 <get_arg>
80003f2e:	2f dd       	sub	sp,-12
80003f30:	78 16       	ld.w	r6,r12[0x4]
80003f32:	50 76       	stdsp	sp[0x1c],r6
80003f34:	c4 88       	rjmp	80003fc4 <_vfprintf_r+0x834>
80003f36:	2f f7       	sub	r7,-1
80003f38:	10 39       	cp.w	r9,r8
80003f3a:	c0 c4       	brge	80003f52 <_vfprintf_r+0x7c2>
80003f3c:	fa ce f9 44 	sub	lr,sp,-1724
80003f40:	fc 06 00 36 	add	r6,lr,r6<<0x3
80003f44:	ec fc fd 8c 	ld.w	r12,r6[-628]
80003f48:	50 7c       	stdsp	sp[0x1c],r12
80003f4a:	ec f6 fd 88 	ld.w	r6,r6[-632]
80003f4e:	50 56       	stdsp	sp[0x14],r6
80003f50:	c6 68       	rjmp	8000401c <_vfprintf_r+0x88c>
80003f52:	41 09       	lddsp	r9,sp[0x40]
80003f54:	59 f8       	cp.w	r8,31
80003f56:	e0 89 00 10 	brgt	80003f76 <_vfprintf_r+0x7e6>
80003f5a:	f2 ca ff f8 	sub	r10,r9,-8
80003f5e:	72 1b       	ld.w	r11,r9[0x4]
80003f60:	51 0a       	stdsp	sp[0x40],r10
80003f62:	72 09       	ld.w	r9,r9[0x0]
80003f64:	fa ca f9 44 	sub	r10,sp,-1724
80003f68:	50 7b       	stdsp	sp[0x1c],r11
80003f6a:	50 59       	stdsp	sp[0x14],r9
80003f6c:	f4 08 00 39 	add	r9,r10,r8<<0x3
80003f70:	40 5b       	lddsp	r11,sp[0x14]
80003f72:	40 7a       	lddsp	r10,sp[0x1c]
80003f74:	c4 78       	rjmp	80004002 <_vfprintf_r+0x872>
80003f76:	72 18       	ld.w	r8,r9[0x4]
80003f78:	50 78       	stdsp	sp[0x1c],r8
80003f7a:	c4 c8       	rjmp	80004012 <_vfprintf_r+0x882>
80003f7c:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003f80:	40 3e       	lddsp	lr,sp[0xc]
80003f82:	58 0e       	cp.w	lr,0
80003f84:	c2 30       	breq	80003fca <_vfprintf_r+0x83a>
80003f86:	10 36       	cp.w	r6,r8
80003f88:	c0 94       	brge	80003f9a <_vfprintf_r+0x80a>
80003f8a:	fa cc f9 44 	sub	r12,sp,-1724
80003f8e:	f8 06 00 36 	add	r6,r12,r6<<0x3
80003f92:	ec fb fd 8c 	ld.w	r11,r6[-628]
80003f96:	50 7b       	stdsp	sp[0x1c],r11
80003f98:	cd 9b       	rjmp	80003f4a <_vfprintf_r+0x7ba>
80003f9a:	fa c8 f9 50 	sub	r8,sp,-1712
80003f9e:	1a d8       	st.w	--sp,r8
80003fa0:	fa c8 fa b8 	sub	r8,sp,-1352
80003fa4:	04 9a       	mov	r10,r2
80003fa6:	1a d8       	st.w	--sp,r8
80003fa8:	fa c8 fb b4 	sub	r8,sp,-1100
80003fac:	0c 9b       	mov	r11,r6
80003fae:	1a d8       	st.w	--sp,r8
80003fb0:	0a 9c       	mov	r12,r5
80003fb2:	fa c8 f9 40 	sub	r8,sp,-1728
80003fb6:	fa c9 ff b4 	sub	r9,sp,-76
80003fba:	fe b0 fa 4f 	rcall	80003458 <get_arg>
80003fbe:	2f dd       	sub	sp,-12
80003fc0:	78 1a       	ld.w	r10,r12[0x4]
80003fc2:	50 7a       	stdsp	sp[0x1c],r10
80003fc4:	78 0c       	ld.w	r12,r12[0x0]
80003fc6:	50 5c       	stdsp	sp[0x14],r12
80003fc8:	c2 a8       	rjmp	8000401c <_vfprintf_r+0x88c>
80003fca:	2f f7       	sub	r7,-1
80003fcc:	10 39       	cp.w	r9,r8
80003fce:	c0 94       	brge	80003fe0 <_vfprintf_r+0x850>
80003fd0:	fa c9 f9 44 	sub	r9,sp,-1724
80003fd4:	f2 06 00 36 	add	r6,r9,r6<<0x3
80003fd8:	ec f8 fd 8c 	ld.w	r8,r6[-628]
80003fdc:	50 78       	stdsp	sp[0x1c],r8
80003fde:	cb 6b       	rjmp	80003f4a <_vfprintf_r+0x7ba>
80003fe0:	41 09       	lddsp	r9,sp[0x40]
80003fe2:	59 f8       	cp.w	r8,31
80003fe4:	e0 89 00 15 	brgt	8000400e <_vfprintf_r+0x87e>
80003fe8:	f2 ca ff f8 	sub	r10,r9,-8
80003fec:	72 16       	ld.w	r6,r9[0x4]
80003fee:	72 09       	ld.w	r9,r9[0x0]
80003ff0:	51 0a       	stdsp	sp[0x40],r10
80003ff2:	50 59       	stdsp	sp[0x14],r9
80003ff4:	fa ce f9 44 	sub	lr,sp,-1724
80003ff8:	50 76       	stdsp	sp[0x1c],r6
80003ffa:	fc 08 00 39 	add	r9,lr,r8<<0x3
80003ffe:	40 5b       	lddsp	r11,sp[0x14]
80004000:	0c 9a       	mov	r10,r6
80004002:	f2 eb fd 88 	st.d	r9[-632],r10
80004006:	2f f8       	sub	r8,-1
80004008:	fb 48 06 b4 	st.w	sp[1716],r8
8000400c:	c0 88       	rjmp	8000401c <_vfprintf_r+0x88c>
8000400e:	72 1c       	ld.w	r12,r9[0x4]
80004010:	50 7c       	stdsp	sp[0x1c],r12
80004012:	f2 c8 ff f8 	sub	r8,r9,-8
80004016:	51 08       	stdsp	sp[0x40],r8
80004018:	72 09       	ld.w	r9,r9[0x0]
8000401a:	50 59       	stdsp	sp[0x14],r9
8000401c:	40 5b       	lddsp	r11,sp[0x14]
8000401e:	40 7a       	lddsp	r10,sp[0x1c]
80004020:	e0 a0 1c fa 	rcall	80007a14 <__isinfd>
80004024:	18 96       	mov	r6,r12
80004026:	c1 50       	breq	80004050 <_vfprintf_r+0x8c0>
80004028:	30 08       	mov	r8,0
8000402a:	30 09       	mov	r9,0
8000402c:	40 5b       	lddsp	r11,sp[0x14]
8000402e:	40 7a       	lddsp	r10,sp[0x1c]
80004030:	e0 a0 21 fe 	rcall	8000842c <__avr32_f64_cmp_lt>
80004034:	c0 40       	breq	8000403c <_vfprintf_r+0x8ac>
80004036:	32 d8       	mov	r8,45
80004038:	fb 68 06 bb 	st.b	sp[1723],r8
8000403c:	4a f8       	lddpc	r8,800040f8 <_vfprintf_r+0x968>
8000403e:	4b 06       	lddpc	r6,800040fc <_vfprintf_r+0x96c>
80004040:	a7 d3       	cbr	r3,0x7
80004042:	e0 40 00 47 	cp.w	r0,71
80004046:	f0 06 17 a0 	movle	r6,r8
8000404a:	30 32       	mov	r2,3
8000404c:	e0 8f 06 d3 	bral	80004df2 <_vfprintf_r+0x1662>
80004050:	40 5b       	lddsp	r11,sp[0x14]
80004052:	40 7a       	lddsp	r10,sp[0x1c]
80004054:	e0 a0 1c f5 	rcall	80007a3e <__isnand>
80004058:	c0 c0       	breq	80004070 <_vfprintf_r+0x8e0>
8000405a:	50 26       	stdsp	sp[0x8],r6
8000405c:	4a 98       	lddpc	r8,80004100 <_vfprintf_r+0x970>
8000405e:	4a a6       	lddpc	r6,80004104 <_vfprintf_r+0x974>
80004060:	a7 d3       	cbr	r3,0x7
80004062:	e0 40 00 47 	cp.w	r0,71
80004066:	f0 06 17 a0 	movle	r6,r8
8000406a:	30 32       	mov	r2,3
8000406c:	e0 8f 06 c9 	bral	80004dfe <_vfprintf_r+0x166e>
80004070:	40 2a       	lddsp	r10,sp[0x8]
80004072:	5b fa       	cp.w	r10,-1
80004074:	c0 41       	brne	8000407c <_vfprintf_r+0x8ec>
80004076:	30 69       	mov	r9,6
80004078:	50 29       	stdsp	sp[0x8],r9
8000407a:	c1 18       	rjmp	8000409c <_vfprintf_r+0x90c>
8000407c:	e0 40 00 47 	cp.w	r0,71
80004080:	5f 09       	sreq	r9
80004082:	e0 40 00 67 	cp.w	r0,103
80004086:	5f 08       	sreq	r8
80004088:	f3 e8 10 08 	or	r8,r9,r8
8000408c:	f8 08 18 00 	cp.b	r8,r12
80004090:	c0 60       	breq	8000409c <_vfprintf_r+0x90c>
80004092:	40 28       	lddsp	r8,sp[0x8]
80004094:	58 08       	cp.w	r8,0
80004096:	f9 b8 00 01 	moveq	r8,1
8000409a:	50 28       	stdsp	sp[0x8],r8
8000409c:	40 78       	lddsp	r8,sp[0x1c]
8000409e:	40 59       	lddsp	r9,sp[0x14]
800040a0:	fa e9 06 94 	st.d	sp[1684],r8
800040a4:	a9 a3       	sbr	r3,0x8
800040a6:	fa f8 06 94 	ld.w	r8,sp[1684]
800040aa:	58 08       	cp.w	r8,0
800040ac:	c0 65       	brlt	800040b8 <_vfprintf_r+0x928>
800040ae:	40 5e       	lddsp	lr,sp[0x14]
800040b0:	30 0c       	mov	r12,0
800040b2:	50 6e       	stdsp	sp[0x18],lr
800040b4:	50 9c       	stdsp	sp[0x24],r12
800040b6:	c0 78       	rjmp	800040c4 <_vfprintf_r+0x934>
800040b8:	40 5b       	lddsp	r11,sp[0x14]
800040ba:	32 da       	mov	r10,45
800040bc:	ee 1b 80 00 	eorh	r11,0x8000
800040c0:	50 9a       	stdsp	sp[0x24],r10
800040c2:	50 6b       	stdsp	sp[0x18],r11
800040c4:	e0 40 00 46 	cp.w	r0,70
800040c8:	5f 09       	sreq	r9
800040ca:	e0 40 00 66 	cp.w	r0,102
800040ce:	5f 08       	sreq	r8
800040d0:	f3 e8 10 08 	or	r8,r9,r8
800040d4:	50 48       	stdsp	sp[0x10],r8
800040d6:	c0 40       	breq	800040de <_vfprintf_r+0x94e>
800040d8:	40 22       	lddsp	r2,sp[0x8]
800040da:	30 39       	mov	r9,3
800040dc:	c1 a8       	rjmp	80004110 <_vfprintf_r+0x980>
800040de:	e0 40 00 45 	cp.w	r0,69
800040e2:	5f 09       	sreq	r9
800040e4:	e0 40 00 65 	cp.w	r0,101
800040e8:	5f 08       	sreq	r8
800040ea:	40 46       	lddsp	r6,sp[0x10]
800040ec:	10 49       	or	r9,r8
800040ee:	ec 09 18 00 	cp.b	r9,r6
800040f2:	c0 b1       	brne	80004108 <_vfprintf_r+0x978>
800040f4:	40 22       	lddsp	r2,sp[0x8]
800040f6:	c0 c8       	rjmp	8000410e <_vfprintf_r+0x97e>
800040f8:	80 00       	ld.sh	r0,r0[0x0]
800040fa:	96 d0       	ld.uh	r0,r11[0xa]
800040fc:	80 00       	ld.sh	r0,r0[0x0]
800040fe:	96 d4       	ld.uh	r4,r11[0xa]
80004100:	80 00       	ld.sh	r0,r0[0x0]
80004102:	96 d8       	ld.uh	r8,r11[0xa]
80004104:	80 00       	ld.sh	r0,r0[0x0]
80004106:	96 dc       	ld.uh	r12,r11[0xa]
80004108:	40 2e       	lddsp	lr,sp[0x8]
8000410a:	fc c2 ff ff 	sub	r2,lr,-1
8000410e:	30 29       	mov	r9,2
80004110:	fa c8 f9 5c 	sub	r8,sp,-1700
80004114:	1a d8       	st.w	--sp,r8
80004116:	fa c8 f9 54 	sub	r8,sp,-1708
8000411a:	1a d8       	st.w	--sp,r8
8000411c:	fa c8 f9 4c 	sub	r8,sp,-1716
80004120:	0a 9c       	mov	r12,r5
80004122:	1a d8       	st.w	--sp,r8
80004124:	04 98       	mov	r8,r2
80004126:	40 9b       	lddsp	r11,sp[0x24]
80004128:	40 aa       	lddsp	r10,sp[0x28]
8000412a:	e0 a0 0b bf 	rcall	800058a8 <_dtoa_r>
8000412e:	e0 40 00 47 	cp.w	r0,71
80004132:	5f 19       	srne	r9
80004134:	e0 40 00 67 	cp.w	r0,103
80004138:	5f 18       	srne	r8
8000413a:	18 96       	mov	r6,r12
8000413c:	2f dd       	sub	sp,-12
8000413e:	f3 e8 00 08 	and	r8,r9,r8
80004142:	c0 41       	brne	8000414a <_vfprintf_r+0x9ba>
80004144:	ed b3 00 00 	bld	r3,0x0
80004148:	c3 01       	brne	800041a8 <_vfprintf_r+0xa18>
8000414a:	ec 02 00 0c 	add	r12,r6,r2
8000414e:	50 3c       	stdsp	sp[0xc],r12
80004150:	40 4b       	lddsp	r11,sp[0x10]
80004152:	58 0b       	cp.w	r11,0
80004154:	c1 50       	breq	8000417e <_vfprintf_r+0x9ee>
80004156:	0d 89       	ld.ub	r9,r6[0x0]
80004158:	33 08       	mov	r8,48
8000415a:	f0 09 18 00 	cp.b	r9,r8
8000415e:	c0 b1       	brne	80004174 <_vfprintf_r+0x9e4>
80004160:	30 08       	mov	r8,0
80004162:	30 09       	mov	r9,0
80004164:	40 6b       	lddsp	r11,sp[0x18]
80004166:	40 7a       	lddsp	r10,sp[0x1c]
80004168:	e0 a0 21 1b 	rcall	8000839e <__avr32_f64_cmp_eq>
8000416c:	fb b2 00 01 	rsubeq	r2,1
80004170:	fb f2 0b ab 	st.weq	sp[0x6ac],r2
80004174:	40 3a       	lddsp	r10,sp[0xc]
80004176:	fa f8 06 ac 	ld.w	r8,sp[1708]
8000417a:	10 0a       	add	r10,r8
8000417c:	50 3a       	stdsp	sp[0xc],r10
8000417e:	40 6b       	lddsp	r11,sp[0x18]
80004180:	30 08       	mov	r8,0
80004182:	30 09       	mov	r9,0
80004184:	40 7a       	lddsp	r10,sp[0x1c]
80004186:	e0 a0 21 0c 	rcall	8000839e <__avr32_f64_cmp_eq>
8000418a:	c0 90       	breq	8000419c <_vfprintf_r+0xa0c>
8000418c:	40 39       	lddsp	r9,sp[0xc]
8000418e:	fb 49 06 a4 	st.w	sp[1700],r9
80004192:	c0 58       	rjmp	8000419c <_vfprintf_r+0xa0c>
80004194:	10 c9       	st.b	r8++,r9
80004196:	fb 48 06 a4 	st.w	sp[1700],r8
8000419a:	c0 28       	rjmp	8000419e <_vfprintf_r+0xa0e>
8000419c:	33 09       	mov	r9,48
8000419e:	fa f8 06 a4 	ld.w	r8,sp[1700]
800041a2:	40 3e       	lddsp	lr,sp[0xc]
800041a4:	1c 38       	cp.w	r8,lr
800041a6:	cf 73       	brcs	80004194 <_vfprintf_r+0xa04>
800041a8:	e0 40 00 47 	cp.w	r0,71
800041ac:	5f 09       	sreq	r9
800041ae:	e0 40 00 67 	cp.w	r0,103
800041b2:	5f 08       	sreq	r8
800041b4:	f3 e8 10 08 	or	r8,r9,r8
800041b8:	fa f9 06 a4 	ld.w	r9,sp[1700]
800041bc:	0c 19       	sub	r9,r6
800041be:	50 69       	stdsp	sp[0x18],r9
800041c0:	58 08       	cp.w	r8,0
800041c2:	c0 b0       	breq	800041d8 <_vfprintf_r+0xa48>
800041c4:	fa f8 06 ac 	ld.w	r8,sp[1708]
800041c8:	5b d8       	cp.w	r8,-3
800041ca:	c0 55       	brlt	800041d4 <_vfprintf_r+0xa44>
800041cc:	40 2c       	lddsp	r12,sp[0x8]
800041ce:	18 38       	cp.w	r8,r12
800041d0:	e0 8a 00 6a 	brle	800042a4 <_vfprintf_r+0xb14>
800041d4:	20 20       	sub	r0,2
800041d6:	c0 58       	rjmp	800041e0 <_vfprintf_r+0xa50>
800041d8:	e0 40 00 65 	cp.w	r0,101
800041dc:	e0 89 00 46 	brgt	80004268 <_vfprintf_r+0xad8>
800041e0:	fa fb 06 ac 	ld.w	r11,sp[1708]
800041e4:	fb 60 06 9c 	st.b	sp[1692],r0
800041e8:	20 1b       	sub	r11,1
800041ea:	fb 4b 06 ac 	st.w	sp[1708],r11
800041ee:	c0 47       	brpl	800041f6 <_vfprintf_r+0xa66>
800041f0:	5c 3b       	neg	r11
800041f2:	32 d8       	mov	r8,45
800041f4:	c0 28       	rjmp	800041f8 <_vfprintf_r+0xa68>
800041f6:	32 b8       	mov	r8,43
800041f8:	fb 68 06 9d 	st.b	sp[1693],r8
800041fc:	58 9b       	cp.w	r11,9
800041fe:	e0 8a 00 1d 	brle	80004238 <_vfprintf_r+0xaa8>
80004202:	fa c9 fa 35 	sub	r9,sp,-1483
80004206:	30 aa       	mov	r10,10
80004208:	12 98       	mov	r8,r9
8000420a:	0e 9c       	mov	r12,r7
8000420c:	0c 92       	mov	r2,r6
8000420e:	f6 0a 0c 06 	divs	r6,r11,r10
80004212:	0e 9b       	mov	r11,r7
80004214:	2d 0b       	sub	r11,-48
80004216:	10 fb       	st.b	--r8,r11
80004218:	0c 9b       	mov	r11,r6
8000421a:	58 96       	cp.w	r6,9
8000421c:	fe 99 ff f9 	brgt	8000420e <_vfprintf_r+0xa7e>
80004220:	2d 0b       	sub	r11,-48
80004222:	18 97       	mov	r7,r12
80004224:	04 96       	mov	r6,r2
80004226:	10 fb       	st.b	--r8,r11
80004228:	fa ca f9 62 	sub	r10,sp,-1694
8000422c:	c0 38       	rjmp	80004232 <_vfprintf_r+0xaa2>
8000422e:	11 3b       	ld.ub	r11,r8++
80004230:	14 cb       	st.b	r10++,r11
80004232:	12 38       	cp.w	r8,r9
80004234:	cf d3       	brcs	8000422e <_vfprintf_r+0xa9e>
80004236:	c0 98       	rjmp	80004248 <_vfprintf_r+0xab8>
80004238:	2d 0b       	sub	r11,-48
8000423a:	33 08       	mov	r8,48
8000423c:	fb 6b 06 9f 	st.b	sp[1695],r11
80004240:	fb 68 06 9e 	st.b	sp[1694],r8
80004244:	fa ca f9 60 	sub	r10,sp,-1696
80004248:	fa c8 f9 64 	sub	r8,sp,-1692
8000424c:	f4 08 01 08 	sub	r8,r10,r8
80004250:	50 e8       	stdsp	sp[0x38],r8
80004252:	10 92       	mov	r2,r8
80004254:	40 6b       	lddsp	r11,sp[0x18]
80004256:	16 02       	add	r2,r11
80004258:	58 1b       	cp.w	r11,1
8000425a:	e0 89 00 05 	brgt	80004264 <_vfprintf_r+0xad4>
8000425e:	ed b3 00 00 	bld	r3,0x0
80004262:	c3 51       	brne	800042cc <_vfprintf_r+0xb3c>
80004264:	2f f2       	sub	r2,-1
80004266:	c3 38       	rjmp	800042cc <_vfprintf_r+0xb3c>
80004268:	e0 40 00 66 	cp.w	r0,102
8000426c:	c1 c1       	brne	800042a4 <_vfprintf_r+0xb14>
8000426e:	fa f2 06 ac 	ld.w	r2,sp[1708]
80004272:	58 02       	cp.w	r2,0
80004274:	e0 8a 00 0c 	brle	8000428c <_vfprintf_r+0xafc>
80004278:	40 2a       	lddsp	r10,sp[0x8]
8000427a:	58 0a       	cp.w	r10,0
8000427c:	c0 41       	brne	80004284 <_vfprintf_r+0xaf4>
8000427e:	ed b3 00 00 	bld	r3,0x0
80004282:	c2 51       	brne	800042cc <_vfprintf_r+0xb3c>
80004284:	2f f2       	sub	r2,-1
80004286:	40 29       	lddsp	r9,sp[0x8]
80004288:	12 02       	add	r2,r9
8000428a:	c0 b8       	rjmp	800042a0 <_vfprintf_r+0xb10>
8000428c:	40 28       	lddsp	r8,sp[0x8]
8000428e:	58 08       	cp.w	r8,0
80004290:	c0 61       	brne	8000429c <_vfprintf_r+0xb0c>
80004292:	ed b3 00 00 	bld	r3,0x0
80004296:	c0 30       	breq	8000429c <_vfprintf_r+0xb0c>
80004298:	30 12       	mov	r2,1
8000429a:	c1 98       	rjmp	800042cc <_vfprintf_r+0xb3c>
8000429c:	40 22       	lddsp	r2,sp[0x8]
8000429e:	2f e2       	sub	r2,-2
800042a0:	36 60       	mov	r0,102
800042a2:	c1 58       	rjmp	800042cc <_vfprintf_r+0xb3c>
800042a4:	fa f2 06 ac 	ld.w	r2,sp[1708]
800042a8:	40 6e       	lddsp	lr,sp[0x18]
800042aa:	1c 32       	cp.w	r2,lr
800042ac:	c0 65       	brlt	800042b8 <_vfprintf_r+0xb28>
800042ae:	ed b3 00 00 	bld	r3,0x0
800042b2:	f7 b2 00 ff 	subeq	r2,-1
800042b6:	c0 a8       	rjmp	800042ca <_vfprintf_r+0xb3a>
800042b8:	e4 08 11 02 	rsub	r8,r2,2
800042bc:	40 6c       	lddsp	r12,sp[0x18]
800042be:	58 02       	cp.w	r2,0
800042c0:	f0 02 17 a0 	movle	r2,r8
800042c4:	f9 b2 09 01 	movgt	r2,1
800042c8:	18 02       	add	r2,r12
800042ca:	36 70       	mov	r0,103
800042cc:	40 9b       	lddsp	r11,sp[0x24]
800042ce:	58 0b       	cp.w	r11,0
800042d0:	e0 80 05 91 	breq	80004df2 <_vfprintf_r+0x1662>
800042d4:	32 d8       	mov	r8,45
800042d6:	fb 68 06 bb 	st.b	sp[1723],r8
800042da:	e0 8f 05 90 	bral	80004dfa <_vfprintf_r+0x166a>
800042de:	50 a7       	stdsp	sp[0x28],r7
800042e0:	04 95       	mov	r5,r2
800042e2:	0c 97       	mov	r7,r6
800042e4:	02 92       	mov	r2,r1
800042e6:	08 96       	mov	r6,r4
800042e8:	40 41       	lddsp	r1,sp[0x10]
800042ea:	40 94       	lddsp	r4,sp[0x24]
800042ec:	0e 99       	mov	r9,r7
800042ee:	ed b3 00 05 	bld	r3,0x5
800042f2:	c4 81       	brne	80004382 <_vfprintf_r+0xbf2>
800042f4:	fa f8 06 b4 	ld.w	r8,sp[1716]
800042f8:	40 3e       	lddsp	lr,sp[0xc]
800042fa:	58 0e       	cp.w	lr,0
800042fc:	c1 d0       	breq	80004336 <_vfprintf_r+0xba6>
800042fe:	10 36       	cp.w	r6,r8
80004300:	c0 64       	brge	8000430c <_vfprintf_r+0xb7c>
80004302:	fa cc f9 44 	sub	r12,sp,-1724
80004306:	f8 06 00 36 	add	r6,r12,r6<<0x3
8000430a:	c1 d8       	rjmp	80004344 <_vfprintf_r+0xbb4>
8000430c:	fa c8 f9 50 	sub	r8,sp,-1712
80004310:	1a d8       	st.w	--sp,r8
80004312:	fa c8 fa b8 	sub	r8,sp,-1352
80004316:	04 9a       	mov	r10,r2
80004318:	1a d8       	st.w	--sp,r8
8000431a:	fa c8 fb b4 	sub	r8,sp,-1100
8000431e:	0c 9b       	mov	r11,r6
80004320:	1a d8       	st.w	--sp,r8
80004322:	0a 9c       	mov	r12,r5
80004324:	fa c8 f9 40 	sub	r8,sp,-1728
80004328:	fa c9 ff b4 	sub	r9,sp,-76
8000432c:	fe b0 f8 96 	rcall	80003458 <get_arg>
80004330:	2f dd       	sub	sp,-12
80004332:	78 0a       	ld.w	r10,r12[0x0]
80004334:	c2 08       	rjmp	80004374 <_vfprintf_r+0xbe4>
80004336:	2f f7       	sub	r7,-1
80004338:	10 39       	cp.w	r9,r8
8000433a:	c0 84       	brge	8000434a <_vfprintf_r+0xbba>
8000433c:	fa cb f9 44 	sub	r11,sp,-1724
80004340:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004344:	ec fa fd 88 	ld.w	r10,r6[-632]
80004348:	c1 68       	rjmp	80004374 <_vfprintf_r+0xbe4>
8000434a:	41 09       	lddsp	r9,sp[0x40]
8000434c:	59 f8       	cp.w	r8,31
8000434e:	e0 89 00 10 	brgt	8000436e <_vfprintf_r+0xbde>
80004352:	f2 ca ff fc 	sub	r10,r9,-4
80004356:	51 0a       	stdsp	sp[0x40],r10
80004358:	fa c6 f9 44 	sub	r6,sp,-1724
8000435c:	72 0a       	ld.w	r10,r9[0x0]
8000435e:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004362:	f3 4a fd 88 	st.w	r9[-632],r10
80004366:	2f f8       	sub	r8,-1
80004368:	fb 48 06 b4 	st.w	sp[1716],r8
8000436c:	c0 48       	rjmp	80004374 <_vfprintf_r+0xbe4>
8000436e:	72 0a       	ld.w	r10,r9[0x0]
80004370:	2f c9       	sub	r9,-4
80004372:	51 09       	stdsp	sp[0x40],r9
80004374:	40 be       	lddsp	lr,sp[0x2c]
80004376:	1c 98       	mov	r8,lr
80004378:	95 1e       	st.w	r10[0x4],lr
8000437a:	bf 58       	asr	r8,0x1f
8000437c:	95 08       	st.w	r10[0x0],r8
8000437e:	fe 9f fa 93 	bral	800038a4 <_vfprintf_r+0x114>
80004382:	ed b3 00 04 	bld	r3,0x4
80004386:	c4 80       	breq	80004416 <_vfprintf_r+0xc86>
80004388:	e2 13 00 40 	andl	r3,0x40,COH
8000438c:	c4 50       	breq	80004416 <_vfprintf_r+0xc86>
8000438e:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004392:	40 3c       	lddsp	r12,sp[0xc]
80004394:	58 0c       	cp.w	r12,0
80004396:	c1 d0       	breq	800043d0 <_vfprintf_r+0xc40>
80004398:	10 36       	cp.w	r6,r8
8000439a:	c0 64       	brge	800043a6 <_vfprintf_r+0xc16>
8000439c:	fa cb f9 44 	sub	r11,sp,-1724
800043a0:	f6 06 00 36 	add	r6,r11,r6<<0x3
800043a4:	c1 d8       	rjmp	800043de <_vfprintf_r+0xc4e>
800043a6:	fa c8 f9 50 	sub	r8,sp,-1712
800043aa:	1a d8       	st.w	--sp,r8
800043ac:	fa c8 fa b8 	sub	r8,sp,-1352
800043b0:	04 9a       	mov	r10,r2
800043b2:	1a d8       	st.w	--sp,r8
800043b4:	fa c8 fb b4 	sub	r8,sp,-1100
800043b8:	0c 9b       	mov	r11,r6
800043ba:	1a d8       	st.w	--sp,r8
800043bc:	0a 9c       	mov	r12,r5
800043be:	fa c8 f9 40 	sub	r8,sp,-1728
800043c2:	fa c9 ff b4 	sub	r9,sp,-76
800043c6:	fe b0 f8 49 	rcall	80003458 <get_arg>
800043ca:	2f dd       	sub	sp,-12
800043cc:	78 0a       	ld.w	r10,r12[0x0]
800043ce:	c2 08       	rjmp	8000440e <_vfprintf_r+0xc7e>
800043d0:	2f f7       	sub	r7,-1
800043d2:	10 39       	cp.w	r9,r8
800043d4:	c0 84       	brge	800043e4 <_vfprintf_r+0xc54>
800043d6:	fa ca f9 44 	sub	r10,sp,-1724
800043da:	f4 06 00 36 	add	r6,r10,r6<<0x3
800043de:	ec fa fd 88 	ld.w	r10,r6[-632]
800043e2:	c1 68       	rjmp	8000440e <_vfprintf_r+0xc7e>
800043e4:	41 09       	lddsp	r9,sp[0x40]
800043e6:	59 f8       	cp.w	r8,31
800043e8:	e0 89 00 10 	brgt	80004408 <_vfprintf_r+0xc78>
800043ec:	f2 ca ff fc 	sub	r10,r9,-4
800043f0:	51 0a       	stdsp	sp[0x40],r10
800043f2:	fa c6 f9 44 	sub	r6,sp,-1724
800043f6:	72 0a       	ld.w	r10,r9[0x0]
800043f8:	ec 08 00 39 	add	r9,r6,r8<<0x3
800043fc:	f3 4a fd 88 	st.w	r9[-632],r10
80004400:	2f f8       	sub	r8,-1
80004402:	fb 48 06 b4 	st.w	sp[1716],r8
80004406:	c0 48       	rjmp	8000440e <_vfprintf_r+0xc7e>
80004408:	72 0a       	ld.w	r10,r9[0x0]
8000440a:	2f c9       	sub	r9,-4
8000440c:	51 09       	stdsp	sp[0x40],r9
8000440e:	40 be       	lddsp	lr,sp[0x2c]
80004410:	b4 0e       	st.h	r10[0x0],lr
80004412:	fe 9f fa 49 	bral	800038a4 <_vfprintf_r+0x114>
80004416:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000441a:	40 3c       	lddsp	r12,sp[0xc]
8000441c:	58 0c       	cp.w	r12,0
8000441e:	c1 d0       	breq	80004458 <_vfprintf_r+0xcc8>
80004420:	10 36       	cp.w	r6,r8
80004422:	c0 64       	brge	8000442e <_vfprintf_r+0xc9e>
80004424:	fa cb f9 44 	sub	r11,sp,-1724
80004428:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000442c:	c1 d8       	rjmp	80004466 <_vfprintf_r+0xcd6>
8000442e:	fa c8 f9 50 	sub	r8,sp,-1712
80004432:	1a d8       	st.w	--sp,r8
80004434:	fa c8 fa b8 	sub	r8,sp,-1352
80004438:	04 9a       	mov	r10,r2
8000443a:	1a d8       	st.w	--sp,r8
8000443c:	fa c8 fb b4 	sub	r8,sp,-1100
80004440:	0c 9b       	mov	r11,r6
80004442:	1a d8       	st.w	--sp,r8
80004444:	0a 9c       	mov	r12,r5
80004446:	fa c8 f9 40 	sub	r8,sp,-1728
8000444a:	fa c9 ff b4 	sub	r9,sp,-76
8000444e:	fe b0 f8 05 	rcall	80003458 <get_arg>
80004452:	2f dd       	sub	sp,-12
80004454:	78 0a       	ld.w	r10,r12[0x0]
80004456:	c2 08       	rjmp	80004496 <_vfprintf_r+0xd06>
80004458:	2f f7       	sub	r7,-1
8000445a:	10 39       	cp.w	r9,r8
8000445c:	c0 84       	brge	8000446c <_vfprintf_r+0xcdc>
8000445e:	fa ca f9 44 	sub	r10,sp,-1724
80004462:	f4 06 00 36 	add	r6,r10,r6<<0x3
80004466:	ec fa fd 88 	ld.w	r10,r6[-632]
8000446a:	c1 68       	rjmp	80004496 <_vfprintf_r+0xd06>
8000446c:	41 09       	lddsp	r9,sp[0x40]
8000446e:	59 f8       	cp.w	r8,31
80004470:	e0 89 00 10 	brgt	80004490 <_vfprintf_r+0xd00>
80004474:	f2 ca ff fc 	sub	r10,r9,-4
80004478:	51 0a       	stdsp	sp[0x40],r10
8000447a:	fa c6 f9 44 	sub	r6,sp,-1724
8000447e:	72 0a       	ld.w	r10,r9[0x0]
80004480:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004484:	f3 4a fd 88 	st.w	r9[-632],r10
80004488:	2f f8       	sub	r8,-1
8000448a:	fb 48 06 b4 	st.w	sp[1716],r8
8000448e:	c0 48       	rjmp	80004496 <_vfprintf_r+0xd06>
80004490:	72 0a       	ld.w	r10,r9[0x0]
80004492:	2f c9       	sub	r9,-4
80004494:	51 09       	stdsp	sp[0x40],r9
80004496:	40 be       	lddsp	lr,sp[0x2c]
80004498:	95 0e       	st.w	r10[0x0],lr
8000449a:	fe 9f fa 05 	bral	800038a4 <_vfprintf_r+0x114>
8000449e:	50 a7       	stdsp	sp[0x28],r7
800044a0:	50 80       	stdsp	sp[0x20],r0
800044a2:	0c 97       	mov	r7,r6
800044a4:	04 95       	mov	r5,r2
800044a6:	08 96       	mov	r6,r4
800044a8:	02 92       	mov	r2,r1
800044aa:	40 94       	lddsp	r4,sp[0x24]
800044ac:	10 90       	mov	r0,r8
800044ae:	40 41       	lddsp	r1,sp[0x10]
800044b0:	a5 a3       	sbr	r3,0x4
800044b2:	c0 a8       	rjmp	800044c6 <_vfprintf_r+0xd36>
800044b4:	50 a7       	stdsp	sp[0x28],r7
800044b6:	50 80       	stdsp	sp[0x20],r0
800044b8:	0c 97       	mov	r7,r6
800044ba:	04 95       	mov	r5,r2
800044bc:	08 96       	mov	r6,r4
800044be:	02 92       	mov	r2,r1
800044c0:	40 94       	lddsp	r4,sp[0x24]
800044c2:	10 90       	mov	r0,r8
800044c4:	40 41       	lddsp	r1,sp[0x10]
800044c6:	ed b3 00 05 	bld	r3,0x5
800044ca:	c5 d1       	brne	80004584 <_vfprintf_r+0xdf4>
800044cc:	fa f8 06 b4 	ld.w	r8,sp[1716]
800044d0:	40 3c       	lddsp	r12,sp[0xc]
800044d2:	58 0c       	cp.w	r12,0
800044d4:	c2 60       	breq	80004520 <_vfprintf_r+0xd90>
800044d6:	10 36       	cp.w	r6,r8
800044d8:	c0 a4       	brge	800044ec <_vfprintf_r+0xd5c>
800044da:	fa cb f9 44 	sub	r11,sp,-1724
800044de:	f6 06 00 36 	add	r6,r11,r6<<0x3
800044e2:	ec e8 fd 88 	ld.d	r8,r6[-632]
800044e6:	fa e9 00 00 	st.d	sp[0],r8
800044ea:	c1 88       	rjmp	8000451a <_vfprintf_r+0xd8a>
800044ec:	fa c8 f9 50 	sub	r8,sp,-1712
800044f0:	1a d8       	st.w	--sp,r8
800044f2:	fa c8 fa b8 	sub	r8,sp,-1352
800044f6:	04 9a       	mov	r10,r2
800044f8:	1a d8       	st.w	--sp,r8
800044fa:	0c 9b       	mov	r11,r6
800044fc:	fa c8 fb b4 	sub	r8,sp,-1100
80004500:	0a 9c       	mov	r12,r5
80004502:	1a d8       	st.w	--sp,r8
80004504:	fa c8 f9 40 	sub	r8,sp,-1728
80004508:	fa c9 ff b4 	sub	r9,sp,-76
8000450c:	fe b0 f7 a6 	rcall	80003458 <get_arg>
80004510:	2f dd       	sub	sp,-12
80004512:	f8 ea 00 00 	ld.d	r10,r12[0]
80004516:	fa eb 00 00 	st.d	sp[0],r10
8000451a:	30 08       	mov	r8,0
8000451c:	e0 8f 03 db 	bral	80004cd2 <_vfprintf_r+0x1542>
80004520:	ee ca ff ff 	sub	r10,r7,-1
80004524:	10 37       	cp.w	r7,r8
80004526:	c0 b4       	brge	8000453c <_vfprintf_r+0xdac>
80004528:	fa c9 f9 44 	sub	r9,sp,-1724
8000452c:	14 97       	mov	r7,r10
8000452e:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004532:	ec ea fd 88 	ld.d	r10,r6[-632]
80004536:	fa eb 00 00 	st.d	sp[0],r10
8000453a:	c1 88       	rjmp	8000456a <_vfprintf_r+0xdda>
8000453c:	41 09       	lddsp	r9,sp[0x40]
8000453e:	59 f8       	cp.w	r8,31
80004540:	e0 89 00 18 	brgt	80004570 <_vfprintf_r+0xde0>
80004544:	f2 e6 00 00 	ld.d	r6,r9[0]
80004548:	f2 cb ff f8 	sub	r11,r9,-8
8000454c:	fa e7 00 00 	st.d	sp[0],r6
80004550:	51 0b       	stdsp	sp[0x40],r11
80004552:	fa c6 f9 44 	sub	r6,sp,-1724
80004556:	ec 08 00 39 	add	r9,r6,r8<<0x3
8000455a:	fa e6 00 00 	ld.d	r6,sp[0]
8000455e:	f2 e7 fd 88 	st.d	r9[-632],r6
80004562:	2f f8       	sub	r8,-1
80004564:	14 97       	mov	r7,r10
80004566:	fb 48 06 b4 	st.w	sp[1716],r8
8000456a:	40 38       	lddsp	r8,sp[0xc]
8000456c:	e0 8f 03 b3 	bral	80004cd2 <_vfprintf_r+0x1542>
80004570:	f2 e6 00 00 	ld.d	r6,r9[0]
80004574:	40 38       	lddsp	r8,sp[0xc]
80004576:	fa e7 00 00 	st.d	sp[0],r6
8000457a:	2f 89       	sub	r9,-8
8000457c:	14 97       	mov	r7,r10
8000457e:	51 09       	stdsp	sp[0x40],r9
80004580:	e0 8f 03 a9 	bral	80004cd2 <_vfprintf_r+0x1542>
80004584:	ed b3 00 04 	bld	r3,0x4
80004588:	c1 61       	brne	800045b4 <_vfprintf_r+0xe24>
8000458a:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000458e:	40 3e       	lddsp	lr,sp[0xc]
80004590:	58 0e       	cp.w	lr,0
80004592:	c0 80       	breq	800045a2 <_vfprintf_r+0xe12>
80004594:	10 36       	cp.w	r6,r8
80004596:	c6 74       	brge	80004664 <_vfprintf_r+0xed4>
80004598:	fa cc f9 44 	sub	r12,sp,-1724
8000459c:	f8 06 00 36 	add	r6,r12,r6<<0x3
800045a0:	c8 08       	rjmp	800046a0 <_vfprintf_r+0xf10>
800045a2:	ee ca ff ff 	sub	r10,r7,-1
800045a6:	10 37       	cp.w	r7,r8
800045a8:	c7 f4       	brge	800046a6 <_vfprintf_r+0xf16>
800045aa:	fa cb f9 44 	sub	r11,sp,-1724
800045ae:	f6 06 00 36 	add	r6,r11,r6<<0x3
800045b2:	c7 68       	rjmp	8000469e <_vfprintf_r+0xf0e>
800045b4:	ed b3 00 06 	bld	r3,0x6
800045b8:	c4 a1       	brne	8000464c <_vfprintf_r+0xebc>
800045ba:	fa f8 06 b4 	ld.w	r8,sp[1716]
800045be:	40 3c       	lddsp	r12,sp[0xc]
800045c0:	58 0c       	cp.w	r12,0
800045c2:	c1 d0       	breq	800045fc <_vfprintf_r+0xe6c>
800045c4:	10 36       	cp.w	r6,r8
800045c6:	c0 64       	brge	800045d2 <_vfprintf_r+0xe42>
800045c8:	fa cb f9 44 	sub	r11,sp,-1724
800045cc:	f6 06 00 36 	add	r6,r11,r6<<0x3
800045d0:	c1 f8       	rjmp	8000460e <_vfprintf_r+0xe7e>
800045d2:	fa c8 f9 50 	sub	r8,sp,-1712
800045d6:	1a d8       	st.w	--sp,r8
800045d8:	fa c8 fa b8 	sub	r8,sp,-1352
800045dc:	1a d8       	st.w	--sp,r8
800045de:	fa c8 fb b4 	sub	r8,sp,-1100
800045e2:	1a d8       	st.w	--sp,r8
800045e4:	fa c8 f9 40 	sub	r8,sp,-1728
800045e8:	fa c9 ff b4 	sub	r9,sp,-76
800045ec:	04 9a       	mov	r10,r2
800045ee:	0c 9b       	mov	r11,r6
800045f0:	0a 9c       	mov	r12,r5
800045f2:	fe b0 f7 33 	rcall	80003458 <get_arg>
800045f6:	2f dd       	sub	sp,-12
800045f8:	98 18       	ld.sh	r8,r12[0x2]
800045fa:	c2 68       	rjmp	80004646 <_vfprintf_r+0xeb6>
800045fc:	ee ca ff ff 	sub	r10,r7,-1
80004600:	10 37       	cp.w	r7,r8
80004602:	c0 94       	brge	80004614 <_vfprintf_r+0xe84>
80004604:	fa c9 f9 44 	sub	r9,sp,-1724
80004608:	14 97       	mov	r7,r10
8000460a:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000460e:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
80004612:	c1 a8       	rjmp	80004646 <_vfprintf_r+0xeb6>
80004614:	41 09       	lddsp	r9,sp[0x40]
80004616:	59 f8       	cp.w	r8,31
80004618:	e0 89 00 13 	brgt	8000463e <_vfprintf_r+0xeae>
8000461c:	f2 cb ff fc 	sub	r11,r9,-4
80004620:	51 0b       	stdsp	sp[0x40],r11
80004622:	72 09       	ld.w	r9,r9[0x0]
80004624:	fa c6 f9 44 	sub	r6,sp,-1724
80004628:	ec 08 00 3b 	add	r11,r6,r8<<0x3
8000462c:	2f f8       	sub	r8,-1
8000462e:	f7 49 fd 88 	st.w	r11[-632],r9
80004632:	fb 48 06 b4 	st.w	sp[1716],r8
80004636:	14 97       	mov	r7,r10
80004638:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
8000463c:	c0 58       	rjmp	80004646 <_vfprintf_r+0xeb6>
8000463e:	92 18       	ld.sh	r8,r9[0x2]
80004640:	14 97       	mov	r7,r10
80004642:	2f c9       	sub	r9,-4
80004644:	51 09       	stdsp	sp[0x40],r9
80004646:	5c 78       	castu.h	r8
80004648:	50 18       	stdsp	sp[0x4],r8
8000464a:	c4 68       	rjmp	800046d6 <_vfprintf_r+0xf46>
8000464c:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004650:	40 3c       	lddsp	r12,sp[0xc]
80004652:	58 0c       	cp.w	r12,0
80004654:	c1 d0       	breq	8000468e <_vfprintf_r+0xefe>
80004656:	10 36       	cp.w	r6,r8
80004658:	c0 64       	brge	80004664 <_vfprintf_r+0xed4>
8000465a:	fa cb f9 44 	sub	r11,sp,-1724
8000465e:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004662:	c1 f8       	rjmp	800046a0 <_vfprintf_r+0xf10>
80004664:	fa c8 f9 50 	sub	r8,sp,-1712
80004668:	1a d8       	st.w	--sp,r8
8000466a:	fa c8 fa b8 	sub	r8,sp,-1352
8000466e:	0c 9b       	mov	r11,r6
80004670:	1a d8       	st.w	--sp,r8
80004672:	fa c8 fb b4 	sub	r8,sp,-1100
80004676:	04 9a       	mov	r10,r2
80004678:	1a d8       	st.w	--sp,r8
8000467a:	0a 9c       	mov	r12,r5
8000467c:	fa c8 f9 40 	sub	r8,sp,-1728
80004680:	fa c9 ff b4 	sub	r9,sp,-76
80004684:	fe b0 f6 ea 	rcall	80003458 <get_arg>
80004688:	2f dd       	sub	sp,-12
8000468a:	78 0b       	ld.w	r11,r12[0x0]
8000468c:	c2 48       	rjmp	800046d4 <_vfprintf_r+0xf44>
8000468e:	ee ca ff ff 	sub	r10,r7,-1
80004692:	10 37       	cp.w	r7,r8
80004694:	c0 94       	brge	800046a6 <_vfprintf_r+0xf16>
80004696:	fa c9 f9 44 	sub	r9,sp,-1724
8000469a:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000469e:	14 97       	mov	r7,r10
800046a0:	ec fb fd 88 	ld.w	r11,r6[-632]
800046a4:	c1 88       	rjmp	800046d4 <_vfprintf_r+0xf44>
800046a6:	41 09       	lddsp	r9,sp[0x40]
800046a8:	59 f8       	cp.w	r8,31
800046aa:	e0 89 00 11 	brgt	800046cc <_vfprintf_r+0xf3c>
800046ae:	f2 cb ff fc 	sub	r11,r9,-4
800046b2:	51 0b       	stdsp	sp[0x40],r11
800046b4:	fa c6 f9 44 	sub	r6,sp,-1724
800046b8:	72 0b       	ld.w	r11,r9[0x0]
800046ba:	ec 08 00 39 	add	r9,r6,r8<<0x3
800046be:	f3 4b fd 88 	st.w	r9[-632],r11
800046c2:	2f f8       	sub	r8,-1
800046c4:	14 97       	mov	r7,r10
800046c6:	fb 48 06 b4 	st.w	sp[1716],r8
800046ca:	c0 58       	rjmp	800046d4 <_vfprintf_r+0xf44>
800046cc:	72 0b       	ld.w	r11,r9[0x0]
800046ce:	14 97       	mov	r7,r10
800046d0:	2f c9       	sub	r9,-4
800046d2:	51 09       	stdsp	sp[0x40],r9
800046d4:	50 1b       	stdsp	sp[0x4],r11
800046d6:	30 0e       	mov	lr,0
800046d8:	50 0e       	stdsp	sp[0x0],lr
800046da:	1c 98       	mov	r8,lr
800046dc:	e0 8f 02 fb 	bral	80004cd2 <_vfprintf_r+0x1542>
800046e0:	50 a7       	stdsp	sp[0x28],r7
800046e2:	50 80       	stdsp	sp[0x20],r0
800046e4:	0c 97       	mov	r7,r6
800046e6:	04 95       	mov	r5,r2
800046e8:	08 96       	mov	r6,r4
800046ea:	02 92       	mov	r2,r1
800046ec:	40 94       	lddsp	r4,sp[0x24]
800046ee:	40 41       	lddsp	r1,sp[0x10]
800046f0:	0e 99       	mov	r9,r7
800046f2:	fa f8 06 b4 	ld.w	r8,sp[1716]
800046f6:	40 3c       	lddsp	r12,sp[0xc]
800046f8:	58 0c       	cp.w	r12,0
800046fa:	c1 d0       	breq	80004734 <_vfprintf_r+0xfa4>
800046fc:	10 36       	cp.w	r6,r8
800046fe:	c0 64       	brge	8000470a <_vfprintf_r+0xf7a>
80004700:	fa cb f9 44 	sub	r11,sp,-1724
80004704:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004708:	c1 d8       	rjmp	80004742 <_vfprintf_r+0xfb2>
8000470a:	fa c8 f9 50 	sub	r8,sp,-1712
8000470e:	1a d8       	st.w	--sp,r8
80004710:	fa c8 fa b8 	sub	r8,sp,-1352
80004714:	1a d8       	st.w	--sp,r8
80004716:	fa c8 fb b4 	sub	r8,sp,-1100
8000471a:	1a d8       	st.w	--sp,r8
8000471c:	fa c9 ff b4 	sub	r9,sp,-76
80004720:	fa c8 f9 40 	sub	r8,sp,-1728
80004724:	04 9a       	mov	r10,r2
80004726:	0c 9b       	mov	r11,r6
80004728:	0a 9c       	mov	r12,r5
8000472a:	fe b0 f6 97 	rcall	80003458 <get_arg>
8000472e:	2f dd       	sub	sp,-12
80004730:	78 09       	ld.w	r9,r12[0x0]
80004732:	c2 18       	rjmp	80004774 <_vfprintf_r+0xfe4>
80004734:	2f f7       	sub	r7,-1
80004736:	10 39       	cp.w	r9,r8
80004738:	c0 84       	brge	80004748 <_vfprintf_r+0xfb8>
8000473a:	fa ca f9 44 	sub	r10,sp,-1724
8000473e:	f4 06 00 36 	add	r6,r10,r6<<0x3
80004742:	ec f9 fd 88 	ld.w	r9,r6[-632]
80004746:	c1 78       	rjmp	80004774 <_vfprintf_r+0xfe4>
80004748:	41 09       	lddsp	r9,sp[0x40]
8000474a:	59 f8       	cp.w	r8,31
8000474c:	e0 89 00 10 	brgt	8000476c <_vfprintf_r+0xfdc>
80004750:	f2 ca ff fc 	sub	r10,r9,-4
80004754:	51 0a       	stdsp	sp[0x40],r10
80004756:	fa c6 f9 44 	sub	r6,sp,-1724
8000475a:	72 09       	ld.w	r9,r9[0x0]
8000475c:	ec 08 00 3a 	add	r10,r6,r8<<0x3
80004760:	f5 49 fd 88 	st.w	r10[-632],r9
80004764:	2f f8       	sub	r8,-1
80004766:	fb 48 06 b4 	st.w	sp[1716],r8
8000476a:	c0 58       	rjmp	80004774 <_vfprintf_r+0xfe4>
8000476c:	f2 c8 ff fc 	sub	r8,r9,-4
80004770:	51 08       	stdsp	sp[0x40],r8
80004772:	72 09       	ld.w	r9,r9[0x0]
80004774:	33 08       	mov	r8,48
80004776:	fb 68 06 b8 	st.b	sp[1720],r8
8000477a:	37 88       	mov	r8,120
8000477c:	30 0e       	mov	lr,0
8000477e:	fb 68 06 b9 	st.b	sp[1721],r8
80004782:	4c ac       	lddpc	r12,800048a8 <_vfprintf_r+0x1118>
80004784:	50 19       	stdsp	sp[0x4],r9
80004786:	a1 b3       	sbr	r3,0x1
80004788:	50 0e       	stdsp	sp[0x0],lr
8000478a:	50 dc       	stdsp	sp[0x34],r12
8000478c:	30 28       	mov	r8,2
8000478e:	37 80       	mov	r0,120
80004790:	e0 8f 02 a1 	bral	80004cd2 <_vfprintf_r+0x1542>
80004794:	50 a7       	stdsp	sp[0x28],r7
80004796:	50 80       	stdsp	sp[0x20],r0
80004798:	10 90       	mov	r0,r8
8000479a:	30 08       	mov	r8,0
8000479c:	fb 68 06 bb 	st.b	sp[1723],r8
800047a0:	0c 97       	mov	r7,r6
800047a2:	04 95       	mov	r5,r2
800047a4:	08 96       	mov	r6,r4
800047a6:	02 92       	mov	r2,r1
800047a8:	40 94       	lddsp	r4,sp[0x24]
800047aa:	40 41       	lddsp	r1,sp[0x10]
800047ac:	0e 99       	mov	r9,r7
800047ae:	fa f8 06 b4 	ld.w	r8,sp[1716]
800047b2:	40 3b       	lddsp	r11,sp[0xc]
800047b4:	58 0b       	cp.w	r11,0
800047b6:	c1 d0       	breq	800047f0 <_vfprintf_r+0x1060>
800047b8:	10 36       	cp.w	r6,r8
800047ba:	c0 64       	brge	800047c6 <_vfprintf_r+0x1036>
800047bc:	fa ca f9 44 	sub	r10,sp,-1724
800047c0:	f4 06 00 36 	add	r6,r10,r6<<0x3
800047c4:	c1 d8       	rjmp	800047fe <_vfprintf_r+0x106e>
800047c6:	fa c8 f9 50 	sub	r8,sp,-1712
800047ca:	1a d8       	st.w	--sp,r8
800047cc:	fa c8 fa b8 	sub	r8,sp,-1352
800047d0:	1a d8       	st.w	--sp,r8
800047d2:	fa c8 fb b4 	sub	r8,sp,-1100
800047d6:	0c 9b       	mov	r11,r6
800047d8:	1a d8       	st.w	--sp,r8
800047da:	04 9a       	mov	r10,r2
800047dc:	fa c8 f9 40 	sub	r8,sp,-1728
800047e0:	fa c9 ff b4 	sub	r9,sp,-76
800047e4:	0a 9c       	mov	r12,r5
800047e6:	fe b0 f6 39 	rcall	80003458 <get_arg>
800047ea:	2f dd       	sub	sp,-12
800047ec:	78 06       	ld.w	r6,r12[0x0]
800047ee:	c2 08       	rjmp	8000482e <_vfprintf_r+0x109e>
800047f0:	2f f7       	sub	r7,-1
800047f2:	10 39       	cp.w	r9,r8
800047f4:	c0 84       	brge	80004804 <_vfprintf_r+0x1074>
800047f6:	fa c9 f9 44 	sub	r9,sp,-1724
800047fa:	f2 06 00 36 	add	r6,r9,r6<<0x3
800047fe:	ec f6 fd 88 	ld.w	r6,r6[-632]
80004802:	c1 68       	rjmp	8000482e <_vfprintf_r+0x109e>
80004804:	41 09       	lddsp	r9,sp[0x40]
80004806:	59 f8       	cp.w	r8,31
80004808:	e0 89 00 10 	brgt	80004828 <_vfprintf_r+0x1098>
8000480c:	f2 ca ff fc 	sub	r10,r9,-4
80004810:	51 0a       	stdsp	sp[0x40],r10
80004812:	72 06       	ld.w	r6,r9[0x0]
80004814:	fa ce f9 44 	sub	lr,sp,-1724
80004818:	fc 08 00 39 	add	r9,lr,r8<<0x3
8000481c:	f3 46 fd 88 	st.w	r9[-632],r6
80004820:	2f f8       	sub	r8,-1
80004822:	fb 48 06 b4 	st.w	sp[1716],r8
80004826:	c0 48       	rjmp	8000482e <_vfprintf_r+0x109e>
80004828:	72 06       	ld.w	r6,r9[0x0]
8000482a:	2f c9       	sub	r9,-4
8000482c:	51 09       	stdsp	sp[0x40],r9
8000482e:	40 2c       	lddsp	r12,sp[0x8]
80004830:	58 0c       	cp.w	r12,0
80004832:	c1 05       	brlt	80004852 <_vfprintf_r+0x10c2>
80004834:	18 9a       	mov	r10,r12
80004836:	30 0b       	mov	r11,0
80004838:	0c 9c       	mov	r12,r6
8000483a:	e0 a0 14 67 	rcall	80007108 <memchr>
8000483e:	e0 80 02 dd 	breq	80004df8 <_vfprintf_r+0x1668>
80004842:	f8 06 01 02 	sub	r2,r12,r6
80004846:	40 2b       	lddsp	r11,sp[0x8]
80004848:	16 32       	cp.w	r2,r11
8000484a:	e0 89 02 d7 	brgt	80004df8 <_vfprintf_r+0x1668>
8000484e:	e0 8f 02 d2 	bral	80004df2 <_vfprintf_r+0x1662>
80004852:	30 0a       	mov	r10,0
80004854:	0c 9c       	mov	r12,r6
80004856:	50 2a       	stdsp	sp[0x8],r10
80004858:	e0 a0 19 4e 	rcall	80007af4 <strlen>
8000485c:	18 92       	mov	r2,r12
8000485e:	e0 8f 02 d0 	bral	80004dfe <_vfprintf_r+0x166e>
80004862:	50 a7       	stdsp	sp[0x28],r7
80004864:	50 80       	stdsp	sp[0x20],r0
80004866:	0c 97       	mov	r7,r6
80004868:	04 95       	mov	r5,r2
8000486a:	08 96       	mov	r6,r4
8000486c:	02 92       	mov	r2,r1
8000486e:	40 94       	lddsp	r4,sp[0x24]
80004870:	10 90       	mov	r0,r8
80004872:	40 41       	lddsp	r1,sp[0x10]
80004874:	a5 a3       	sbr	r3,0x4
80004876:	c0 a8       	rjmp	8000488a <_vfprintf_r+0x10fa>
80004878:	50 a7       	stdsp	sp[0x28],r7
8000487a:	50 80       	stdsp	sp[0x20],r0
8000487c:	0c 97       	mov	r7,r6
8000487e:	04 95       	mov	r5,r2
80004880:	08 96       	mov	r6,r4
80004882:	02 92       	mov	r2,r1
80004884:	40 94       	lddsp	r4,sp[0x24]
80004886:	10 90       	mov	r0,r8
80004888:	40 41       	lddsp	r1,sp[0x10]
8000488a:	ed b3 00 05 	bld	r3,0x5
8000488e:	c5 71       	brne	8000493c <_vfprintf_r+0x11ac>
80004890:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004894:	40 39       	lddsp	r9,sp[0xc]
80004896:	58 09       	cp.w	r9,0
80004898:	c2 20       	breq	800048dc <_vfprintf_r+0x114c>
8000489a:	10 36       	cp.w	r6,r8
8000489c:	c0 84       	brge	800048ac <_vfprintf_r+0x111c>
8000489e:	fa c8 f9 44 	sub	r8,sp,-1724
800048a2:	f0 06 00 36 	add	r6,r8,r6<<0x3
800048a6:	c2 48       	rjmp	800048ee <_vfprintf_r+0x115e>
800048a8:	80 00       	ld.sh	r0,r0[0x0]
800048aa:	96 e0       	ld.uh	r0,r11[0xc]
800048ac:	fa c8 f9 50 	sub	r8,sp,-1712
800048b0:	1a d8       	st.w	--sp,r8
800048b2:	fa c8 fa b8 	sub	r8,sp,-1352
800048b6:	1a d8       	st.w	--sp,r8
800048b8:	fa c8 fb b4 	sub	r8,sp,-1100
800048bc:	1a d8       	st.w	--sp,r8
800048be:	fa c8 f9 40 	sub	r8,sp,-1728
800048c2:	fa c9 ff b4 	sub	r9,sp,-76
800048c6:	04 9a       	mov	r10,r2
800048c8:	0c 9b       	mov	r11,r6
800048ca:	0a 9c       	mov	r12,r5
800048cc:	fe b0 f5 c6 	rcall	80003458 <get_arg>
800048d0:	2f dd       	sub	sp,-12
800048d2:	f8 e8 00 00 	ld.d	r8,r12[0]
800048d6:	fa e9 00 00 	st.d	sp[0],r8
800048da:	c2 e8       	rjmp	80004936 <_vfprintf_r+0x11a6>
800048dc:	ee ca ff ff 	sub	r10,r7,-1
800048e0:	10 37       	cp.w	r7,r8
800048e2:	c0 b4       	brge	800048f8 <_vfprintf_r+0x1168>
800048e4:	fa c8 f9 44 	sub	r8,sp,-1724
800048e8:	14 97       	mov	r7,r10
800048ea:	f0 06 00 36 	add	r6,r8,r6<<0x3
800048ee:	ec ea fd 88 	ld.d	r10,r6[-632]
800048f2:	fa eb 00 00 	st.d	sp[0],r10
800048f6:	c2 08       	rjmp	80004936 <_vfprintf_r+0x11a6>
800048f8:	41 09       	lddsp	r9,sp[0x40]
800048fa:	59 f8       	cp.w	r8,31
800048fc:	e0 89 00 16 	brgt	80004928 <_vfprintf_r+0x1198>
80004900:	f2 e6 00 00 	ld.d	r6,r9[0]
80004904:	f2 cb ff f8 	sub	r11,r9,-8
80004908:	fa e7 00 00 	st.d	sp[0],r6
8000490c:	51 0b       	stdsp	sp[0x40],r11
8000490e:	fa c6 f9 44 	sub	r6,sp,-1724
80004912:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004916:	fa e6 00 00 	ld.d	r6,sp[0]
8000491a:	f2 e7 fd 88 	st.d	r9[-632],r6
8000491e:	2f f8       	sub	r8,-1
80004920:	14 97       	mov	r7,r10
80004922:	fb 48 06 b4 	st.w	sp[1716],r8
80004926:	c0 88       	rjmp	80004936 <_vfprintf_r+0x11a6>
80004928:	f2 e6 00 00 	ld.d	r6,r9[0]
8000492c:	2f 89       	sub	r9,-8
8000492e:	fa e7 00 00 	st.d	sp[0],r6
80004932:	51 09       	stdsp	sp[0x40],r9
80004934:	14 97       	mov	r7,r10
80004936:	30 18       	mov	r8,1
80004938:	e0 8f 01 cd 	bral	80004cd2 <_vfprintf_r+0x1542>
8000493c:	ed b3 00 04 	bld	r3,0x4
80004940:	c1 61       	brne	8000496c <_vfprintf_r+0x11dc>
80004942:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004946:	40 3e       	lddsp	lr,sp[0xc]
80004948:	58 0e       	cp.w	lr,0
8000494a:	c0 80       	breq	8000495a <_vfprintf_r+0x11ca>
8000494c:	10 36       	cp.w	r6,r8
8000494e:	c6 74       	brge	80004a1c <_vfprintf_r+0x128c>
80004950:	fa cc f9 44 	sub	r12,sp,-1724
80004954:	f8 06 00 36 	add	r6,r12,r6<<0x3
80004958:	c8 08       	rjmp	80004a58 <_vfprintf_r+0x12c8>
8000495a:	ee ca ff ff 	sub	r10,r7,-1
8000495e:	10 37       	cp.w	r7,r8
80004960:	c7 f4       	brge	80004a5e <_vfprintf_r+0x12ce>
80004962:	fa cb f9 44 	sub	r11,sp,-1724
80004966:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000496a:	c7 68       	rjmp	80004a56 <_vfprintf_r+0x12c6>
8000496c:	ed b3 00 06 	bld	r3,0x6
80004970:	c4 a1       	brne	80004a04 <_vfprintf_r+0x1274>
80004972:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004976:	40 3c       	lddsp	r12,sp[0xc]
80004978:	58 0c       	cp.w	r12,0
8000497a:	c1 d0       	breq	800049b4 <_vfprintf_r+0x1224>
8000497c:	10 36       	cp.w	r6,r8
8000497e:	c0 64       	brge	8000498a <_vfprintf_r+0x11fa>
80004980:	fa cb f9 44 	sub	r11,sp,-1724
80004984:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004988:	c1 f8       	rjmp	800049c6 <_vfprintf_r+0x1236>
8000498a:	fa c8 f9 50 	sub	r8,sp,-1712
8000498e:	1a d8       	st.w	--sp,r8
80004990:	fa c8 fa b8 	sub	r8,sp,-1352
80004994:	1a d8       	st.w	--sp,r8
80004996:	fa c8 fb b4 	sub	r8,sp,-1100
8000499a:	1a d8       	st.w	--sp,r8
8000499c:	fa c8 f9 40 	sub	r8,sp,-1728
800049a0:	fa c9 ff b4 	sub	r9,sp,-76
800049a4:	04 9a       	mov	r10,r2
800049a6:	0c 9b       	mov	r11,r6
800049a8:	0a 9c       	mov	r12,r5
800049aa:	fe b0 f5 57 	rcall	80003458 <get_arg>
800049ae:	2f dd       	sub	sp,-12
800049b0:	98 18       	ld.sh	r8,r12[0x2]
800049b2:	c2 68       	rjmp	800049fe <_vfprintf_r+0x126e>
800049b4:	ee ca ff ff 	sub	r10,r7,-1
800049b8:	10 37       	cp.w	r7,r8
800049ba:	c0 94       	brge	800049cc <_vfprintf_r+0x123c>
800049bc:	fa c9 f9 44 	sub	r9,sp,-1724
800049c0:	14 97       	mov	r7,r10
800049c2:	f2 06 00 36 	add	r6,r9,r6<<0x3
800049c6:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
800049ca:	c1 a8       	rjmp	800049fe <_vfprintf_r+0x126e>
800049cc:	41 09       	lddsp	r9,sp[0x40]
800049ce:	59 f8       	cp.w	r8,31
800049d0:	e0 89 00 13 	brgt	800049f6 <_vfprintf_r+0x1266>
800049d4:	f2 cb ff fc 	sub	r11,r9,-4
800049d8:	51 0b       	stdsp	sp[0x40],r11
800049da:	72 09       	ld.w	r9,r9[0x0]
800049dc:	fa c6 f9 44 	sub	r6,sp,-1724
800049e0:	ec 08 00 3b 	add	r11,r6,r8<<0x3
800049e4:	2f f8       	sub	r8,-1
800049e6:	f7 49 fd 88 	st.w	r11[-632],r9
800049ea:	fb 48 06 b4 	st.w	sp[1716],r8
800049ee:	14 97       	mov	r7,r10
800049f0:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
800049f4:	c0 58       	rjmp	800049fe <_vfprintf_r+0x126e>
800049f6:	92 18       	ld.sh	r8,r9[0x2]
800049f8:	14 97       	mov	r7,r10
800049fa:	2f c9       	sub	r9,-4
800049fc:	51 09       	stdsp	sp[0x40],r9
800049fe:	5c 78       	castu.h	r8
80004a00:	50 18       	stdsp	sp[0x4],r8
80004a02:	c4 68       	rjmp	80004a8e <_vfprintf_r+0x12fe>
80004a04:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004a08:	40 3c       	lddsp	r12,sp[0xc]
80004a0a:	58 0c       	cp.w	r12,0
80004a0c:	c1 d0       	breq	80004a46 <_vfprintf_r+0x12b6>
80004a0e:	10 36       	cp.w	r6,r8
80004a10:	c0 64       	brge	80004a1c <_vfprintf_r+0x128c>
80004a12:	fa cb f9 44 	sub	r11,sp,-1724
80004a16:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004a1a:	c1 f8       	rjmp	80004a58 <_vfprintf_r+0x12c8>
80004a1c:	fa c8 f9 50 	sub	r8,sp,-1712
80004a20:	1a d8       	st.w	--sp,r8
80004a22:	fa c8 fa b8 	sub	r8,sp,-1352
80004a26:	0c 9b       	mov	r11,r6
80004a28:	1a d8       	st.w	--sp,r8
80004a2a:	fa c8 fb b4 	sub	r8,sp,-1100
80004a2e:	04 9a       	mov	r10,r2
80004a30:	1a d8       	st.w	--sp,r8
80004a32:	0a 9c       	mov	r12,r5
80004a34:	fa c8 f9 40 	sub	r8,sp,-1728
80004a38:	fa c9 ff b4 	sub	r9,sp,-76
80004a3c:	fe b0 f5 0e 	rcall	80003458 <get_arg>
80004a40:	2f dd       	sub	sp,-12
80004a42:	78 0b       	ld.w	r11,r12[0x0]
80004a44:	c2 48       	rjmp	80004a8c <_vfprintf_r+0x12fc>
80004a46:	ee ca ff ff 	sub	r10,r7,-1
80004a4a:	10 37       	cp.w	r7,r8
80004a4c:	c0 94       	brge	80004a5e <_vfprintf_r+0x12ce>
80004a4e:	fa c9 f9 44 	sub	r9,sp,-1724
80004a52:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004a56:	14 97       	mov	r7,r10
80004a58:	ec fb fd 88 	ld.w	r11,r6[-632]
80004a5c:	c1 88       	rjmp	80004a8c <_vfprintf_r+0x12fc>
80004a5e:	41 09       	lddsp	r9,sp[0x40]
80004a60:	59 f8       	cp.w	r8,31
80004a62:	e0 89 00 11 	brgt	80004a84 <_vfprintf_r+0x12f4>
80004a66:	f2 cb ff fc 	sub	r11,r9,-4
80004a6a:	51 0b       	stdsp	sp[0x40],r11
80004a6c:	fa c6 f9 44 	sub	r6,sp,-1724
80004a70:	72 0b       	ld.w	r11,r9[0x0]
80004a72:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004a76:	f3 4b fd 88 	st.w	r9[-632],r11
80004a7a:	2f f8       	sub	r8,-1
80004a7c:	14 97       	mov	r7,r10
80004a7e:	fb 48 06 b4 	st.w	sp[1716],r8
80004a82:	c0 58       	rjmp	80004a8c <_vfprintf_r+0x12fc>
80004a84:	72 0b       	ld.w	r11,r9[0x0]
80004a86:	14 97       	mov	r7,r10
80004a88:	2f c9       	sub	r9,-4
80004a8a:	51 09       	stdsp	sp[0x40],r9
80004a8c:	50 1b       	stdsp	sp[0x4],r11
80004a8e:	30 0e       	mov	lr,0
80004a90:	30 18       	mov	r8,1
80004a92:	50 0e       	stdsp	sp[0x0],lr
80004a94:	c1 f9       	rjmp	80004cd2 <_vfprintf_r+0x1542>
80004a96:	50 a7       	stdsp	sp[0x28],r7
80004a98:	50 80       	stdsp	sp[0x20],r0
80004a9a:	0c 97       	mov	r7,r6
80004a9c:	04 95       	mov	r5,r2
80004a9e:	08 96       	mov	r6,r4
80004aa0:	02 92       	mov	r2,r1
80004aa2:	4d 3c       	lddpc	r12,80004bec <_vfprintf_r+0x145c>
80004aa4:	40 94       	lddsp	r4,sp[0x24]
80004aa6:	10 90       	mov	r0,r8
80004aa8:	40 41       	lddsp	r1,sp[0x10]
80004aaa:	50 dc       	stdsp	sp[0x34],r12
80004aac:	ed b3 00 05 	bld	r3,0x5
80004ab0:	c5 51       	brne	80004b5a <_vfprintf_r+0x13ca>
80004ab2:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004ab6:	40 3b       	lddsp	r11,sp[0xc]
80004ab8:	58 0b       	cp.w	r11,0
80004aba:	c2 20       	breq	80004afe <_vfprintf_r+0x136e>
80004abc:	10 36       	cp.w	r6,r8
80004abe:	c0 a4       	brge	80004ad2 <_vfprintf_r+0x1342>
80004ac0:	fa ca f9 44 	sub	r10,sp,-1724
80004ac4:	f4 06 00 36 	add	r6,r10,r6<<0x3
80004ac8:	ec e8 fd 88 	ld.d	r8,r6[-632]
80004acc:	fa e9 00 00 	st.d	sp[0],r8
80004ad0:	cf 38       	rjmp	80004cb6 <_vfprintf_r+0x1526>
80004ad2:	fa c8 f9 50 	sub	r8,sp,-1712
80004ad6:	1a d8       	st.w	--sp,r8
80004ad8:	fa c8 fa b8 	sub	r8,sp,-1352
80004adc:	04 9a       	mov	r10,r2
80004ade:	1a d8       	st.w	--sp,r8
80004ae0:	0c 9b       	mov	r11,r6
80004ae2:	fa c8 fb b4 	sub	r8,sp,-1100
80004ae6:	0a 9c       	mov	r12,r5
80004ae8:	1a d8       	st.w	--sp,r8
80004aea:	fa c8 f9 40 	sub	r8,sp,-1728
80004aee:	fa c9 ff b4 	sub	r9,sp,-76
80004af2:	fe b0 f4 b3 	rcall	80003458 <get_arg>
80004af6:	2f dd       	sub	sp,-12
80004af8:	f8 ea 00 00 	ld.d	r10,r12[0]
80004afc:	c0 c8       	rjmp	80004b14 <_vfprintf_r+0x1384>
80004afe:	ee ca ff ff 	sub	r10,r7,-1
80004b02:	10 37       	cp.w	r7,r8
80004b04:	c0 b4       	brge	80004b1a <_vfprintf_r+0x138a>
80004b06:	fa c9 f9 44 	sub	r9,sp,-1724
80004b0a:	14 97       	mov	r7,r10
80004b0c:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004b10:	ec ea fd 88 	ld.d	r10,r6[-632]
80004b14:	fa eb 00 00 	st.d	sp[0],r10
80004b18:	cc f8       	rjmp	80004cb6 <_vfprintf_r+0x1526>
80004b1a:	41 09       	lddsp	r9,sp[0x40]
80004b1c:	59 f8       	cp.w	r8,31
80004b1e:	e0 89 00 16 	brgt	80004b4a <_vfprintf_r+0x13ba>
80004b22:	f2 e6 00 00 	ld.d	r6,r9[0]
80004b26:	f2 cb ff f8 	sub	r11,r9,-8
80004b2a:	fa e7 00 00 	st.d	sp[0],r6
80004b2e:	51 0b       	stdsp	sp[0x40],r11
80004b30:	fa c6 f9 44 	sub	r6,sp,-1724
80004b34:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004b38:	fa e6 00 00 	ld.d	r6,sp[0]
80004b3c:	f2 e7 fd 88 	st.d	r9[-632],r6
80004b40:	2f f8       	sub	r8,-1
80004b42:	14 97       	mov	r7,r10
80004b44:	fb 48 06 b4 	st.w	sp[1716],r8
80004b48:	cb 78       	rjmp	80004cb6 <_vfprintf_r+0x1526>
80004b4a:	f2 e6 00 00 	ld.d	r6,r9[0]
80004b4e:	2f 89       	sub	r9,-8
80004b50:	fa e7 00 00 	st.d	sp[0],r6
80004b54:	51 09       	stdsp	sp[0x40],r9
80004b56:	14 97       	mov	r7,r10
80004b58:	ca f8       	rjmp	80004cb6 <_vfprintf_r+0x1526>
80004b5a:	ed b3 00 04 	bld	r3,0x4
80004b5e:	c1 71       	brne	80004b8c <_vfprintf_r+0x13fc>
80004b60:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004b64:	40 3e       	lddsp	lr,sp[0xc]
80004b66:	58 0e       	cp.w	lr,0
80004b68:	c0 80       	breq	80004b78 <_vfprintf_r+0x13e8>
80004b6a:	10 36       	cp.w	r6,r8
80004b6c:	c6 a4       	brge	80004c40 <_vfprintf_r+0x14b0>
80004b6e:	fa cc f9 44 	sub	r12,sp,-1724
80004b72:	f8 06 00 36 	add	r6,r12,r6<<0x3
80004b76:	c8 38       	rjmp	80004c7c <_vfprintf_r+0x14ec>
80004b78:	ee ca ff ff 	sub	r10,r7,-1
80004b7c:	10 37       	cp.w	r7,r8
80004b7e:	e0 84 00 82 	brge	80004c82 <_vfprintf_r+0x14f2>
80004b82:	fa cb f9 44 	sub	r11,sp,-1724
80004b86:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004b8a:	c7 88       	rjmp	80004c7a <_vfprintf_r+0x14ea>
80004b8c:	ed b3 00 06 	bld	r3,0x6
80004b90:	c4 c1       	brne	80004c28 <_vfprintf_r+0x1498>
80004b92:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004b96:	40 3c       	lddsp	r12,sp[0xc]
80004b98:	58 0c       	cp.w	r12,0
80004b9a:	c1 d0       	breq	80004bd4 <_vfprintf_r+0x1444>
80004b9c:	10 36       	cp.w	r6,r8
80004b9e:	c0 64       	brge	80004baa <_vfprintf_r+0x141a>
80004ba0:	fa cb f9 44 	sub	r11,sp,-1724
80004ba4:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004ba8:	c1 f8       	rjmp	80004be6 <_vfprintf_r+0x1456>
80004baa:	fa c8 f9 50 	sub	r8,sp,-1712
80004bae:	1a d8       	st.w	--sp,r8
80004bb0:	fa c8 fa b8 	sub	r8,sp,-1352
80004bb4:	1a d8       	st.w	--sp,r8
80004bb6:	fa c8 fb b4 	sub	r8,sp,-1100
80004bba:	1a d8       	st.w	--sp,r8
80004bbc:	fa c8 f9 40 	sub	r8,sp,-1728
80004bc0:	fa c9 ff b4 	sub	r9,sp,-76
80004bc4:	04 9a       	mov	r10,r2
80004bc6:	0c 9b       	mov	r11,r6
80004bc8:	0a 9c       	mov	r12,r5
80004bca:	fe b0 f4 47 	rcall	80003458 <get_arg>
80004bce:	2f dd       	sub	sp,-12
80004bd0:	98 18       	ld.sh	r8,r12[0x2]
80004bd2:	c2 88       	rjmp	80004c22 <_vfprintf_r+0x1492>
80004bd4:	ee ca ff ff 	sub	r10,r7,-1
80004bd8:	10 37       	cp.w	r7,r8
80004bda:	c0 b4       	brge	80004bf0 <_vfprintf_r+0x1460>
80004bdc:	fa c9 f9 44 	sub	r9,sp,-1724
80004be0:	14 97       	mov	r7,r10
80004be2:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004be6:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
80004bea:	c1 c8       	rjmp	80004c22 <_vfprintf_r+0x1492>
80004bec:	80 00       	ld.sh	r0,r0[0x0]
80004bee:	96 e0       	ld.uh	r0,r11[0xc]
80004bf0:	41 09       	lddsp	r9,sp[0x40]
80004bf2:	59 f8       	cp.w	r8,31
80004bf4:	e0 89 00 13 	brgt	80004c1a <_vfprintf_r+0x148a>
80004bf8:	f2 cb ff fc 	sub	r11,r9,-4
80004bfc:	51 0b       	stdsp	sp[0x40],r11
80004bfe:	72 09       	ld.w	r9,r9[0x0]
80004c00:	fa c6 f9 44 	sub	r6,sp,-1724
80004c04:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80004c08:	2f f8       	sub	r8,-1
80004c0a:	f7 49 fd 88 	st.w	r11[-632],r9
80004c0e:	fb 48 06 b4 	st.w	sp[1716],r8
80004c12:	14 97       	mov	r7,r10
80004c14:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
80004c18:	c0 58       	rjmp	80004c22 <_vfprintf_r+0x1492>
80004c1a:	92 18       	ld.sh	r8,r9[0x2]
80004c1c:	14 97       	mov	r7,r10
80004c1e:	2f c9       	sub	r9,-4
80004c20:	51 09       	stdsp	sp[0x40],r9
80004c22:	5c 78       	castu.h	r8
80004c24:	50 18       	stdsp	sp[0x4],r8
80004c26:	c4 68       	rjmp	80004cb2 <_vfprintf_r+0x1522>
80004c28:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004c2c:	40 3c       	lddsp	r12,sp[0xc]
80004c2e:	58 0c       	cp.w	r12,0
80004c30:	c1 d0       	breq	80004c6a <_vfprintf_r+0x14da>
80004c32:	10 36       	cp.w	r6,r8
80004c34:	c0 64       	brge	80004c40 <_vfprintf_r+0x14b0>
80004c36:	fa cb f9 44 	sub	r11,sp,-1724
80004c3a:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004c3e:	c1 f8       	rjmp	80004c7c <_vfprintf_r+0x14ec>
80004c40:	fa c8 f9 50 	sub	r8,sp,-1712
80004c44:	1a d8       	st.w	--sp,r8
80004c46:	fa c8 fa b8 	sub	r8,sp,-1352
80004c4a:	0c 9b       	mov	r11,r6
80004c4c:	1a d8       	st.w	--sp,r8
80004c4e:	fa c8 fb b4 	sub	r8,sp,-1100
80004c52:	04 9a       	mov	r10,r2
80004c54:	1a d8       	st.w	--sp,r8
80004c56:	0a 9c       	mov	r12,r5
80004c58:	fa c8 f9 40 	sub	r8,sp,-1728
80004c5c:	fa c9 ff b4 	sub	r9,sp,-76
80004c60:	fe b0 f3 fc 	rcall	80003458 <get_arg>
80004c64:	2f dd       	sub	sp,-12
80004c66:	78 0b       	ld.w	r11,r12[0x0]
80004c68:	c2 48       	rjmp	80004cb0 <_vfprintf_r+0x1520>
80004c6a:	ee ca ff ff 	sub	r10,r7,-1
80004c6e:	10 37       	cp.w	r7,r8
80004c70:	c0 94       	brge	80004c82 <_vfprintf_r+0x14f2>
80004c72:	fa c9 f9 44 	sub	r9,sp,-1724
80004c76:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004c7a:	14 97       	mov	r7,r10
80004c7c:	ec fb fd 88 	ld.w	r11,r6[-632]
80004c80:	c1 88       	rjmp	80004cb0 <_vfprintf_r+0x1520>
80004c82:	41 09       	lddsp	r9,sp[0x40]
80004c84:	59 f8       	cp.w	r8,31
80004c86:	e0 89 00 11 	brgt	80004ca8 <_vfprintf_r+0x1518>
80004c8a:	f2 cb ff fc 	sub	r11,r9,-4
80004c8e:	51 0b       	stdsp	sp[0x40],r11
80004c90:	fa c6 f9 44 	sub	r6,sp,-1724
80004c94:	72 0b       	ld.w	r11,r9[0x0]
80004c96:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004c9a:	f3 4b fd 88 	st.w	r9[-632],r11
80004c9e:	2f f8       	sub	r8,-1
80004ca0:	14 97       	mov	r7,r10
80004ca2:	fb 48 06 b4 	st.w	sp[1716],r8
80004ca6:	c0 58       	rjmp	80004cb0 <_vfprintf_r+0x1520>
80004ca8:	72 0b       	ld.w	r11,r9[0x0]
80004caa:	14 97       	mov	r7,r10
80004cac:	2f c9       	sub	r9,-4
80004cae:	51 09       	stdsp	sp[0x40],r9
80004cb0:	50 1b       	stdsp	sp[0x4],r11
80004cb2:	30 0e       	mov	lr,0
80004cb4:	50 0e       	stdsp	sp[0x0],lr
80004cb6:	40 08       	lddsp	r8,sp[0x0]
80004cb8:	40 1c       	lddsp	r12,sp[0x4]
80004cba:	18 48       	or	r8,r12
80004cbc:	5f 18       	srne	r8
80004cbe:	e7 e8 00 08 	and	r8,r3,r8
80004cc2:	c0 70       	breq	80004cd0 <_vfprintf_r+0x1540>
80004cc4:	33 08       	mov	r8,48
80004cc6:	fb 60 06 b9 	st.b	sp[1721],r0
80004cca:	a1 b3       	sbr	r3,0x1
80004ccc:	fb 68 06 b8 	st.b	sp[1720],r8
80004cd0:	30 28       	mov	r8,2
80004cd2:	30 09       	mov	r9,0
80004cd4:	fb 69 06 bb 	st.b	sp[1723],r9
80004cd8:	40 2b       	lddsp	r11,sp[0x8]
80004cda:	58 0b       	cp.w	r11,0
80004cdc:	c0 25       	brlt	80004ce0 <_vfprintf_r+0x1550>
80004cde:	a7 d3       	cbr	r3,0x7
80004ce0:	40 2a       	lddsp	r10,sp[0x8]
80004ce2:	40 09       	lddsp	r9,sp[0x0]
80004ce4:	58 0a       	cp.w	r10,0
80004ce6:	5f 1a       	srne	r10
80004ce8:	40 16       	lddsp	r6,sp[0x4]
80004cea:	fa c2 f9 78 	sub	r2,sp,-1672
80004cee:	0c 49       	or	r9,r6
80004cf0:	5f 19       	srne	r9
80004cf2:	f5 e9 10 09 	or	r9,r10,r9
80004cf6:	c5 c0       	breq	80004dae <_vfprintf_r+0x161e>
80004cf8:	30 19       	mov	r9,1
80004cfa:	f2 08 18 00 	cp.b	r8,r9
80004cfe:	c0 60       	breq	80004d0a <_vfprintf_r+0x157a>
80004d00:	30 29       	mov	r9,2
80004d02:	f2 08 18 00 	cp.b	r8,r9
80004d06:	c0 41       	brne	80004d0e <_vfprintf_r+0x157e>
80004d08:	c3 c8       	rjmp	80004d80 <_vfprintf_r+0x15f0>
80004d0a:	04 96       	mov	r6,r2
80004d0c:	c3 08       	rjmp	80004d6c <_vfprintf_r+0x15dc>
80004d0e:	04 96       	mov	r6,r2
80004d10:	fa e8 00 00 	ld.d	r8,sp[0]
80004d14:	f5 d8 c0 03 	bfextu	r10,r8,0x0,0x3
80004d18:	2d 0a       	sub	r10,-48
80004d1a:	0c fa       	st.b	--r6,r10
80004d1c:	f0 0b 16 03 	lsr	r11,r8,0x3
80004d20:	f2 0c 16 03 	lsr	r12,r9,0x3
80004d24:	f7 e9 11 db 	or	r11,r11,r9<<0x1d
80004d28:	18 99       	mov	r9,r12
80004d2a:	16 98       	mov	r8,r11
80004d2c:	58 08       	cp.w	r8,0
80004d2e:	5c 29       	cpc	r9
80004d30:	cf 21       	brne	80004d14 <_vfprintf_r+0x1584>
80004d32:	fa e9 00 00 	st.d	sp[0],r8
80004d36:	ed b3 00 00 	bld	r3,0x0
80004d3a:	c4 51       	brne	80004dc4 <_vfprintf_r+0x1634>
80004d3c:	33 09       	mov	r9,48
80004d3e:	f2 0a 18 00 	cp.b	r10,r9
80004d42:	c4 10       	breq	80004dc4 <_vfprintf_r+0x1634>
80004d44:	0c f9       	st.b	--r6,r9
80004d46:	c3 f8       	rjmp	80004dc4 <_vfprintf_r+0x1634>
80004d48:	fa ea 00 00 	ld.d	r10,sp[0]
80004d4c:	30 a8       	mov	r8,10
80004d4e:	30 09       	mov	r9,0
80004d50:	e0 a0 1d 2e 	rcall	800087ac <__avr32_umod64>
80004d54:	30 a8       	mov	r8,10
80004d56:	2d 0a       	sub	r10,-48
80004d58:	30 09       	mov	r9,0
80004d5a:	ac 8a       	st.b	r6[0x0],r10
80004d5c:	fa ea 00 00 	ld.d	r10,sp[0]
80004d60:	fe b0 f1 70 	rcall	80003040 <__avr32_udiv64>
80004d64:	16 99       	mov	r9,r11
80004d66:	14 98       	mov	r8,r10
80004d68:	fa e9 00 00 	st.d	sp[0],r8
80004d6c:	20 16       	sub	r6,1
80004d6e:	fa ea 00 00 	ld.d	r10,sp[0]
80004d72:	58 9a       	cp.w	r10,9
80004d74:	5c 2b       	cpc	r11
80004d76:	fe 9b ff e9 	brhi	80004d48 <_vfprintf_r+0x15b8>
80004d7a:	1b f8       	ld.ub	r8,sp[0x7]
80004d7c:	2d 08       	sub	r8,-48
80004d7e:	c2 08       	rjmp	80004dbe <_vfprintf_r+0x162e>
80004d80:	04 96       	mov	r6,r2
80004d82:	fa e8 00 00 	ld.d	r8,sp[0]
80004d86:	f5 d8 c0 04 	bfextu	r10,r8,0x0,0x4
80004d8a:	40 de       	lddsp	lr,sp[0x34]
80004d8c:	fc 0a 07 0a 	ld.ub	r10,lr[r10]
80004d90:	0c fa       	st.b	--r6,r10
80004d92:	f2 0b 16 04 	lsr	r11,r9,0x4
80004d96:	f0 0a 16 04 	lsr	r10,r8,0x4
80004d9a:	f5 e9 11 ca 	or	r10,r10,r9<<0x1c
80004d9e:	16 99       	mov	r9,r11
80004da0:	14 98       	mov	r8,r10
80004da2:	58 08       	cp.w	r8,0
80004da4:	5c 29       	cpc	r9
80004da6:	cf 01       	brne	80004d86 <_vfprintf_r+0x15f6>
80004da8:	fa e9 00 00 	st.d	sp[0],r8
80004dac:	c0 c8       	rjmp	80004dc4 <_vfprintf_r+0x1634>
80004dae:	58 08       	cp.w	r8,0
80004db0:	c0 91       	brne	80004dc2 <_vfprintf_r+0x1632>
80004db2:	ed b3 00 00 	bld	r3,0x0
80004db6:	c0 61       	brne	80004dc2 <_vfprintf_r+0x1632>
80004db8:	fa c6 f9 79 	sub	r6,sp,-1671
80004dbc:	33 08       	mov	r8,48
80004dbe:	ac 88       	st.b	r6[0x0],r8
80004dc0:	c0 28       	rjmp	80004dc4 <_vfprintf_r+0x1634>
80004dc2:	04 96       	mov	r6,r2
80004dc4:	0c 12       	sub	r2,r6
80004dc6:	c1 c8       	rjmp	80004dfe <_vfprintf_r+0x166e>
80004dc8:	50 a7       	stdsp	sp[0x28],r7
80004dca:	50 80       	stdsp	sp[0x20],r0
80004dcc:	40 94       	lddsp	r4,sp[0x24]
80004dce:	0c 97       	mov	r7,r6
80004dd0:	10 90       	mov	r0,r8
80004dd2:	04 95       	mov	r5,r2
80004dd4:	40 41       	lddsp	r1,sp[0x10]
80004dd6:	58 08       	cp.w	r8,0
80004dd8:	e0 80 04 50 	breq	80005678 <_vfprintf_r+0x1ee8>
80004ddc:	fb 68 06 60 	st.b	sp[1632],r8
80004de0:	30 0c       	mov	r12,0
80004de2:	30 08       	mov	r8,0
80004de4:	30 12       	mov	r2,1
80004de6:	fb 68 06 bb 	st.b	sp[1723],r8
80004dea:	50 2c       	stdsp	sp[0x8],r12
80004dec:	fa c6 f9 a0 	sub	r6,sp,-1632
80004df0:	c0 78       	rjmp	80004dfe <_vfprintf_r+0x166e>
80004df2:	30 0b       	mov	r11,0
80004df4:	50 2b       	stdsp	sp[0x8],r11
80004df6:	c0 48       	rjmp	80004dfe <_vfprintf_r+0x166e>
80004df8:	40 22       	lddsp	r2,sp[0x8]
80004dfa:	30 0a       	mov	r10,0
80004dfc:	50 2a       	stdsp	sp[0x8],r10
80004dfe:	40 29       	lddsp	r9,sp[0x8]
80004e00:	e4 09 0c 49 	max	r9,r2,r9
80004e04:	fb 38 06 bb 	ld.ub	r8,sp[1723]
80004e08:	50 39       	stdsp	sp[0xc],r9
80004e0a:	06 9e       	mov	lr,r3
80004e0c:	30 09       	mov	r9,0
80004e0e:	e2 1e 00 02 	andl	lr,0x2,COH
80004e12:	f2 08 18 00 	cp.b	r8,r9
80004e16:	fb f8 10 03 	ld.wne	r8,sp[0xc]
80004e1a:	f7 b8 01 ff 	subne	r8,-1
80004e1e:	fb f8 1a 03 	st.wne	sp[0xc],r8
80004e22:	06 9b       	mov	r11,r3
80004e24:	58 0e       	cp.w	lr,0
80004e26:	fb fc 10 03 	ld.wne	r12,sp[0xc]
80004e2a:	f7 bc 01 fe 	subne	r12,-2
80004e2e:	fb fc 1a 03 	st.wne	sp[0xc],r12
80004e32:	e2 1b 00 84 	andl	r11,0x84,COH
80004e36:	50 fe       	stdsp	sp[0x3c],lr
80004e38:	50 9b       	stdsp	sp[0x24],r11
80004e3a:	c4 51       	brne	80004ec4 <_vfprintf_r+0x1734>
80004e3c:	40 8a       	lddsp	r10,sp[0x20]
80004e3e:	40 39       	lddsp	r9,sp[0xc]
80004e40:	12 1a       	sub	r10,r9
80004e42:	50 4a       	stdsp	sp[0x10],r10
80004e44:	58 0a       	cp.w	r10,0
80004e46:	e0 89 00 1f 	brgt	80004e84 <_vfprintf_r+0x16f4>
80004e4a:	c3 d8       	rjmp	80004ec4 <_vfprintf_r+0x1734>
80004e4c:	2f 09       	sub	r9,-16
80004e4e:	2f f8       	sub	r8,-1
80004e50:	4c de       	lddpc	lr,80004f84 <_vfprintf_r+0x17f4>
80004e52:	31 0c       	mov	r12,16
80004e54:	fb 49 06 90 	st.w	sp[1680],r9
80004e58:	89 0e       	st.w	r4[0x0],lr
80004e5a:	89 1c       	st.w	r4[0x4],r12
80004e5c:	fb 48 06 8c 	st.w	sp[1676],r8
80004e60:	58 78       	cp.w	r8,7
80004e62:	e0 89 00 04 	brgt	80004e6a <_vfprintf_r+0x16da>
80004e66:	2f 84       	sub	r4,-8
80004e68:	c0 b8       	rjmp	80004e7e <_vfprintf_r+0x16ee>
80004e6a:	fa ca f9 78 	sub	r10,sp,-1672
80004e6e:	02 9b       	mov	r11,r1
80004e70:	0a 9c       	mov	r12,r5
80004e72:	fe b0 f4 81 	rcall	80003774 <__sprint_r>
80004e76:	e0 81 04 11 	brne	80005698 <_vfprintf_r+0x1f08>
80004e7a:	fa c4 f9 e0 	sub	r4,sp,-1568
80004e7e:	40 4b       	lddsp	r11,sp[0x10]
80004e80:	21 0b       	sub	r11,16
80004e82:	50 4b       	stdsp	sp[0x10],r11
80004e84:	fa f9 06 90 	ld.w	r9,sp[1680]
80004e88:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004e8c:	4b ea       	lddpc	r10,80004f84 <_vfprintf_r+0x17f4>
80004e8e:	40 4e       	lddsp	lr,sp[0x10]
80004e90:	59 0e       	cp.w	lr,16
80004e92:	fe 99 ff dd 	brgt	80004e4c <_vfprintf_r+0x16bc>
80004e96:	1c 09       	add	r9,lr
80004e98:	2f f8       	sub	r8,-1
80004e9a:	89 0a       	st.w	r4[0x0],r10
80004e9c:	fb 49 06 90 	st.w	sp[1680],r9
80004ea0:	89 1e       	st.w	r4[0x4],lr
80004ea2:	fb 48 06 8c 	st.w	sp[1676],r8
80004ea6:	58 78       	cp.w	r8,7
80004ea8:	e0 89 00 04 	brgt	80004eb0 <_vfprintf_r+0x1720>
80004eac:	2f 84       	sub	r4,-8
80004eae:	c0 b8       	rjmp	80004ec4 <_vfprintf_r+0x1734>
80004eb0:	fa ca f9 78 	sub	r10,sp,-1672
80004eb4:	02 9b       	mov	r11,r1
80004eb6:	0a 9c       	mov	r12,r5
80004eb8:	fe b0 f4 5e 	rcall	80003774 <__sprint_r>
80004ebc:	e0 81 03 ee 	brne	80005698 <_vfprintf_r+0x1f08>
80004ec0:	fa c4 f9 e0 	sub	r4,sp,-1568
80004ec4:	30 09       	mov	r9,0
80004ec6:	fb 38 06 bb 	ld.ub	r8,sp[1723]
80004eca:	f2 08 18 00 	cp.b	r8,r9
80004ece:	c1 f0       	breq	80004f0c <_vfprintf_r+0x177c>
80004ed0:	fa f8 06 90 	ld.w	r8,sp[1680]
80004ed4:	fa c9 f9 45 	sub	r9,sp,-1723
80004ed8:	2f f8       	sub	r8,-1
80004eda:	89 09       	st.w	r4[0x0],r9
80004edc:	fb 48 06 90 	st.w	sp[1680],r8
80004ee0:	30 19       	mov	r9,1
80004ee2:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004ee6:	89 19       	st.w	r4[0x4],r9
80004ee8:	2f f8       	sub	r8,-1
80004eea:	fb 48 06 8c 	st.w	sp[1676],r8
80004eee:	58 78       	cp.w	r8,7
80004ef0:	e0 89 00 04 	brgt	80004ef8 <_vfprintf_r+0x1768>
80004ef4:	2f 84       	sub	r4,-8
80004ef6:	c0 b8       	rjmp	80004f0c <_vfprintf_r+0x177c>
80004ef8:	fa ca f9 78 	sub	r10,sp,-1672
80004efc:	02 9b       	mov	r11,r1
80004efe:	0a 9c       	mov	r12,r5
80004f00:	fe b0 f4 3a 	rcall	80003774 <__sprint_r>
80004f04:	e0 81 03 ca 	brne	80005698 <_vfprintf_r+0x1f08>
80004f08:	fa c4 f9 e0 	sub	r4,sp,-1568
80004f0c:	40 fc       	lddsp	r12,sp[0x3c]
80004f0e:	58 0c       	cp.w	r12,0
80004f10:	c1 f0       	breq	80004f4e <_vfprintf_r+0x17be>
80004f12:	fa f8 06 90 	ld.w	r8,sp[1680]
80004f16:	fa c9 f9 48 	sub	r9,sp,-1720
80004f1a:	2f e8       	sub	r8,-2
80004f1c:	89 09       	st.w	r4[0x0],r9
80004f1e:	fb 48 06 90 	st.w	sp[1680],r8
80004f22:	30 29       	mov	r9,2
80004f24:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004f28:	89 19       	st.w	r4[0x4],r9
80004f2a:	2f f8       	sub	r8,-1
80004f2c:	fb 48 06 8c 	st.w	sp[1676],r8
80004f30:	58 78       	cp.w	r8,7
80004f32:	e0 89 00 04 	brgt	80004f3a <_vfprintf_r+0x17aa>
80004f36:	2f 84       	sub	r4,-8
80004f38:	c0 b8       	rjmp	80004f4e <_vfprintf_r+0x17be>
80004f3a:	fa ca f9 78 	sub	r10,sp,-1672
80004f3e:	02 9b       	mov	r11,r1
80004f40:	0a 9c       	mov	r12,r5
80004f42:	fe b0 f4 19 	rcall	80003774 <__sprint_r>
80004f46:	e0 81 03 a9 	brne	80005698 <_vfprintf_r+0x1f08>
80004f4a:	fa c4 f9 e0 	sub	r4,sp,-1568
80004f4e:	40 9b       	lddsp	r11,sp[0x24]
80004f50:	e0 4b 00 80 	cp.w	r11,128
80004f54:	c4 91       	brne	80004fe6 <_vfprintf_r+0x1856>
80004f56:	40 8a       	lddsp	r10,sp[0x20]
80004f58:	40 39       	lddsp	r9,sp[0xc]
80004f5a:	12 1a       	sub	r10,r9
80004f5c:	50 4a       	stdsp	sp[0x10],r10
80004f5e:	58 0a       	cp.w	r10,0
80004f60:	e0 89 00 23 	brgt	80004fa6 <_vfprintf_r+0x1816>
80004f64:	c4 18       	rjmp	80004fe6 <_vfprintf_r+0x1856>
80004f66:	2f 09       	sub	r9,-16
80004f68:	2f f8       	sub	r8,-1
80004f6a:	48 8e       	lddpc	lr,80004f88 <_vfprintf_r+0x17f8>
80004f6c:	31 0c       	mov	r12,16
80004f6e:	fb 49 06 90 	st.w	sp[1680],r9
80004f72:	89 0e       	st.w	r4[0x0],lr
80004f74:	89 1c       	st.w	r4[0x4],r12
80004f76:	fb 48 06 8c 	st.w	sp[1676],r8
80004f7a:	58 78       	cp.w	r8,7
80004f7c:	e0 89 00 08 	brgt	80004f8c <_vfprintf_r+0x17fc>
80004f80:	2f 84       	sub	r4,-8
80004f82:	c0 f8       	rjmp	80004fa0 <_vfprintf_r+0x1810>
80004f84:	80 00       	ld.sh	r0,r0[0x0]
80004f86:	96 f8       	ld.uh	r8,r11[0xe]
80004f88:	80 00       	ld.sh	r0,r0[0x0]
80004f8a:	97 08       	st.w	r11[0x0],r8
80004f8c:	fa ca f9 78 	sub	r10,sp,-1672
80004f90:	02 9b       	mov	r11,r1
80004f92:	0a 9c       	mov	r12,r5
80004f94:	fe b0 f3 f0 	rcall	80003774 <__sprint_r>
80004f98:	e0 81 03 80 	brne	80005698 <_vfprintf_r+0x1f08>
80004f9c:	fa c4 f9 e0 	sub	r4,sp,-1568
80004fa0:	40 4b       	lddsp	r11,sp[0x10]
80004fa2:	21 0b       	sub	r11,16
80004fa4:	50 4b       	stdsp	sp[0x10],r11
80004fa6:	fa f9 06 90 	ld.w	r9,sp[1680]
80004faa:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004fae:	4c 6a       	lddpc	r10,800050c4 <_vfprintf_r+0x1934>
80004fb0:	40 4e       	lddsp	lr,sp[0x10]
80004fb2:	59 0e       	cp.w	lr,16
80004fb4:	fe 99 ff d9 	brgt	80004f66 <_vfprintf_r+0x17d6>
80004fb8:	1c 09       	add	r9,lr
80004fba:	2f f8       	sub	r8,-1
80004fbc:	89 0a       	st.w	r4[0x0],r10
80004fbe:	fb 49 06 90 	st.w	sp[1680],r9
80004fc2:	89 1e       	st.w	r4[0x4],lr
80004fc4:	fb 48 06 8c 	st.w	sp[1676],r8
80004fc8:	58 78       	cp.w	r8,7
80004fca:	e0 89 00 04 	brgt	80004fd2 <_vfprintf_r+0x1842>
80004fce:	2f 84       	sub	r4,-8
80004fd0:	c0 b8       	rjmp	80004fe6 <_vfprintf_r+0x1856>
80004fd2:	fa ca f9 78 	sub	r10,sp,-1672
80004fd6:	02 9b       	mov	r11,r1
80004fd8:	0a 9c       	mov	r12,r5
80004fda:	fe b0 f3 cd 	rcall	80003774 <__sprint_r>
80004fde:	e0 81 03 5d 	brne	80005698 <_vfprintf_r+0x1f08>
80004fe2:	fa c4 f9 e0 	sub	r4,sp,-1568
80004fe6:	40 2c       	lddsp	r12,sp[0x8]
80004fe8:	04 1c       	sub	r12,r2
80004fea:	50 2c       	stdsp	sp[0x8],r12
80004fec:	58 0c       	cp.w	r12,0
80004fee:	e0 89 00 1f 	brgt	8000502c <_vfprintf_r+0x189c>
80004ff2:	c3 d8       	rjmp	8000506c <_vfprintf_r+0x18dc>
80004ff4:	2f 09       	sub	r9,-16
80004ff6:	2f f8       	sub	r8,-1
80004ff8:	4b 3b       	lddpc	r11,800050c4 <_vfprintf_r+0x1934>
80004ffa:	31 0a       	mov	r10,16
80004ffc:	fb 49 06 90 	st.w	sp[1680],r9
80005000:	89 0b       	st.w	r4[0x0],r11
80005002:	89 1a       	st.w	r4[0x4],r10
80005004:	fb 48 06 8c 	st.w	sp[1676],r8
80005008:	58 78       	cp.w	r8,7
8000500a:	e0 89 00 04 	brgt	80005012 <_vfprintf_r+0x1882>
8000500e:	2f 84       	sub	r4,-8
80005010:	c0 b8       	rjmp	80005026 <_vfprintf_r+0x1896>
80005012:	fa ca f9 78 	sub	r10,sp,-1672
80005016:	02 9b       	mov	r11,r1
80005018:	0a 9c       	mov	r12,r5
8000501a:	fe b0 f3 ad 	rcall	80003774 <__sprint_r>
8000501e:	e0 81 03 3d 	brne	80005698 <_vfprintf_r+0x1f08>
80005022:	fa c4 f9 e0 	sub	r4,sp,-1568
80005026:	40 29       	lddsp	r9,sp[0x8]
80005028:	21 09       	sub	r9,16
8000502a:	50 29       	stdsp	sp[0x8],r9
8000502c:	fa f9 06 90 	ld.w	r9,sp[1680]
80005030:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005034:	4a 4a       	lddpc	r10,800050c4 <_vfprintf_r+0x1934>
80005036:	40 2e       	lddsp	lr,sp[0x8]
80005038:	59 0e       	cp.w	lr,16
8000503a:	fe 99 ff dd 	brgt	80004ff4 <_vfprintf_r+0x1864>
8000503e:	1c 09       	add	r9,lr
80005040:	2f f8       	sub	r8,-1
80005042:	89 0a       	st.w	r4[0x0],r10
80005044:	fb 49 06 90 	st.w	sp[1680],r9
80005048:	89 1e       	st.w	r4[0x4],lr
8000504a:	fb 48 06 8c 	st.w	sp[1676],r8
8000504e:	58 78       	cp.w	r8,7
80005050:	e0 89 00 04 	brgt	80005058 <_vfprintf_r+0x18c8>
80005054:	2f 84       	sub	r4,-8
80005056:	c0 b8       	rjmp	8000506c <_vfprintf_r+0x18dc>
80005058:	fa ca f9 78 	sub	r10,sp,-1672
8000505c:	02 9b       	mov	r11,r1
8000505e:	0a 9c       	mov	r12,r5
80005060:	fe b0 f3 8a 	rcall	80003774 <__sprint_r>
80005064:	e0 81 03 1a 	brne	80005698 <_vfprintf_r+0x1f08>
80005068:	fa c4 f9 e0 	sub	r4,sp,-1568
8000506c:	ed b3 00 08 	bld	r3,0x8
80005070:	c0 b0       	breq	80005086 <_vfprintf_r+0x18f6>
80005072:	fa f8 06 90 	ld.w	r8,sp[1680]
80005076:	89 12       	st.w	r4[0x4],r2
80005078:	89 06       	st.w	r4[0x0],r6
8000507a:	f0 02 00 02 	add	r2,r8,r2
8000507e:	fb 42 06 90 	st.w	sp[1680],r2
80005082:	e0 8f 01 d5 	bral	8000542c <_vfprintf_r+0x1c9c>
80005086:	e0 40 00 65 	cp.w	r0,101
8000508a:	e0 8a 01 d7 	brle	80005438 <_vfprintf_r+0x1ca8>
8000508e:	30 08       	mov	r8,0
80005090:	30 09       	mov	r9,0
80005092:	40 5b       	lddsp	r11,sp[0x14]
80005094:	40 7a       	lddsp	r10,sp[0x1c]
80005096:	e0 a0 19 84 	rcall	8000839e <__avr32_f64_cmp_eq>
8000509a:	c7 a0       	breq	8000518e <_vfprintf_r+0x19fe>
8000509c:	fa f8 06 90 	ld.w	r8,sp[1680]
800050a0:	48 a9       	lddpc	r9,800050c8 <_vfprintf_r+0x1938>
800050a2:	2f f8       	sub	r8,-1
800050a4:	89 09       	st.w	r4[0x0],r9
800050a6:	fb 48 06 90 	st.w	sp[1680],r8
800050aa:	30 19       	mov	r9,1
800050ac:	fa f8 06 8c 	ld.w	r8,sp[1676]
800050b0:	89 19       	st.w	r4[0x4],r9
800050b2:	2f f8       	sub	r8,-1
800050b4:	fb 48 06 8c 	st.w	sp[1676],r8
800050b8:	58 78       	cp.w	r8,7
800050ba:	e0 89 00 09 	brgt	800050cc <_vfprintf_r+0x193c>
800050be:	2f 84       	sub	r4,-8
800050c0:	c1 08       	rjmp	800050e0 <_vfprintf_r+0x1950>
800050c2:	d7 03       	nop
800050c4:	80 00       	ld.sh	r0,r0[0x0]
800050c6:	97 08       	st.w	r11[0x0],r8
800050c8:	80 00       	ld.sh	r0,r0[0x0]
800050ca:	96 f4       	ld.uh	r4,r11[0xe]
800050cc:	fa ca f9 78 	sub	r10,sp,-1672
800050d0:	02 9b       	mov	r11,r1
800050d2:	0a 9c       	mov	r12,r5
800050d4:	fe b0 f3 50 	rcall	80003774 <__sprint_r>
800050d8:	e0 81 02 e0 	brne	80005698 <_vfprintf_r+0x1f08>
800050dc:	fa c4 f9 e0 	sub	r4,sp,-1568
800050e0:	fa f8 06 ac 	ld.w	r8,sp[1708]
800050e4:	40 6c       	lddsp	r12,sp[0x18]
800050e6:	18 38       	cp.w	r8,r12
800050e8:	c0 55       	brlt	800050f2 <_vfprintf_r+0x1962>
800050ea:	ed b3 00 00 	bld	r3,0x0
800050ee:	e0 81 02 69 	brne	800055c0 <_vfprintf_r+0x1e30>
800050f2:	fa f8 06 90 	ld.w	r8,sp[1680]
800050f6:	2f f8       	sub	r8,-1
800050f8:	40 cb       	lddsp	r11,sp[0x30]
800050fa:	fb 48 06 90 	st.w	sp[1680],r8
800050fe:	30 19       	mov	r9,1
80005100:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005104:	89 0b       	st.w	r4[0x0],r11
80005106:	2f f8       	sub	r8,-1
80005108:	89 19       	st.w	r4[0x4],r9
8000510a:	fb 48 06 8c 	st.w	sp[1676],r8
8000510e:	58 78       	cp.w	r8,7
80005110:	e0 89 00 04 	brgt	80005118 <_vfprintf_r+0x1988>
80005114:	2f 84       	sub	r4,-8
80005116:	c0 b8       	rjmp	8000512c <_vfprintf_r+0x199c>
80005118:	fa ca f9 78 	sub	r10,sp,-1672
8000511c:	02 9b       	mov	r11,r1
8000511e:	0a 9c       	mov	r12,r5
80005120:	fe b0 f3 2a 	rcall	80003774 <__sprint_r>
80005124:	e0 81 02 ba 	brne	80005698 <_vfprintf_r+0x1f08>
80005128:	fa c4 f9 e0 	sub	r4,sp,-1568
8000512c:	40 66       	lddsp	r6,sp[0x18]
8000512e:	20 16       	sub	r6,1
80005130:	58 06       	cp.w	r6,0
80005132:	e0 89 00 1d 	brgt	8000516c <_vfprintf_r+0x19dc>
80005136:	e0 8f 02 45 	bral	800055c0 <_vfprintf_r+0x1e30>
8000513a:	2f 09       	sub	r9,-16
8000513c:	2f f8       	sub	r8,-1
8000513e:	fb 49 06 90 	st.w	sp[1680],r9
80005142:	89 02       	st.w	r4[0x0],r2
80005144:	89 10       	st.w	r4[0x4],r0
80005146:	fb 48 06 8c 	st.w	sp[1676],r8
8000514a:	58 78       	cp.w	r8,7
8000514c:	e0 89 00 04 	brgt	80005154 <_vfprintf_r+0x19c4>
80005150:	2f 84       	sub	r4,-8
80005152:	c0 b8       	rjmp	80005168 <_vfprintf_r+0x19d8>
80005154:	fa ca f9 78 	sub	r10,sp,-1672
80005158:	02 9b       	mov	r11,r1
8000515a:	0a 9c       	mov	r12,r5
8000515c:	fe b0 f3 0c 	rcall	80003774 <__sprint_r>
80005160:	e0 81 02 9c 	brne	80005698 <_vfprintf_r+0x1f08>
80005164:	fa c4 f9 e0 	sub	r4,sp,-1568
80005168:	21 06       	sub	r6,16
8000516a:	c0 38       	rjmp	80005170 <_vfprintf_r+0x19e0>
8000516c:	4d 22       	lddpc	r2,800052b4 <_vfprintf_r+0x1b24>
8000516e:	31 00       	mov	r0,16
80005170:	fa f9 06 90 	ld.w	r9,sp[1680]
80005174:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005178:	4c fa       	lddpc	r10,800052b4 <_vfprintf_r+0x1b24>
8000517a:	59 06       	cp.w	r6,16
8000517c:	fe 99 ff df 	brgt	8000513a <_vfprintf_r+0x19aa>
80005180:	0c 09       	add	r9,r6
80005182:	89 0a       	st.w	r4[0x0],r10
80005184:	fb 49 06 90 	st.w	sp[1680],r9
80005188:	2f f8       	sub	r8,-1
8000518a:	89 16       	st.w	r4[0x4],r6
8000518c:	c5 39       	rjmp	80005432 <_vfprintf_r+0x1ca2>
8000518e:	fa fa 06 ac 	ld.w	r10,sp[1708]
80005192:	58 0a       	cp.w	r10,0
80005194:	e0 89 00 94 	brgt	800052bc <_vfprintf_r+0x1b2c>
80005198:	fa f8 06 90 	ld.w	r8,sp[1680]
8000519c:	4c 79       	lddpc	r9,800052b8 <_vfprintf_r+0x1b28>
8000519e:	2f f8       	sub	r8,-1
800051a0:	89 09       	st.w	r4[0x0],r9
800051a2:	fb 48 06 90 	st.w	sp[1680],r8
800051a6:	30 19       	mov	r9,1
800051a8:	fa f8 06 8c 	ld.w	r8,sp[1676]
800051ac:	89 19       	st.w	r4[0x4],r9
800051ae:	2f f8       	sub	r8,-1
800051b0:	fb 48 06 8c 	st.w	sp[1676],r8
800051b4:	58 78       	cp.w	r8,7
800051b6:	e0 89 00 04 	brgt	800051be <_vfprintf_r+0x1a2e>
800051ba:	2f 84       	sub	r4,-8
800051bc:	c0 b8       	rjmp	800051d2 <_vfprintf_r+0x1a42>
800051be:	fa ca f9 78 	sub	r10,sp,-1672
800051c2:	02 9b       	mov	r11,r1
800051c4:	0a 9c       	mov	r12,r5
800051c6:	fe b0 f2 d7 	rcall	80003774 <__sprint_r>
800051ca:	e0 81 02 67 	brne	80005698 <_vfprintf_r+0x1f08>
800051ce:	fa c4 f9 e0 	sub	r4,sp,-1568
800051d2:	fa f8 06 ac 	ld.w	r8,sp[1708]
800051d6:	58 08       	cp.w	r8,0
800051d8:	c0 81       	brne	800051e8 <_vfprintf_r+0x1a58>
800051da:	40 6a       	lddsp	r10,sp[0x18]
800051dc:	58 0a       	cp.w	r10,0
800051de:	c0 51       	brne	800051e8 <_vfprintf_r+0x1a58>
800051e0:	ed b3 00 00 	bld	r3,0x0
800051e4:	e0 81 01 ee 	brne	800055c0 <_vfprintf_r+0x1e30>
800051e8:	40 c9       	lddsp	r9,sp[0x30]
800051ea:	fa f8 06 90 	ld.w	r8,sp[1680]
800051ee:	2f f8       	sub	r8,-1
800051f0:	89 09       	st.w	r4[0x0],r9
800051f2:	fb 48 06 90 	st.w	sp[1680],r8
800051f6:	30 19       	mov	r9,1
800051f8:	fa f8 06 8c 	ld.w	r8,sp[1676]
800051fc:	89 19       	st.w	r4[0x4],r9
800051fe:	2f f8       	sub	r8,-1
80005200:	fb 48 06 8c 	st.w	sp[1676],r8
80005204:	58 78       	cp.w	r8,7
80005206:	e0 89 00 04 	brgt	8000520e <_vfprintf_r+0x1a7e>
8000520a:	2f 84       	sub	r4,-8
8000520c:	c0 b8       	rjmp	80005222 <_vfprintf_r+0x1a92>
8000520e:	fa ca f9 78 	sub	r10,sp,-1672
80005212:	02 9b       	mov	r11,r1
80005214:	0a 9c       	mov	r12,r5
80005216:	fe b0 f2 af 	rcall	80003774 <__sprint_r>
8000521a:	e0 81 02 3f 	brne	80005698 <_vfprintf_r+0x1f08>
8000521e:	fa c4 f9 e0 	sub	r4,sp,-1568
80005222:	fa f2 06 ac 	ld.w	r2,sp[1708]
80005226:	5c 32       	neg	r2
80005228:	58 02       	cp.w	r2,0
8000522a:	e0 89 00 1d 	brgt	80005264 <_vfprintf_r+0x1ad4>
8000522e:	c3 b8       	rjmp	800052a4 <_vfprintf_r+0x1b14>
80005230:	2f 09       	sub	r9,-16
80005232:	2f f8       	sub	r8,-1
80005234:	31 0e       	mov	lr,16
80005236:	fb 49 06 90 	st.w	sp[1680],r9
8000523a:	89 00       	st.w	r4[0x0],r0
8000523c:	89 1e       	st.w	r4[0x4],lr
8000523e:	fb 48 06 8c 	st.w	sp[1676],r8
80005242:	58 78       	cp.w	r8,7
80005244:	e0 89 00 04 	brgt	8000524c <_vfprintf_r+0x1abc>
80005248:	2f 84       	sub	r4,-8
8000524a:	c0 b8       	rjmp	80005260 <_vfprintf_r+0x1ad0>
8000524c:	fa ca f9 78 	sub	r10,sp,-1672
80005250:	02 9b       	mov	r11,r1
80005252:	0a 9c       	mov	r12,r5
80005254:	fe b0 f2 90 	rcall	80003774 <__sprint_r>
80005258:	e0 81 02 20 	brne	80005698 <_vfprintf_r+0x1f08>
8000525c:	fa c4 f9 e0 	sub	r4,sp,-1568
80005260:	21 02       	sub	r2,16
80005262:	c0 28       	rjmp	80005266 <_vfprintf_r+0x1ad6>
80005264:	49 40       	lddpc	r0,800052b4 <_vfprintf_r+0x1b24>
80005266:	fa f9 06 90 	ld.w	r9,sp[1680]
8000526a:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000526e:	49 2a       	lddpc	r10,800052b4 <_vfprintf_r+0x1b24>
80005270:	59 02       	cp.w	r2,16
80005272:	fe 99 ff df 	brgt	80005230 <_vfprintf_r+0x1aa0>
80005276:	04 09       	add	r9,r2
80005278:	2f f8       	sub	r8,-1
8000527a:	89 0a       	st.w	r4[0x0],r10
8000527c:	fb 49 06 90 	st.w	sp[1680],r9
80005280:	89 12       	st.w	r4[0x4],r2
80005282:	fb 48 06 8c 	st.w	sp[1676],r8
80005286:	58 78       	cp.w	r8,7
80005288:	e0 89 00 04 	brgt	80005290 <_vfprintf_r+0x1b00>
8000528c:	2f 84       	sub	r4,-8
8000528e:	c0 b8       	rjmp	800052a4 <_vfprintf_r+0x1b14>
80005290:	fa ca f9 78 	sub	r10,sp,-1672
80005294:	02 9b       	mov	r11,r1
80005296:	0a 9c       	mov	r12,r5
80005298:	fe b0 f2 6e 	rcall	80003774 <__sprint_r>
8000529c:	e0 81 01 fe 	brne	80005698 <_vfprintf_r+0x1f08>
800052a0:	fa c4 f9 e0 	sub	r4,sp,-1568
800052a4:	40 6c       	lddsp	r12,sp[0x18]
800052a6:	fa f8 06 90 	ld.w	r8,sp[1680]
800052aa:	89 06       	st.w	r4[0x0],r6
800052ac:	89 1c       	st.w	r4[0x4],r12
800052ae:	18 08       	add	r8,r12
800052b0:	cb c8       	rjmp	80005428 <_vfprintf_r+0x1c98>
800052b2:	d7 03       	nop
800052b4:	80 00       	ld.sh	r0,r0[0x0]
800052b6:	97 08       	st.w	r11[0x0],r8
800052b8:	80 00       	ld.sh	r0,r0[0x0]
800052ba:	96 f4       	ld.uh	r4,r11[0xe]
800052bc:	fa f9 06 90 	ld.w	r9,sp[1680]
800052c0:	fa f8 06 8c 	ld.w	r8,sp[1676]
800052c4:	40 6b       	lddsp	r11,sp[0x18]
800052c6:	16 3a       	cp.w	r10,r11
800052c8:	c6 d5       	brlt	800053a2 <_vfprintf_r+0x1c12>
800052ca:	16 09       	add	r9,r11
800052cc:	2f f8       	sub	r8,-1
800052ce:	89 06       	st.w	r4[0x0],r6
800052d0:	fb 49 06 90 	st.w	sp[1680],r9
800052d4:	89 1b       	st.w	r4[0x4],r11
800052d6:	fb 48 06 8c 	st.w	sp[1676],r8
800052da:	58 78       	cp.w	r8,7
800052dc:	e0 89 00 04 	brgt	800052e4 <_vfprintf_r+0x1b54>
800052e0:	2f 84       	sub	r4,-8
800052e2:	c0 b8       	rjmp	800052f8 <_vfprintf_r+0x1b68>
800052e4:	fa ca f9 78 	sub	r10,sp,-1672
800052e8:	02 9b       	mov	r11,r1
800052ea:	0a 9c       	mov	r12,r5
800052ec:	fe b0 f2 44 	rcall	80003774 <__sprint_r>
800052f0:	e0 81 01 d4 	brne	80005698 <_vfprintf_r+0x1f08>
800052f4:	fa c4 f9 e0 	sub	r4,sp,-1568
800052f8:	fa f6 06 ac 	ld.w	r6,sp[1708]
800052fc:	40 6a       	lddsp	r10,sp[0x18]
800052fe:	14 16       	sub	r6,r10
80005300:	58 06       	cp.w	r6,0
80005302:	e0 89 00 1c 	brgt	8000533a <_vfprintf_r+0x1baa>
80005306:	c3 b8       	rjmp	8000537c <_vfprintf_r+0x1bec>
80005308:	2f 09       	sub	r9,-16
8000530a:	2f f8       	sub	r8,-1
8000530c:	fb 49 06 90 	st.w	sp[1680],r9
80005310:	89 02       	st.w	r4[0x0],r2
80005312:	89 10       	st.w	r4[0x4],r0
80005314:	fb 48 06 8c 	st.w	sp[1676],r8
80005318:	58 78       	cp.w	r8,7
8000531a:	e0 89 00 04 	brgt	80005322 <_vfprintf_r+0x1b92>
8000531e:	2f 84       	sub	r4,-8
80005320:	c0 b8       	rjmp	80005336 <_vfprintf_r+0x1ba6>
80005322:	fa ca f9 78 	sub	r10,sp,-1672
80005326:	02 9b       	mov	r11,r1
80005328:	0a 9c       	mov	r12,r5
8000532a:	fe b0 f2 25 	rcall	80003774 <__sprint_r>
8000532e:	e0 81 01 b5 	brne	80005698 <_vfprintf_r+0x1f08>
80005332:	fa c4 f9 e0 	sub	r4,sp,-1568
80005336:	21 06       	sub	r6,16
80005338:	c0 38       	rjmp	8000533e <_vfprintf_r+0x1bae>
8000533a:	4d c2       	lddpc	r2,800054a8 <_vfprintf_r+0x1d18>
8000533c:	31 00       	mov	r0,16
8000533e:	fa f9 06 90 	ld.w	r9,sp[1680]
80005342:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005346:	4d 9a       	lddpc	r10,800054a8 <_vfprintf_r+0x1d18>
80005348:	59 06       	cp.w	r6,16
8000534a:	fe 99 ff df 	brgt	80005308 <_vfprintf_r+0x1b78>
8000534e:	0c 09       	add	r9,r6
80005350:	2f f8       	sub	r8,-1
80005352:	89 0a       	st.w	r4[0x0],r10
80005354:	fb 49 06 90 	st.w	sp[1680],r9
80005358:	89 16       	st.w	r4[0x4],r6
8000535a:	fb 48 06 8c 	st.w	sp[1676],r8
8000535e:	58 78       	cp.w	r8,7
80005360:	e0 89 00 04 	brgt	80005368 <_vfprintf_r+0x1bd8>
80005364:	2f 84       	sub	r4,-8
80005366:	c0 b8       	rjmp	8000537c <_vfprintf_r+0x1bec>
80005368:	fa ca f9 78 	sub	r10,sp,-1672
8000536c:	02 9b       	mov	r11,r1
8000536e:	0a 9c       	mov	r12,r5
80005370:	fe b0 f2 02 	rcall	80003774 <__sprint_r>
80005374:	e0 81 01 92 	brne	80005698 <_vfprintf_r+0x1f08>
80005378:	fa c4 f9 e0 	sub	r4,sp,-1568
8000537c:	ed b3 00 00 	bld	r3,0x0
80005380:	e0 81 01 20 	brne	800055c0 <_vfprintf_r+0x1e30>
80005384:	40 c9       	lddsp	r9,sp[0x30]
80005386:	fa f8 06 90 	ld.w	r8,sp[1680]
8000538a:	2f f8       	sub	r8,-1
8000538c:	89 09       	st.w	r4[0x0],r9
8000538e:	fb 48 06 90 	st.w	sp[1680],r8
80005392:	30 19       	mov	r9,1
80005394:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005398:	89 19       	st.w	r4[0x4],r9
8000539a:	2f f8       	sub	r8,-1
8000539c:	fb 48 06 8c 	st.w	sp[1676],r8
800053a0:	c0 29       	rjmp	800055a4 <_vfprintf_r+0x1e14>
800053a2:	14 09       	add	r9,r10
800053a4:	2f f8       	sub	r8,-1
800053a6:	fb 49 06 90 	st.w	sp[1680],r9
800053aa:	89 06       	st.w	r4[0x0],r6
800053ac:	89 1a       	st.w	r4[0x4],r10
800053ae:	fb 48 06 8c 	st.w	sp[1676],r8
800053b2:	58 78       	cp.w	r8,7
800053b4:	e0 89 00 04 	brgt	800053bc <_vfprintf_r+0x1c2c>
800053b8:	2f 84       	sub	r4,-8
800053ba:	c0 b8       	rjmp	800053d0 <_vfprintf_r+0x1c40>
800053bc:	fa ca f9 78 	sub	r10,sp,-1672
800053c0:	02 9b       	mov	r11,r1
800053c2:	0a 9c       	mov	r12,r5
800053c4:	fe b0 f1 d8 	rcall	80003774 <__sprint_r>
800053c8:	e0 81 01 68 	brne	80005698 <_vfprintf_r+0x1f08>
800053cc:	fa c4 f9 e0 	sub	r4,sp,-1568
800053d0:	40 c8       	lddsp	r8,sp[0x30]
800053d2:	89 08       	st.w	r4[0x0],r8
800053d4:	fa f8 06 90 	ld.w	r8,sp[1680]
800053d8:	2f f8       	sub	r8,-1
800053da:	30 19       	mov	r9,1
800053dc:	fb 48 06 90 	st.w	sp[1680],r8
800053e0:	89 19       	st.w	r4[0x4],r9
800053e2:	fa f8 06 8c 	ld.w	r8,sp[1676]
800053e6:	2f f8       	sub	r8,-1
800053e8:	fb 48 06 8c 	st.w	sp[1676],r8
800053ec:	fa f2 06 ac 	ld.w	r2,sp[1708]
800053f0:	58 78       	cp.w	r8,7
800053f2:	e0 89 00 04 	brgt	800053fa <_vfprintf_r+0x1c6a>
800053f6:	2f 84       	sub	r4,-8
800053f8:	c0 b8       	rjmp	8000540e <_vfprintf_r+0x1c7e>
800053fa:	fa ca f9 78 	sub	r10,sp,-1672
800053fe:	02 9b       	mov	r11,r1
80005400:	0a 9c       	mov	r12,r5
80005402:	fe b0 f1 b9 	rcall	80003774 <__sprint_r>
80005406:	e0 81 01 49 	brne	80005698 <_vfprintf_r+0x1f08>
8000540a:	fa c4 f9 e0 	sub	r4,sp,-1568
8000540e:	04 06       	add	r6,r2
80005410:	fa f8 06 ac 	ld.w	r8,sp[1708]
80005414:	89 06       	st.w	r4[0x0],r6
80005416:	fa f9 06 90 	ld.w	r9,sp[1680]
8000541a:	40 66       	lddsp	r6,sp[0x18]
8000541c:	40 6e       	lddsp	lr,sp[0x18]
8000541e:	10 16       	sub	r6,r8
80005420:	f2 08 01 08 	sub	r8,r9,r8
80005424:	89 16       	st.w	r4[0x4],r6
80005426:	1c 08       	add	r8,lr
80005428:	fb 48 06 90 	st.w	sp[1680],r8
8000542c:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005430:	2f f8       	sub	r8,-1
80005432:	fb 48 06 8c 	st.w	sp[1676],r8
80005436:	cb 78       	rjmp	800055a4 <_vfprintf_r+0x1e14>
80005438:	40 6c       	lddsp	r12,sp[0x18]
8000543a:	58 1c       	cp.w	r12,1
8000543c:	e0 89 00 06 	brgt	80005448 <_vfprintf_r+0x1cb8>
80005440:	ed b3 00 00 	bld	r3,0x0
80005444:	e0 81 00 85 	brne	8000554e <_vfprintf_r+0x1dbe>
80005448:	fa f8 06 90 	ld.w	r8,sp[1680]
8000544c:	2f f8       	sub	r8,-1
8000544e:	30 19       	mov	r9,1
80005450:	fb 48 06 90 	st.w	sp[1680],r8
80005454:	89 06       	st.w	r4[0x0],r6
80005456:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000545a:	89 19       	st.w	r4[0x4],r9
8000545c:	2f f8       	sub	r8,-1
8000545e:	fb 48 06 8c 	st.w	sp[1676],r8
80005462:	58 78       	cp.w	r8,7
80005464:	e0 89 00 04 	brgt	8000546c <_vfprintf_r+0x1cdc>
80005468:	2f 84       	sub	r4,-8
8000546a:	c0 b8       	rjmp	80005480 <_vfprintf_r+0x1cf0>
8000546c:	fa ca f9 78 	sub	r10,sp,-1672
80005470:	02 9b       	mov	r11,r1
80005472:	0a 9c       	mov	r12,r5
80005474:	fe b0 f1 80 	rcall	80003774 <__sprint_r>
80005478:	e0 81 01 10 	brne	80005698 <_vfprintf_r+0x1f08>
8000547c:	fa c4 f9 e0 	sub	r4,sp,-1568
80005480:	fa f8 06 90 	ld.w	r8,sp[1680]
80005484:	2f f8       	sub	r8,-1
80005486:	40 cb       	lddsp	r11,sp[0x30]
80005488:	fb 48 06 90 	st.w	sp[1680],r8
8000548c:	30 19       	mov	r9,1
8000548e:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005492:	89 0b       	st.w	r4[0x0],r11
80005494:	2f f8       	sub	r8,-1
80005496:	89 19       	st.w	r4[0x4],r9
80005498:	fb 48 06 8c 	st.w	sp[1676],r8
8000549c:	58 78       	cp.w	r8,7
8000549e:	e0 89 00 07 	brgt	800054ac <_vfprintf_r+0x1d1c>
800054a2:	2f 84       	sub	r4,-8
800054a4:	c0 e8       	rjmp	800054c0 <_vfprintf_r+0x1d30>
800054a6:	d7 03       	nop
800054a8:	80 00       	ld.sh	r0,r0[0x0]
800054aa:	97 08       	st.w	r11[0x0],r8
800054ac:	fa ca f9 78 	sub	r10,sp,-1672
800054b0:	02 9b       	mov	r11,r1
800054b2:	0a 9c       	mov	r12,r5
800054b4:	fe b0 f1 60 	rcall	80003774 <__sprint_r>
800054b8:	e0 81 00 f0 	brne	80005698 <_vfprintf_r+0x1f08>
800054bc:	fa c4 f9 e0 	sub	r4,sp,-1568
800054c0:	30 08       	mov	r8,0
800054c2:	30 09       	mov	r9,0
800054c4:	40 5b       	lddsp	r11,sp[0x14]
800054c6:	40 7a       	lddsp	r10,sp[0x1c]
800054c8:	e0 a0 17 6b 	rcall	8000839e <__avr32_f64_cmp_eq>
800054cc:	40 68       	lddsp	r8,sp[0x18]
800054ce:	20 18       	sub	r8,1
800054d0:	58 0c       	cp.w	r12,0
800054d2:	c0 d1       	brne	800054ec <_vfprintf_r+0x1d5c>
800054d4:	2f f6       	sub	r6,-1
800054d6:	89 18       	st.w	r4[0x4],r8
800054d8:	89 06       	st.w	r4[0x0],r6
800054da:	fa f6 06 90 	ld.w	r6,sp[1680]
800054de:	10 06       	add	r6,r8
800054e0:	fa f8 06 8c 	ld.w	r8,sp[1676]
800054e4:	fb 46 06 90 	st.w	sp[1680],r6
800054e8:	2f f8       	sub	r8,-1
800054ea:	c2 f8       	rjmp	80005548 <_vfprintf_r+0x1db8>
800054ec:	10 96       	mov	r6,r8
800054ee:	58 08       	cp.w	r8,0
800054f0:	e0 89 00 1c 	brgt	80005528 <_vfprintf_r+0x1d98>
800054f4:	c4 98       	rjmp	80005586 <_vfprintf_r+0x1df6>
800054f6:	2f 09       	sub	r9,-16
800054f8:	2f f8       	sub	r8,-1
800054fa:	fb 49 06 90 	st.w	sp[1680],r9
800054fe:	89 02       	st.w	r4[0x0],r2
80005500:	89 10       	st.w	r4[0x4],r0
80005502:	fb 48 06 8c 	st.w	sp[1676],r8
80005506:	58 78       	cp.w	r8,7
80005508:	e0 89 00 04 	brgt	80005510 <_vfprintf_r+0x1d80>
8000550c:	2f 84       	sub	r4,-8
8000550e:	c0 b8       	rjmp	80005524 <_vfprintf_r+0x1d94>
80005510:	fa ca f9 78 	sub	r10,sp,-1672
80005514:	02 9b       	mov	r11,r1
80005516:	0a 9c       	mov	r12,r5
80005518:	fe b0 f1 2e 	rcall	80003774 <__sprint_r>
8000551c:	e0 81 00 be 	brne	80005698 <_vfprintf_r+0x1f08>
80005520:	fa c4 f9 e0 	sub	r4,sp,-1568
80005524:	21 06       	sub	r6,16
80005526:	c0 38       	rjmp	8000552c <_vfprintf_r+0x1d9c>
80005528:	4d 22       	lddpc	r2,80005670 <_vfprintf_r+0x1ee0>
8000552a:	31 00       	mov	r0,16
8000552c:	fa f9 06 90 	ld.w	r9,sp[1680]
80005530:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005534:	4c fa       	lddpc	r10,80005670 <_vfprintf_r+0x1ee0>
80005536:	59 06       	cp.w	r6,16
80005538:	fe 99 ff df 	brgt	800054f6 <_vfprintf_r+0x1d66>
8000553c:	0c 09       	add	r9,r6
8000553e:	89 0a       	st.w	r4[0x0],r10
80005540:	fb 49 06 90 	st.w	sp[1680],r9
80005544:	2f f8       	sub	r8,-1
80005546:	89 16       	st.w	r4[0x4],r6
80005548:	fb 48 06 8c 	st.w	sp[1676],r8
8000554c:	c0 e8       	rjmp	80005568 <_vfprintf_r+0x1dd8>
8000554e:	fa f8 06 90 	ld.w	r8,sp[1680]
80005552:	2f f8       	sub	r8,-1
80005554:	30 19       	mov	r9,1
80005556:	fb 48 06 90 	st.w	sp[1680],r8
8000555a:	89 06       	st.w	r4[0x0],r6
8000555c:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005560:	89 19       	st.w	r4[0x4],r9
80005562:	2f f8       	sub	r8,-1
80005564:	fb 48 06 8c 	st.w	sp[1676],r8
80005568:	58 78       	cp.w	r8,7
8000556a:	e0 89 00 04 	brgt	80005572 <_vfprintf_r+0x1de2>
8000556e:	2f 84       	sub	r4,-8
80005570:	c0 b8       	rjmp	80005586 <_vfprintf_r+0x1df6>
80005572:	fa ca f9 78 	sub	r10,sp,-1672
80005576:	02 9b       	mov	r11,r1
80005578:	0a 9c       	mov	r12,r5
8000557a:	fe b0 f0 fd 	rcall	80003774 <__sprint_r>
8000557e:	e0 81 00 8d 	brne	80005698 <_vfprintf_r+0x1f08>
80005582:	fa c4 f9 e0 	sub	r4,sp,-1568
80005586:	40 ea       	lddsp	r10,sp[0x38]
80005588:	fa f8 06 90 	ld.w	r8,sp[1680]
8000558c:	14 08       	add	r8,r10
8000558e:	fa c9 f9 64 	sub	r9,sp,-1692
80005592:	fb 48 06 90 	st.w	sp[1680],r8
80005596:	89 1a       	st.w	r4[0x4],r10
80005598:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000559c:	89 09       	st.w	r4[0x0],r9
8000559e:	2f f8       	sub	r8,-1
800055a0:	fb 48 06 8c 	st.w	sp[1676],r8
800055a4:	58 78       	cp.w	r8,7
800055a6:	e0 89 00 04 	brgt	800055ae <_vfprintf_r+0x1e1e>
800055aa:	2f 84       	sub	r4,-8
800055ac:	c0 a8       	rjmp	800055c0 <_vfprintf_r+0x1e30>
800055ae:	fa ca f9 78 	sub	r10,sp,-1672
800055b2:	02 9b       	mov	r11,r1
800055b4:	0a 9c       	mov	r12,r5
800055b6:	fe b0 f0 df 	rcall	80003774 <__sprint_r>
800055ba:	c6 f1       	brne	80005698 <_vfprintf_r+0x1f08>
800055bc:	fa c4 f9 e0 	sub	r4,sp,-1568
800055c0:	e2 13 00 04 	andl	r3,0x4,COH
800055c4:	c3 d0       	breq	8000563e <_vfprintf_r+0x1eae>
800055c6:	40 86       	lddsp	r6,sp[0x20]
800055c8:	40 39       	lddsp	r9,sp[0xc]
800055ca:	12 16       	sub	r6,r9
800055cc:	58 06       	cp.w	r6,0
800055ce:	e0 89 00 1a 	brgt	80005602 <_vfprintf_r+0x1e72>
800055d2:	c3 68       	rjmp	8000563e <_vfprintf_r+0x1eae>
800055d4:	2f 09       	sub	r9,-16
800055d6:	2f f8       	sub	r8,-1
800055d8:	fb 49 06 90 	st.w	sp[1680],r9
800055dc:	89 03       	st.w	r4[0x0],r3
800055de:	89 12       	st.w	r4[0x4],r2
800055e0:	fb 48 06 8c 	st.w	sp[1676],r8
800055e4:	58 78       	cp.w	r8,7
800055e6:	e0 89 00 04 	brgt	800055ee <_vfprintf_r+0x1e5e>
800055ea:	2f 84       	sub	r4,-8
800055ec:	c0 98       	rjmp	800055fe <_vfprintf_r+0x1e6e>
800055ee:	00 9a       	mov	r10,r0
800055f0:	02 9b       	mov	r11,r1
800055f2:	0a 9c       	mov	r12,r5
800055f4:	fe b0 f0 c0 	rcall	80003774 <__sprint_r>
800055f8:	c5 01       	brne	80005698 <_vfprintf_r+0x1f08>
800055fa:	fa c4 f9 e0 	sub	r4,sp,-1568
800055fe:	21 06       	sub	r6,16
80005600:	c0 58       	rjmp	8000560a <_vfprintf_r+0x1e7a>
80005602:	49 d3       	lddpc	r3,80005674 <_vfprintf_r+0x1ee4>
80005604:	31 02       	mov	r2,16
80005606:	fa c0 f9 78 	sub	r0,sp,-1672
8000560a:	fa f9 06 90 	ld.w	r9,sp[1680]
8000560e:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005612:	49 9a       	lddpc	r10,80005674 <_vfprintf_r+0x1ee4>
80005614:	59 06       	cp.w	r6,16
80005616:	fe 99 ff df 	brgt	800055d4 <_vfprintf_r+0x1e44>
8000561a:	0c 09       	add	r9,r6
8000561c:	2f f8       	sub	r8,-1
8000561e:	89 0a       	st.w	r4[0x0],r10
80005620:	89 16       	st.w	r4[0x4],r6
80005622:	fb 49 06 90 	st.w	sp[1680],r9
80005626:	fb 48 06 8c 	st.w	sp[1676],r8
8000562a:	58 78       	cp.w	r8,7
8000562c:	e0 8a 00 09 	brle	8000563e <_vfprintf_r+0x1eae>
80005630:	fa ca f9 78 	sub	r10,sp,-1672
80005634:	02 9b       	mov	r11,r1
80005636:	0a 9c       	mov	r12,r5
80005638:	fe b0 f0 9e 	rcall	80003774 <__sprint_r>
8000563c:	c2 e1       	brne	80005698 <_vfprintf_r+0x1f08>
8000563e:	40 bc       	lddsp	r12,sp[0x2c]
80005640:	40 36       	lddsp	r6,sp[0xc]
80005642:	40 8e       	lddsp	lr,sp[0x20]
80005644:	ec 0e 0c 48 	max	r8,r6,lr
80005648:	10 0c       	add	r12,r8
8000564a:	50 bc       	stdsp	sp[0x2c],r12
8000564c:	fa f8 06 90 	ld.w	r8,sp[1680]
80005650:	58 08       	cp.w	r8,0
80005652:	c0 80       	breq	80005662 <_vfprintf_r+0x1ed2>
80005654:	fa ca f9 78 	sub	r10,sp,-1672
80005658:	02 9b       	mov	r11,r1
8000565a:	0a 9c       	mov	r12,r5
8000565c:	fe b0 f0 8c 	rcall	80003774 <__sprint_r>
80005660:	c1 c1       	brne	80005698 <_vfprintf_r+0x1f08>
80005662:	30 0b       	mov	r11,0
80005664:	fa c4 f9 e0 	sub	r4,sp,-1568
80005668:	fb 4b 06 8c 	st.w	sp[1676],r11
8000566c:	fe 9f f1 1c 	bral	800038a4 <_vfprintf_r+0x114>
80005670:	80 00       	ld.sh	r0,r0[0x0]
80005672:	97 08       	st.w	r11[0x0],r8
80005674:	80 00       	ld.sh	r0,r0[0x0]
80005676:	96 f8       	ld.uh	r8,r11[0xe]
80005678:	fa f8 06 90 	ld.w	r8,sp[1680]
8000567c:	58 08       	cp.w	r8,0
8000567e:	c0 80       	breq	8000568e <_vfprintf_r+0x1efe>
80005680:	0a 9c       	mov	r12,r5
80005682:	fa ca f9 78 	sub	r10,sp,-1672
80005686:	02 9b       	mov	r11,r1
80005688:	fe b0 f0 76 	rcall	80003774 <__sprint_r>
8000568c:	c0 61       	brne	80005698 <_vfprintf_r+0x1f08>
8000568e:	30 08       	mov	r8,0
80005690:	fb 48 06 8c 	st.w	sp[1676],r8
80005694:	c0 28       	rjmp	80005698 <_vfprintf_r+0x1f08>
80005696:	40 41       	lddsp	r1,sp[0x10]
80005698:	82 68       	ld.sh	r8,r1[0xc]
8000569a:	ed b8 00 06 	bld	r8,0x6
8000569e:	c0 31       	brne	800056a4 <_vfprintf_r+0x1f14>
800056a0:	3f fa       	mov	r10,-1
800056a2:	50 ba       	stdsp	sp[0x2c],r10
800056a4:	40 bc       	lddsp	r12,sp[0x2c]
800056a6:	fe 3d f9 44 	sub	sp,-1724
800056aa:	d8 32       	popm	r0-r7,pc

800056ac <__swsetup_r>:
800056ac:	d4 21       	pushm	r4-r7,lr
800056ae:	4b 38       	lddpc	r8,80005778 <__swsetup_r+0xcc>
800056b0:	18 96       	mov	r6,r12
800056b2:	16 97       	mov	r7,r11
800056b4:	70 0c       	ld.w	r12,r8[0x0]
800056b6:	58 0c       	cp.w	r12,0
800056b8:	c0 60       	breq	800056c4 <__swsetup_r+0x18>
800056ba:	78 68       	ld.w	r8,r12[0x18]
800056bc:	58 08       	cp.w	r8,0
800056be:	c0 31       	brne	800056c4 <__swsetup_r+0x18>
800056c0:	e0 a0 07 c0 	rcall	80006640 <__sinit>
800056c4:	4a e8       	lddpc	r8,8000577c <__swsetup_r+0xd0>
800056c6:	10 37       	cp.w	r7,r8
800056c8:	c0 51       	brne	800056d2 <__swsetup_r+0x26>
800056ca:	4a c8       	lddpc	r8,80005778 <__swsetup_r+0xcc>
800056cc:	70 08       	ld.w	r8,r8[0x0]
800056ce:	70 07       	ld.w	r7,r8[0x0]
800056d0:	c0 e8       	rjmp	800056ec <__swsetup_r+0x40>
800056d2:	4a c8       	lddpc	r8,80005780 <__swsetup_r+0xd4>
800056d4:	10 37       	cp.w	r7,r8
800056d6:	c0 51       	brne	800056e0 <__swsetup_r+0x34>
800056d8:	4a 88       	lddpc	r8,80005778 <__swsetup_r+0xcc>
800056da:	70 08       	ld.w	r8,r8[0x0]
800056dc:	70 17       	ld.w	r7,r8[0x4]
800056de:	c0 78       	rjmp	800056ec <__swsetup_r+0x40>
800056e0:	4a 98       	lddpc	r8,80005784 <__swsetup_r+0xd8>
800056e2:	10 37       	cp.w	r7,r8
800056e4:	c0 41       	brne	800056ec <__swsetup_r+0x40>
800056e6:	4a 58       	lddpc	r8,80005778 <__swsetup_r+0xcc>
800056e8:	70 08       	ld.w	r8,r8[0x0]
800056ea:	70 27       	ld.w	r7,r8[0x8]
800056ec:	8e 68       	ld.sh	r8,r7[0xc]
800056ee:	ed b8 00 03 	bld	r8,0x3
800056f2:	c1 e0       	breq	8000572e <__swsetup_r+0x82>
800056f4:	ed b8 00 04 	bld	r8,0x4
800056f8:	c3 e1       	brne	80005774 <__swsetup_r+0xc8>
800056fa:	ed b8 00 02 	bld	r8,0x2
800056fe:	c1 51       	brne	80005728 <__swsetup_r+0x7c>
80005700:	6e db       	ld.w	r11,r7[0x34]
80005702:	58 0b       	cp.w	r11,0
80005704:	c0 a0       	breq	80005718 <__swsetup_r+0x6c>
80005706:	ee c8 ff bc 	sub	r8,r7,-68
8000570a:	10 3b       	cp.w	r11,r8
8000570c:	c0 40       	breq	80005714 <__swsetup_r+0x68>
8000570e:	0c 9c       	mov	r12,r6
80005710:	e0 a0 08 34 	rcall	80006778 <_free_r>
80005714:	30 08       	mov	r8,0
80005716:	8f d8       	st.w	r7[0x34],r8
80005718:	8e 68       	ld.sh	r8,r7[0xc]
8000571a:	e0 18 ff db 	andl	r8,0xffdb
8000571e:	ae 68       	st.h	r7[0xc],r8
80005720:	30 08       	mov	r8,0
80005722:	8f 18       	st.w	r7[0x4],r8
80005724:	6e 48       	ld.w	r8,r7[0x10]
80005726:	8f 08       	st.w	r7[0x0],r8
80005728:	8e 68       	ld.sh	r8,r7[0xc]
8000572a:	a3 b8       	sbr	r8,0x3
8000572c:	ae 68       	st.h	r7[0xc],r8
8000572e:	6e 48       	ld.w	r8,r7[0x10]
80005730:	58 08       	cp.w	r8,0
80005732:	c0 b1       	brne	80005748 <__swsetup_r+0x9c>
80005734:	8e 68       	ld.sh	r8,r7[0xc]
80005736:	e2 18 02 80 	andl	r8,0x280,COH
8000573a:	e0 48 02 00 	cp.w	r8,512
8000573e:	c0 50       	breq	80005748 <__swsetup_r+0x9c>
80005740:	0c 9c       	mov	r12,r6
80005742:	0e 9b       	mov	r11,r7
80005744:	e0 a0 0a 5e 	rcall	80006c00 <__smakebuf_r>
80005748:	8e 69       	ld.sh	r9,r7[0xc]
8000574a:	f1 d9 c0 01 	bfextu	r8,r9,0x0,0x1
8000574e:	c0 70       	breq	8000575c <__swsetup_r+0xb0>
80005750:	30 08       	mov	r8,0
80005752:	8f 28       	st.w	r7[0x8],r8
80005754:	6e 58       	ld.w	r8,r7[0x14]
80005756:	5c 38       	neg	r8
80005758:	8f 68       	st.w	r7[0x18],r8
8000575a:	c0 68       	rjmp	80005766 <__swsetup_r+0xba>
8000575c:	ed b9 00 01 	bld	r9,0x1
80005760:	ef f8 10 05 	ld.wne	r8,r7[0x14]
80005764:	8f 28       	st.w	r7[0x8],r8
80005766:	6e 48       	ld.w	r8,r7[0x10]
80005768:	58 08       	cp.w	r8,0
8000576a:	c0 61       	brne	80005776 <__swsetup_r+0xca>
8000576c:	8e 68       	ld.sh	r8,r7[0xc]
8000576e:	ed b8 00 07 	bld	r8,0x7
80005772:	c0 21       	brne	80005776 <__swsetup_r+0xca>
80005774:	dc 2a       	popm	r4-r7,pc,r12=-1
80005776:	d8 2a       	popm	r4-r7,pc,r12=0
80005778:	00 00       	add	r0,r0
8000577a:	01 00       	ld.w	r0,r0++
8000577c:	80 00       	ld.sh	r0,r0[0x0]
8000577e:	98 28       	ld.sh	r8,r12[0x4]
80005780:	80 00       	ld.sh	r0,r0[0x0]
80005782:	98 48       	ld.sh	r8,r12[0x8]
80005784:	80 00       	ld.sh	r0,r0[0x0]
80005786:	98 68       	ld.sh	r8,r12[0xc]

80005788 <quorem>:
80005788:	d4 31       	pushm	r0-r7,lr
8000578a:	20 2d       	sub	sp,8
8000578c:	18 97       	mov	r7,r12
8000578e:	78 48       	ld.w	r8,r12[0x10]
80005790:	76 46       	ld.w	r6,r11[0x10]
80005792:	0c 38       	cp.w	r8,r6
80005794:	c0 34       	brge	8000579a <quorem+0x12>
80005796:	30 0c       	mov	r12,0
80005798:	c8 58       	rjmp	800058a2 <quorem+0x11a>
8000579a:	ec c2 ff fc 	sub	r2,r6,-4
8000579e:	f6 c3 ff ec 	sub	r3,r11,-20
800057a2:	f6 02 03 29 	ld.w	r9,r11[r2<<0x2]
800057a6:	f8 02 03 2c 	ld.w	r12,r12[r2<<0x2]
800057aa:	2f f9       	sub	r9,-1
800057ac:	20 16       	sub	r6,1
800057ae:	f8 09 0d 08 	divu	r8,r12,r9
800057b2:	f6 02 00 22 	add	r2,r11,r2<<0x2
800057b6:	ee c4 ff ec 	sub	r4,r7,-20
800057ba:	10 95       	mov	r5,r8
800057bc:	58 08       	cp.w	r8,0
800057be:	c4 10       	breq	80005840 <quorem+0xb8>
800057c0:	30 09       	mov	r9,0
800057c2:	06 9a       	mov	r10,r3
800057c4:	08 98       	mov	r8,r4
800057c6:	12 91       	mov	r1,r9
800057c8:	50 0b       	stdsp	sp[0x0],r11
800057ca:	70 0e       	ld.w	lr,r8[0x0]
800057cc:	b1 8e       	lsr	lr,0x10
800057ce:	50 1e       	stdsp	sp[0x4],lr
800057d0:	15 0e       	ld.w	lr,r10++
800057d2:	fc 00 16 10 	lsr	r0,lr,0x10
800057d6:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
800057da:	ea 0e 03 41 	mac	r1,r5,lr
800057de:	fd d1 c0 10 	bfextu	lr,r1,0x0,0x10
800057e2:	b1 81       	lsr	r1,0x10
800057e4:	40 1b       	lddsp	r11,sp[0x4]
800057e6:	ea 00 02 40 	mul	r0,r5,r0
800057ea:	e2 00 00 00 	add	r0,r1,r0
800057ee:	e3 d0 c0 10 	bfextu	r1,r0,0x0,0x10
800057f2:	02 1b       	sub	r11,r1
800057f4:	50 1b       	stdsp	sp[0x4],r11
800057f6:	70 0b       	ld.w	r11,r8[0x0]
800057f8:	e3 db c0 10 	bfextu	r1,r11,0x0,0x10
800057fc:	02 09       	add	r9,r1
800057fe:	f2 0e 01 0e 	sub	lr,r9,lr
80005802:	b0 1e       	st.h	r8[0x2],lr
80005804:	fc 09 14 10 	asr	r9,lr,0x10
80005808:	40 1e       	lddsp	lr,sp[0x4]
8000580a:	fc 09 00 09 	add	r9,lr,r9
8000580e:	b0 09       	st.h	r8[0x0],r9
80005810:	e0 01 16 10 	lsr	r1,r0,0x10
80005814:	2f c8       	sub	r8,-4
80005816:	b1 49       	asr	r9,0x10
80005818:	04 3a       	cp.w	r10,r2
8000581a:	fe 98 ff d8 	brls	800057ca <quorem+0x42>
8000581e:	40 0b       	lddsp	r11,sp[0x0]
80005820:	58 0c       	cp.w	r12,0
80005822:	c0 f1       	brne	80005840 <quorem+0xb8>
80005824:	ec c8 ff fb 	sub	r8,r6,-5
80005828:	ee 08 00 28 	add	r8,r7,r8<<0x2
8000582c:	c0 28       	rjmp	80005830 <quorem+0xa8>
8000582e:	20 16       	sub	r6,1
80005830:	20 48       	sub	r8,4
80005832:	08 38       	cp.w	r8,r4
80005834:	e0 88 00 05 	brls	8000583e <quorem+0xb6>
80005838:	70 09       	ld.w	r9,r8[0x0]
8000583a:	58 09       	cp.w	r9,0
8000583c:	cf 90       	breq	8000582e <quorem+0xa6>
8000583e:	8f 46       	st.w	r7[0x10],r6
80005840:	0e 9c       	mov	r12,r7
80005842:	e0 a0 0d 0d 	rcall	8000725c <__mcmp>
80005846:	c2 d5       	brlt	800058a0 <quorem+0x118>
80005848:	2f f5       	sub	r5,-1
8000584a:	08 98       	mov	r8,r4
8000584c:	30 09       	mov	r9,0
8000584e:	07 0b       	ld.w	r11,r3++
80005850:	f6 0a 16 10 	lsr	r10,r11,0x10
80005854:	70 0c       	ld.w	r12,r8[0x0]
80005856:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
8000585a:	f8 0e 16 10 	lsr	lr,r12,0x10
8000585e:	14 1e       	sub	lr,r10
80005860:	f5 dc c0 10 	bfextu	r10,r12,0x0,0x10
80005864:	16 1a       	sub	r10,r11
80005866:	12 0a       	add	r10,r9
80005868:	b0 1a       	st.h	r8[0x2],r10
8000586a:	b1 4a       	asr	r10,0x10
8000586c:	fc 0a 00 09 	add	r9,lr,r10
80005870:	b0 09       	st.h	r8[0x0],r9
80005872:	2f c8       	sub	r8,-4
80005874:	b1 49       	asr	r9,0x10
80005876:	04 33       	cp.w	r3,r2
80005878:	fe 98 ff eb 	brls	8000584e <quorem+0xc6>
8000587c:	ec c8 ff fb 	sub	r8,r6,-5
80005880:	ee 08 03 29 	ld.w	r9,r7[r8<<0x2]
80005884:	58 09       	cp.w	r9,0
80005886:	c0 d1       	brne	800058a0 <quorem+0x118>
80005888:	ee 08 00 28 	add	r8,r7,r8<<0x2
8000588c:	c0 28       	rjmp	80005890 <quorem+0x108>
8000588e:	20 16       	sub	r6,1
80005890:	20 48       	sub	r8,4
80005892:	08 38       	cp.w	r8,r4
80005894:	e0 88 00 05 	brls	8000589e <quorem+0x116>
80005898:	70 09       	ld.w	r9,r8[0x0]
8000589a:	58 09       	cp.w	r9,0
8000589c:	cf 90       	breq	8000588e <quorem+0x106>
8000589e:	8f 46       	st.w	r7[0x10],r6
800058a0:	0a 9c       	mov	r12,r5
800058a2:	2f ed       	sub	sp,-8
800058a4:	d8 32       	popm	r0-r7,pc
800058a6:	d7 03       	nop

800058a8 <_dtoa_r>:
800058a8:	d4 31       	pushm	r0-r7,lr
800058aa:	21 ad       	sub	sp,104
800058ac:	fa c4 ff 74 	sub	r4,sp,-140
800058b0:	18 97       	mov	r7,r12
800058b2:	16 95       	mov	r5,r11
800058b4:	68 2c       	ld.w	r12,r4[0x8]
800058b6:	50 c9       	stdsp	sp[0x30],r9
800058b8:	68 16       	ld.w	r6,r4[0x4]
800058ba:	68 09       	ld.w	r9,r4[0x0]
800058bc:	50 e8       	stdsp	sp[0x38],r8
800058be:	14 94       	mov	r4,r10
800058c0:	51 2c       	stdsp	sp[0x48],r12
800058c2:	fa e5 00 08 	st.d	sp[8],r4
800058c6:	51 59       	stdsp	sp[0x54],r9
800058c8:	6e 95       	ld.w	r5,r7[0x24]
800058ca:	58 05       	cp.w	r5,0
800058cc:	c0 91       	brne	800058de <_dtoa_r+0x36>
800058ce:	31 0c       	mov	r12,16
800058d0:	e0 a0 09 fa 	rcall	80006cc4 <malloc>
800058d4:	99 35       	st.w	r12[0xc],r5
800058d6:	8f 9c       	st.w	r7[0x24],r12
800058d8:	99 15       	st.w	r12[0x4],r5
800058da:	99 25       	st.w	r12[0x8],r5
800058dc:	99 05       	st.w	r12[0x0],r5
800058de:	6e 99       	ld.w	r9,r7[0x24]
800058e0:	72 08       	ld.w	r8,r9[0x0]
800058e2:	58 08       	cp.w	r8,0
800058e4:	c0 f0       	breq	80005902 <_dtoa_r+0x5a>
800058e6:	72 1a       	ld.w	r10,r9[0x4]
800058e8:	91 1a       	st.w	r8[0x4],r10
800058ea:	30 1a       	mov	r10,1
800058ec:	72 19       	ld.w	r9,r9[0x4]
800058ee:	f4 09 09 49 	lsl	r9,r10,r9
800058f2:	10 9b       	mov	r11,r8
800058f4:	91 29       	st.w	r8[0x8],r9
800058f6:	0e 9c       	mov	r12,r7
800058f8:	e0 a0 0c cc 	rcall	80007290 <_Bfree>
800058fc:	6e 98       	ld.w	r8,r7[0x24]
800058fe:	30 09       	mov	r9,0
80005900:	91 09       	st.w	r8[0x0],r9
80005902:	40 28       	lddsp	r8,sp[0x8]
80005904:	10 94       	mov	r4,r8
80005906:	58 08       	cp.w	r8,0
80005908:	c0 64       	brge	80005914 <_dtoa_r+0x6c>
8000590a:	f1 d8 c0 1f 	bfextu	r8,r8,0x0,0x1f
8000590e:	50 28       	stdsp	sp[0x8],r8
80005910:	30 18       	mov	r8,1
80005912:	c0 28       	rjmp	80005916 <_dtoa_r+0x6e>
80005914:	30 08       	mov	r8,0
80005916:	8d 08       	st.w	r6[0x0],r8
80005918:	fc 1c 7f f0 	movh	r12,0x7ff0
8000591c:	40 26       	lddsp	r6,sp[0x8]
8000591e:	0c 98       	mov	r8,r6
80005920:	e6 18 7f f0 	andh	r8,0x7ff0,COH
80005924:	18 38       	cp.w	r8,r12
80005926:	c1 c1       	brne	8000595e <_dtoa_r+0xb6>
80005928:	e0 68 27 0f 	mov	r8,9999
8000592c:	41 5b       	lddsp	r11,sp[0x54]
8000592e:	97 08       	st.w	r11[0x0],r8
80005930:	40 3a       	lddsp	r10,sp[0xc]
80005932:	58 0a       	cp.w	r10,0
80005934:	c0 61       	brne	80005940 <_dtoa_r+0x98>
80005936:	ed d6 c0 14 	bfextu	r6,r6,0x0,0x14
8000593a:	c0 31       	brne	80005940 <_dtoa_r+0x98>
8000593c:	4a cc       	lddpc	r12,800059ec <_dtoa_r+0x144>
8000593e:	c0 28       	rjmp	80005942 <_dtoa_r+0x9a>
80005940:	4a cc       	lddpc	r12,800059f0 <_dtoa_r+0x148>
80005942:	41 29       	lddsp	r9,sp[0x48]
80005944:	58 09       	cp.w	r9,0
80005946:	e0 80 05 9e 	breq	80006482 <_dtoa_r+0xbda>
8000594a:	f8 c8 ff fd 	sub	r8,r12,-3
8000594e:	30 09       	mov	r9,0
80005950:	11 8a       	ld.ub	r10,r8[0x0]
80005952:	f2 0a 18 00 	cp.b	r10,r9
80005956:	c1 90       	breq	80005988 <_dtoa_r+0xe0>
80005958:	f8 c8 ff f8 	sub	r8,r12,-8
8000595c:	c1 68       	rjmp	80005988 <_dtoa_r+0xe0>
8000595e:	fa ea 00 08 	ld.d	r10,sp[8]
80005962:	30 08       	mov	r8,0
80005964:	fa eb 00 3c 	st.d	sp[60],r10
80005968:	30 09       	mov	r9,0
8000596a:	e0 a0 15 1a 	rcall	8000839e <__avr32_f64_cmp_eq>
8000596e:	c1 10       	breq	80005990 <_dtoa_r+0xe8>
80005970:	30 18       	mov	r8,1
80005972:	41 5a       	lddsp	r10,sp[0x54]
80005974:	95 08       	st.w	r10[0x0],r8
80005976:	41 29       	lddsp	r9,sp[0x48]
80005978:	49 f8       	lddpc	r8,800059f4 <_dtoa_r+0x14c>
8000597a:	58 09       	cp.w	r9,0
8000597c:	c0 41       	brne	80005984 <_dtoa_r+0xdc>
8000597e:	10 9c       	mov	r12,r8
80005980:	e0 8f 05 81 	bral	80006482 <_dtoa_r+0xbda>
80005984:	10 9c       	mov	r12,r8
80005986:	2f f8       	sub	r8,-1
80005988:	41 25       	lddsp	r5,sp[0x48]
8000598a:	8b 08       	st.w	r5[0x0],r8
8000598c:	e0 8f 05 7b 	bral	80006482 <_dtoa_r+0xbda>
80005990:	fa c8 ff 9c 	sub	r8,sp,-100
80005994:	fa c9 ff a0 	sub	r9,sp,-96
80005998:	fa ea 00 3c 	ld.d	r10,sp[60]
8000599c:	0e 9c       	mov	r12,r7
8000599e:	eb d6 c2 8b 	bfextu	r5,r6,0x14,0xb
800059a2:	e0 a0 0c c9 	rcall	80007334 <__d2b>
800059a6:	18 93       	mov	r3,r12
800059a8:	58 05       	cp.w	r5,0
800059aa:	c0 d0       	breq	800059c4 <_dtoa_r+0x11c>
800059ac:	fa ea 00 3c 	ld.d	r10,sp[60]
800059b0:	30 04       	mov	r4,0
800059b2:	f1 db c0 14 	bfextu	r8,r11,0x0,0x14
800059b6:	ea c5 03 ff 	sub	r5,r5,1023
800059ba:	10 9b       	mov	r11,r8
800059bc:	51 74       	stdsp	sp[0x5c],r4
800059be:	ea 1b 3f f0 	orh	r11,0x3ff0
800059c2:	c2 a8       	rjmp	80005a16 <_dtoa_r+0x16e>
800059c4:	41 88       	lddsp	r8,sp[0x60]
800059c6:	41 9c       	lddsp	r12,sp[0x64]
800059c8:	10 0c       	add	r12,r8
800059ca:	f8 c5 fb ce 	sub	r5,r12,-1074
800059ce:	e0 45 00 20 	cp.w	r5,32
800059d2:	e0 8a 00 13 	brle	800059f8 <_dtoa_r+0x150>
800059d6:	f8 cc fb ee 	sub	r12,r12,-1042
800059da:	40 3b       	lddsp	r11,sp[0xc]
800059dc:	ea 08 11 40 	rsub	r8,r5,64
800059e0:	f6 0c 0a 4c 	lsr	r12,r11,r12
800059e4:	ec 08 09 46 	lsl	r6,r6,r8
800059e8:	0c 4c       	or	r12,r6
800059ea:	c0 c8       	rjmp	80005a02 <_dtoa_r+0x15a>
800059ec:	80 00       	ld.sh	r0,r0[0x0]
800059ee:	98 18       	ld.sh	r8,r12[0x2]
800059f0:	80 00       	ld.sh	r0,r0[0x0]
800059f2:	98 24       	ld.sh	r4,r12[0x4]
800059f4:	80 00       	ld.sh	r0,r0[0x0]
800059f6:	96 f4       	ld.uh	r4,r11[0xe]
800059f8:	ea 0c 11 20 	rsub	r12,r5,32
800059fc:	40 3a       	lddsp	r10,sp[0xc]
800059fe:	f4 0c 09 4c 	lsl	r12,r10,r12
80005a02:	e0 a0 14 5a 	rcall	800082b6 <__avr32_u32_to_f64>
80005a06:	fc 18 fe 10 	movh	r8,0xfe10
80005a0a:	30 19       	mov	r9,1
80005a0c:	ea c5 04 33 	sub	r5,r5,1075
80005a10:	f0 0b 00 0b 	add	r11,r8,r11
80005a14:	51 79       	stdsp	sp[0x5c],r9
80005a16:	30 08       	mov	r8,0
80005a18:	fc 19 3f f8 	movh	r9,0x3ff8
80005a1c:	e0 a0 12 e6 	rcall	80007fe8 <__avr32_f64_sub>
80005a20:	e0 68 43 61 	mov	r8,17249
80005a24:	ea 18 63 6f 	orh	r8,0x636f
80005a28:	e0 69 87 a7 	mov	r9,34727
80005a2c:	ea 19 3f d2 	orh	r9,0x3fd2
80005a30:	e0 a0 11 f0 	rcall	80007e10 <__avr32_f64_mul>
80005a34:	e0 68 c8 b3 	mov	r8,51379
80005a38:	ea 18 8b 60 	orh	r8,0x8b60
80005a3c:	e0 69 8a 28 	mov	r9,35368
80005a40:	ea 19 3f c6 	orh	r9,0x3fc6
80005a44:	e0 a0 13 a0 	rcall	80008184 <__avr32_f64_add>
80005a48:	0a 9c       	mov	r12,r5
80005a4a:	14 90       	mov	r0,r10
80005a4c:	16 91       	mov	r1,r11
80005a4e:	e0 a0 14 38 	rcall	800082be <__avr32_s32_to_f64>
80005a52:	e0 68 79 fb 	mov	r8,31227
80005a56:	ea 18 50 9f 	orh	r8,0x509f
80005a5a:	e0 69 44 13 	mov	r9,17427
80005a5e:	ea 19 3f d3 	orh	r9,0x3fd3
80005a62:	e0 a0 11 d7 	rcall	80007e10 <__avr32_f64_mul>
80005a66:	14 98       	mov	r8,r10
80005a68:	16 99       	mov	r9,r11
80005a6a:	00 9a       	mov	r10,r0
80005a6c:	02 9b       	mov	r11,r1
80005a6e:	e0 a0 13 8b 	rcall	80008184 <__avr32_f64_add>
80005a72:	14 90       	mov	r0,r10
80005a74:	16 91       	mov	r1,r11
80005a76:	e0 a0 14 0d 	rcall	80008290 <__avr32_f64_to_s32>
80005a7a:	30 08       	mov	r8,0
80005a7c:	18 96       	mov	r6,r12
80005a7e:	30 09       	mov	r9,0
80005a80:	00 9a       	mov	r10,r0
80005a82:	02 9b       	mov	r11,r1
80005a84:	e0 a0 14 d4 	rcall	8000842c <__avr32_f64_cmp_lt>
80005a88:	c0 c0       	breq	80005aa0 <_dtoa_r+0x1f8>
80005a8a:	0c 9c       	mov	r12,r6
80005a8c:	e0 a0 14 19 	rcall	800082be <__avr32_s32_to_f64>
80005a90:	14 98       	mov	r8,r10
80005a92:	16 99       	mov	r9,r11
80005a94:	00 9a       	mov	r10,r0
80005a96:	02 9b       	mov	r11,r1
80005a98:	e0 a0 14 83 	rcall	8000839e <__avr32_f64_cmp_eq>
80005a9c:	f7 b6 00 01 	subeq	r6,1
80005aa0:	59 66       	cp.w	r6,22
80005aa2:	e0 88 00 05 	brls	80005aac <_dtoa_r+0x204>
80005aa6:	30 18       	mov	r8,1
80005aa8:	51 48       	stdsp	sp[0x50],r8
80005aaa:	c1 28       	rjmp	80005ace <_dtoa_r+0x226>
80005aac:	4c 08       	lddpc	r8,80005bac <_dtoa_r+0x304>
80005aae:	fa ea 00 3c 	ld.d	r10,sp[60]
80005ab2:	f0 06 02 38 	ld.d	r8,r8[r6<<0x3]
80005ab6:	e0 a0 14 bb 	rcall	8000842c <__avr32_f64_cmp_lt>
80005aba:	f9 b4 00 00 	moveq	r4,0
80005abe:	fb f4 0a 14 	st.weq	sp[0x50],r4
80005ac2:	f7 b6 01 01 	subne	r6,1
80005ac6:	f9 bc 01 00 	movne	r12,0
80005aca:	fb fc 1a 14 	st.wne	sp[0x50],r12
80005ace:	41 90       	lddsp	r0,sp[0x64]
80005ad0:	20 10       	sub	r0,1
80005ad2:	0a 10       	sub	r0,r5
80005ad4:	c0 46       	brmi	80005adc <_dtoa_r+0x234>
80005ad6:	50 40       	stdsp	sp[0x10],r0
80005ad8:	30 00       	mov	r0,0
80005ada:	c0 48       	rjmp	80005ae2 <_dtoa_r+0x23a>
80005adc:	30 0b       	mov	r11,0
80005ade:	5c 30       	neg	r0
80005ae0:	50 4b       	stdsp	sp[0x10],r11
80005ae2:	ec 02 11 00 	rsub	r2,r6,0
80005ae6:	58 06       	cp.w	r6,0
80005ae8:	fb fa 40 04 	ld.wge	r10,sp[0x10]
80005aec:	f5 d6 e4 0a 	addge	r10,r10,r6
80005af0:	fb fa 4a 04 	st.wge	sp[0x10],r10
80005af4:	fb f6 4a 11 	st.wge	sp[0x44],r6
80005af8:	f9 b2 04 00 	movge	r2,0
80005afc:	e1 d6 e5 10 	sublt	r0,r0,r6
80005b00:	f9 b9 05 00 	movlt	r9,0
80005b04:	fb f9 5a 11 	st.wlt	sp[0x44],r9
80005b08:	40 c8       	lddsp	r8,sp[0x30]
80005b0a:	58 98       	cp.w	r8,9
80005b0c:	e0 8b 00 20 	brhi	80005b4c <_dtoa_r+0x2a4>
80005b10:	58 58       	cp.w	r8,5
80005b12:	f9 b4 0a 01 	movle	r4,1
80005b16:	fb f5 90 0c 	ld.wgt	r5,sp[0x30]
80005b1a:	f7 b5 09 04 	subgt	r5,4
80005b1e:	fb f5 9a 0c 	st.wgt	sp[0x30],r5
80005b22:	f9 b4 09 00 	movgt	r4,0
80005b26:	40 cc       	lddsp	r12,sp[0x30]
80005b28:	58 3c       	cp.w	r12,3
80005b2a:	c2 d0       	breq	80005b84 <_dtoa_r+0x2dc>
80005b2c:	e0 89 00 05 	brgt	80005b36 <_dtoa_r+0x28e>
80005b30:	58 2c       	cp.w	r12,2
80005b32:	c1 01       	brne	80005b52 <_dtoa_r+0x2aa>
80005b34:	c1 88       	rjmp	80005b64 <_dtoa_r+0x2bc>
80005b36:	40 cb       	lddsp	r11,sp[0x30]
80005b38:	58 4b       	cp.w	r11,4
80005b3a:	c0 60       	breq	80005b46 <_dtoa_r+0x29e>
80005b3c:	58 5b       	cp.w	r11,5
80005b3e:	c0 a1       	brne	80005b52 <_dtoa_r+0x2aa>
80005b40:	30 1a       	mov	r10,1
80005b42:	50 da       	stdsp	sp[0x34],r10
80005b44:	c2 28       	rjmp	80005b88 <_dtoa_r+0x2e0>
80005b46:	30 19       	mov	r9,1
80005b48:	50 d9       	stdsp	sp[0x34],r9
80005b4a:	c0 f8       	rjmp	80005b68 <_dtoa_r+0x2c0>
80005b4c:	30 08       	mov	r8,0
80005b4e:	30 14       	mov	r4,1
80005b50:	50 c8       	stdsp	sp[0x30],r8
80005b52:	3f f5       	mov	r5,-1
80005b54:	30 1c       	mov	r12,1
80005b56:	30 0b       	mov	r11,0
80005b58:	50 95       	stdsp	sp[0x24],r5
80005b5a:	50 dc       	stdsp	sp[0x34],r12
80005b5c:	0a 91       	mov	r1,r5
80005b5e:	31 28       	mov	r8,18
80005b60:	50 eb       	stdsp	sp[0x38],r11
80005b62:	c2 08       	rjmp	80005ba2 <_dtoa_r+0x2fa>
80005b64:	30 0a       	mov	r10,0
80005b66:	50 da       	stdsp	sp[0x34],r10
80005b68:	40 e9       	lddsp	r9,sp[0x38]
80005b6a:	58 09       	cp.w	r9,0
80005b6c:	e0 89 00 07 	brgt	80005b7a <_dtoa_r+0x2d2>
80005b70:	30 18       	mov	r8,1
80005b72:	50 98       	stdsp	sp[0x24],r8
80005b74:	10 91       	mov	r1,r8
80005b76:	50 e8       	stdsp	sp[0x38],r8
80005b78:	c1 58       	rjmp	80005ba2 <_dtoa_r+0x2fa>
80005b7a:	40 e5       	lddsp	r5,sp[0x38]
80005b7c:	50 95       	stdsp	sp[0x24],r5
80005b7e:	0a 91       	mov	r1,r5
80005b80:	0a 98       	mov	r8,r5
80005b82:	c1 08       	rjmp	80005ba2 <_dtoa_r+0x2fa>
80005b84:	30 0c       	mov	r12,0
80005b86:	50 dc       	stdsp	sp[0x34],r12
80005b88:	40 eb       	lddsp	r11,sp[0x38]
80005b8a:	ec 0b 00 0b 	add	r11,r6,r11
80005b8e:	50 9b       	stdsp	sp[0x24],r11
80005b90:	16 98       	mov	r8,r11
80005b92:	2f f8       	sub	r8,-1
80005b94:	58 08       	cp.w	r8,0
80005b96:	e0 89 00 05 	brgt	80005ba0 <_dtoa_r+0x2f8>
80005b9a:	10 91       	mov	r1,r8
80005b9c:	30 18       	mov	r8,1
80005b9e:	c0 28       	rjmp	80005ba2 <_dtoa_r+0x2fa>
80005ba0:	10 91       	mov	r1,r8
80005ba2:	30 09       	mov	r9,0
80005ba4:	6e 9a       	ld.w	r10,r7[0x24]
80005ba6:	95 19       	st.w	r10[0x4],r9
80005ba8:	30 49       	mov	r9,4
80005baa:	c0 78       	rjmp	80005bb8 <_dtoa_r+0x310>
80005bac:	80 00       	ld.sh	r0,r0[0x0]
80005bae:	98 dc       	ld.uh	r12,r12[0xa]
80005bb0:	6a 1a       	ld.w	r10,r5[0x4]
80005bb2:	a1 79       	lsl	r9,0x1
80005bb4:	2f fa       	sub	r10,-1
80005bb6:	8b 1a       	st.w	r5[0x4],r10
80005bb8:	6e 95       	ld.w	r5,r7[0x24]
80005bba:	f2 ca ff ec 	sub	r10,r9,-20
80005bbe:	10 3a       	cp.w	r10,r8
80005bc0:	fe 98 ff f8 	brls	80005bb0 <_dtoa_r+0x308>
80005bc4:	6a 1b       	ld.w	r11,r5[0x4]
80005bc6:	0e 9c       	mov	r12,r7
80005bc8:	e0 a0 0b 7e 	rcall	800072c4 <_Balloc>
80005bcc:	58 e1       	cp.w	r1,14
80005bce:	5f 88       	srls	r8
80005bd0:	8b 0c       	st.w	r5[0x0],r12
80005bd2:	f1 e4 00 04 	and	r4,r8,r4
80005bd6:	6e 98       	ld.w	r8,r7[0x24]
80005bd8:	70 08       	ld.w	r8,r8[0x0]
80005bda:	50 88       	stdsp	sp[0x20],r8
80005bdc:	e0 80 01 82 	breq	80005ee0 <_dtoa_r+0x638>
80005be0:	58 06       	cp.w	r6,0
80005be2:	e0 8a 00 40 	brle	80005c62 <_dtoa_r+0x3ba>
80005be6:	f3 d6 c0 04 	bfextu	r9,r6,0x0,0x4
80005bea:	4c b8       	lddpc	r8,80005d14 <_dtoa_r+0x46c>
80005bec:	f0 09 02 34 	ld.d	r4,r8[r9<<0x3]
80005bf0:	fa e5 00 18 	st.d	sp[24],r4
80005bf4:	ec 04 14 04 	asr	r4,r6,0x4
80005bf8:	ed b4 00 04 	bld	r4,0x4
80005bfc:	c0 30       	breq	80005c02 <_dtoa_r+0x35a>
80005bfe:	30 25       	mov	r5,2
80005c00:	c0 f8       	rjmp	80005c1e <_dtoa_r+0x376>
80005c02:	4c 68       	lddpc	r8,80005d18 <_dtoa_r+0x470>
80005c04:	f0 e8 00 20 	ld.d	r8,r8[32]
80005c08:	fa ea 00 3c 	ld.d	r10,sp[60]
80005c0c:	e9 d4 c0 04 	bfextu	r4,r4,0x0,0x4
80005c10:	e0 a0 14 42 	rcall	80008494 <__avr32_f64_div>
80005c14:	30 35       	mov	r5,3
80005c16:	14 98       	mov	r8,r10
80005c18:	16 99       	mov	r9,r11
80005c1a:	fa e9 00 08 	st.d	sp[8],r8
80005c1e:	4b fc       	lddpc	r12,80005d18 <_dtoa_r+0x470>
80005c20:	50 a3       	stdsp	sp[0x28],r3
80005c22:	0c 93       	mov	r3,r6
80005c24:	18 96       	mov	r6,r12
80005c26:	c0 f8       	rjmp	80005c44 <_dtoa_r+0x39c>
80005c28:	fa ea 00 18 	ld.d	r10,sp[24]
80005c2c:	ed b4 00 00 	bld	r4,0x0
80005c30:	c0 81       	brne	80005c40 <_dtoa_r+0x398>
80005c32:	ec e8 00 00 	ld.d	r8,r6[0]
80005c36:	2f f5       	sub	r5,-1
80005c38:	e0 a0 10 ec 	rcall	80007e10 <__avr32_f64_mul>
80005c3c:	fa eb 00 18 	st.d	sp[24],r10
80005c40:	a1 54       	asr	r4,0x1
80005c42:	2f 86       	sub	r6,-8
80005c44:	58 04       	cp.w	r4,0
80005c46:	cf 11       	brne	80005c28 <_dtoa_r+0x380>
80005c48:	fa e8 00 18 	ld.d	r8,sp[24]
80005c4c:	fa ea 00 08 	ld.d	r10,sp[8]
80005c50:	06 96       	mov	r6,r3
80005c52:	e0 a0 14 21 	rcall	80008494 <__avr32_f64_div>
80005c56:	40 a3       	lddsp	r3,sp[0x28]
80005c58:	14 98       	mov	r8,r10
80005c5a:	16 99       	mov	r9,r11
80005c5c:	fa e9 00 08 	st.d	sp[8],r8
80005c60:	c2 d8       	rjmp	80005cba <_dtoa_r+0x412>
80005c62:	ec 08 11 00 	rsub	r8,r6,0
80005c66:	c0 31       	brne	80005c6c <_dtoa_r+0x3c4>
80005c68:	30 25       	mov	r5,2
80005c6a:	c2 88       	rjmp	80005cba <_dtoa_r+0x412>
80005c6c:	4a bc       	lddpc	r12,80005d18 <_dtoa_r+0x470>
80005c6e:	f0 04 14 04 	asr	r4,r8,0x4
80005c72:	50 1c       	stdsp	sp[0x4],r12
80005c74:	f1 d8 c0 04 	bfextu	r8,r8,0x0,0x4
80005c78:	4a 79       	lddpc	r9,80005d14 <_dtoa_r+0x46c>
80005c7a:	fa ea 00 3c 	ld.d	r10,sp[60]
80005c7e:	f2 08 02 38 	ld.d	r8,r9[r8<<0x3]
80005c82:	e0 a0 10 c7 	rcall	80007e10 <__avr32_f64_mul>
80005c86:	40 1c       	lddsp	r12,sp[0x4]
80005c88:	50 63       	stdsp	sp[0x18],r3
80005c8a:	30 25       	mov	r5,2
80005c8c:	0c 93       	mov	r3,r6
80005c8e:	fa eb 00 08 	st.d	sp[8],r10
80005c92:	18 96       	mov	r6,r12
80005c94:	c0 f8       	rjmp	80005cb2 <_dtoa_r+0x40a>
80005c96:	fa ea 00 08 	ld.d	r10,sp[8]
80005c9a:	ed b4 00 00 	bld	r4,0x0
80005c9e:	c0 81       	brne	80005cae <_dtoa_r+0x406>
80005ca0:	ec e8 00 00 	ld.d	r8,r6[0]
80005ca4:	2f f5       	sub	r5,-1
80005ca6:	e0 a0 10 b5 	rcall	80007e10 <__avr32_f64_mul>
80005caa:	fa eb 00 08 	st.d	sp[8],r10
80005cae:	a1 54       	asr	r4,0x1
80005cb0:	2f 86       	sub	r6,-8
80005cb2:	58 04       	cp.w	r4,0
80005cb4:	cf 11       	brne	80005c96 <_dtoa_r+0x3ee>
80005cb6:	06 96       	mov	r6,r3
80005cb8:	40 63       	lddsp	r3,sp[0x18]
80005cba:	41 4a       	lddsp	r10,sp[0x50]
80005cbc:	58 0a       	cp.w	r10,0
80005cbe:	c2 f0       	breq	80005d1c <_dtoa_r+0x474>
80005cc0:	fa e8 00 08 	ld.d	r8,sp[8]
80005cc4:	58 01       	cp.w	r1,0
80005cc6:	5f 94       	srgt	r4
80005cc8:	fa e9 00 18 	st.d	sp[24],r8
80005ccc:	30 08       	mov	r8,0
80005cce:	fc 19 3f f0 	movh	r9,0x3ff0
80005cd2:	fa ea 00 18 	ld.d	r10,sp[24]
80005cd6:	e0 a0 13 ab 	rcall	8000842c <__avr32_f64_cmp_lt>
80005cda:	f9 bc 00 00 	moveq	r12,0
80005cde:	f9 bc 01 01 	movne	r12,1
80005ce2:	e9 ec 00 0c 	and	r12,r4,r12
80005ce6:	c1 b0       	breq	80005d1c <_dtoa_r+0x474>
80005ce8:	40 98       	lddsp	r8,sp[0x24]
80005cea:	58 08       	cp.w	r8,0
80005cec:	e0 8a 00 f6 	brle	80005ed8 <_dtoa_r+0x630>
80005cf0:	30 08       	mov	r8,0
80005cf2:	fc 19 40 24 	movh	r9,0x4024
80005cf6:	ec c4 00 01 	sub	r4,r6,1
80005cfa:	fa ea 00 18 	ld.d	r10,sp[24]
80005cfe:	2f f5       	sub	r5,-1
80005d00:	50 64       	stdsp	sp[0x18],r4
80005d02:	e0 a0 10 87 	rcall	80007e10 <__avr32_f64_mul>
80005d06:	40 94       	lddsp	r4,sp[0x24]
80005d08:	14 98       	mov	r8,r10
80005d0a:	16 99       	mov	r9,r11
80005d0c:	fa e9 00 08 	st.d	sp[8],r8
80005d10:	c0 88       	rjmp	80005d20 <_dtoa_r+0x478>
80005d12:	d7 03       	nop
80005d14:	80 00       	ld.sh	r0,r0[0x0]
80005d16:	98 dc       	ld.uh	r12,r12[0xa]
80005d18:	80 00       	ld.sh	r0,r0[0x0]
80005d1a:	99 a4       	st.w	r12[0x28],r4
80005d1c:	50 66       	stdsp	sp[0x18],r6
80005d1e:	02 94       	mov	r4,r1
80005d20:	0a 9c       	mov	r12,r5
80005d22:	e0 a0 12 ce 	rcall	800082be <__avr32_s32_to_f64>
80005d26:	fa e8 00 08 	ld.d	r8,sp[8]
80005d2a:	e0 a0 10 73 	rcall	80007e10 <__avr32_f64_mul>
80005d2e:	30 08       	mov	r8,0
80005d30:	fc 19 40 1c 	movh	r9,0x401c
80005d34:	e0 a0 12 28 	rcall	80008184 <__avr32_f64_add>
80005d38:	14 98       	mov	r8,r10
80005d3a:	16 99       	mov	r9,r11
80005d3c:	fa e9 00 28 	st.d	sp[40],r8
80005d40:	fc 18 fc c0 	movh	r8,0xfcc0
80005d44:	40 a5       	lddsp	r5,sp[0x28]
80005d46:	10 05       	add	r5,r8
80005d48:	50 a5       	stdsp	sp[0x28],r5
80005d4a:	58 04       	cp.w	r4,0
80005d4c:	c2 11       	brne	80005d8e <_dtoa_r+0x4e6>
80005d4e:	fa ea 00 08 	ld.d	r10,sp[8]
80005d52:	30 08       	mov	r8,0
80005d54:	fc 19 40 14 	movh	r9,0x4014
80005d58:	e0 a0 11 48 	rcall	80007fe8 <__avr32_f64_sub>
80005d5c:	40 bc       	lddsp	r12,sp[0x2c]
80005d5e:	fa eb 00 08 	st.d	sp[8],r10
80005d62:	14 98       	mov	r8,r10
80005d64:	16 99       	mov	r9,r11
80005d66:	18 9a       	mov	r10,r12
80005d68:	0a 9b       	mov	r11,r5
80005d6a:	e0 a0 13 61 	rcall	8000842c <__avr32_f64_cmp_lt>
80005d6e:	e0 81 02 54 	brne	80006216 <_dtoa_r+0x96e>
80005d72:	0a 98       	mov	r8,r5
80005d74:	40 b9       	lddsp	r9,sp[0x2c]
80005d76:	ee 18 80 00 	eorh	r8,0x8000
80005d7a:	fa ea 00 08 	ld.d	r10,sp[8]
80005d7e:	10 95       	mov	r5,r8
80005d80:	12 98       	mov	r8,r9
80005d82:	0a 99       	mov	r9,r5
80005d84:	e0 a0 13 54 	rcall	8000842c <__avr32_f64_cmp_lt>
80005d88:	e0 81 02 3e 	brne	80006204 <_dtoa_r+0x95c>
80005d8c:	ca 68       	rjmp	80005ed8 <_dtoa_r+0x630>
80005d8e:	4c e9       	lddpc	r9,80005ec4 <_dtoa_r+0x61c>
80005d90:	e8 c8 00 01 	sub	r8,r4,1
80005d94:	40 d5       	lddsp	r5,sp[0x34]
80005d96:	58 05       	cp.w	r5,0
80005d98:	c4 f0       	breq	80005e36 <_dtoa_r+0x58e>
80005d9a:	30 0c       	mov	r12,0
80005d9c:	f2 08 02 38 	ld.d	r8,r9[r8<<0x3]
80005da0:	51 3c       	stdsp	sp[0x4c],r12
80005da2:	30 0a       	mov	r10,0
80005da4:	fc 1b 3f e0 	movh	r11,0x3fe0
80005da8:	e0 a0 13 76 	rcall	80008494 <__avr32_f64_div>
80005dac:	fa e8 00 28 	ld.d	r8,sp[40]
80005db0:	40 85       	lddsp	r5,sp[0x20]
80005db2:	e0 a0 11 1b 	rcall	80007fe8 <__avr32_f64_sub>
80005db6:	fa eb 00 28 	st.d	sp[40],r10
80005dba:	fa ea 00 08 	ld.d	r10,sp[8]
80005dbe:	e0 a0 12 69 	rcall	80008290 <__avr32_f64_to_s32>
80005dc2:	51 6c       	stdsp	sp[0x58],r12
80005dc4:	e0 a0 12 7d 	rcall	800082be <__avr32_s32_to_f64>
80005dc8:	14 98       	mov	r8,r10
80005dca:	16 99       	mov	r9,r11
80005dcc:	fa ea 00 08 	ld.d	r10,sp[8]
80005dd0:	e0 a0 11 0c 	rcall	80007fe8 <__avr32_f64_sub>
80005dd4:	fa eb 00 08 	st.d	sp[8],r10
80005dd8:	41 68       	lddsp	r8,sp[0x58]
80005dda:	2d 08       	sub	r8,-48
80005ddc:	0a c8       	st.b	r5++,r8
80005dde:	41 39       	lddsp	r9,sp[0x4c]
80005de0:	2f f9       	sub	r9,-1
80005de2:	51 39       	stdsp	sp[0x4c],r9
80005de4:	fa e8 00 28 	ld.d	r8,sp[40]
80005de8:	e0 a0 13 22 	rcall	8000842c <__avr32_f64_cmp_lt>
80005dec:	e0 81 03 3a 	brne	80006460 <_dtoa_r+0xbb8>
80005df0:	fa e8 00 08 	ld.d	r8,sp[8]
80005df4:	30 0a       	mov	r10,0
80005df6:	fc 1b 3f f0 	movh	r11,0x3ff0
80005dfa:	e0 a0 10 f7 	rcall	80007fe8 <__avr32_f64_sub>
80005dfe:	fa e8 00 28 	ld.d	r8,sp[40]
80005e02:	e0 a0 13 15 	rcall	8000842c <__avr32_f64_cmp_lt>
80005e06:	fa ea 00 28 	ld.d	r10,sp[40]
80005e0a:	30 08       	mov	r8,0
80005e0c:	fc 19 40 24 	movh	r9,0x4024
80005e10:	e0 81 00 da 	brne	80005fc4 <_dtoa_r+0x71c>
80005e14:	41 3c       	lddsp	r12,sp[0x4c]
80005e16:	08 3c       	cp.w	r12,r4
80005e18:	c6 04       	brge	80005ed8 <_dtoa_r+0x630>
80005e1a:	e0 a0 0f fb 	rcall	80007e10 <__avr32_f64_mul>
80005e1e:	30 08       	mov	r8,0
80005e20:	fa eb 00 28 	st.d	sp[40],r10
80005e24:	fc 19 40 24 	movh	r9,0x4024
80005e28:	fa ea 00 08 	ld.d	r10,sp[8]
80005e2c:	e0 a0 0f f2 	rcall	80007e10 <__avr32_f64_mul>
80005e30:	fa eb 00 08 	st.d	sp[8],r10
80005e34:	cc 3b       	rjmp	80005dba <_dtoa_r+0x512>
80005e36:	40 85       	lddsp	r5,sp[0x20]
80005e38:	08 05       	add	r5,r4
80005e3a:	f2 08 02 3a 	ld.d	r10,r9[r8<<0x3]
80005e3e:	51 35       	stdsp	sp[0x4c],r5
80005e40:	fa e8 00 28 	ld.d	r8,sp[40]
80005e44:	40 85       	lddsp	r5,sp[0x20]
80005e46:	e0 a0 0f e5 	rcall	80007e10 <__avr32_f64_mul>
80005e4a:	fa eb 00 28 	st.d	sp[40],r10
80005e4e:	fa ea 00 08 	ld.d	r10,sp[8]
80005e52:	e0 a0 12 1f 	rcall	80008290 <__avr32_f64_to_s32>
80005e56:	51 6c       	stdsp	sp[0x58],r12
80005e58:	e0 a0 12 33 	rcall	800082be <__avr32_s32_to_f64>
80005e5c:	14 98       	mov	r8,r10
80005e5e:	16 99       	mov	r9,r11
80005e60:	fa ea 00 08 	ld.d	r10,sp[8]
80005e64:	e0 a0 10 c2 	rcall	80007fe8 <__avr32_f64_sub>
80005e68:	fa eb 00 08 	st.d	sp[8],r10
80005e6c:	41 68       	lddsp	r8,sp[0x58]
80005e6e:	2d 08       	sub	r8,-48
80005e70:	0a c8       	st.b	r5++,r8
80005e72:	41 3c       	lddsp	r12,sp[0x4c]
80005e74:	18 35       	cp.w	r5,r12
80005e76:	c2 91       	brne	80005ec8 <_dtoa_r+0x620>
80005e78:	30 08       	mov	r8,0
80005e7a:	fc 19 3f e0 	movh	r9,0x3fe0
80005e7e:	fa ea 00 28 	ld.d	r10,sp[40]
80005e82:	e0 a0 11 81 	rcall	80008184 <__avr32_f64_add>
80005e86:	40 85       	lddsp	r5,sp[0x20]
80005e88:	fa e8 00 08 	ld.d	r8,sp[8]
80005e8c:	08 05       	add	r5,r4
80005e8e:	e0 a0 12 cf 	rcall	8000842c <__avr32_f64_cmp_lt>
80005e92:	e0 81 00 99 	brne	80005fc4 <_dtoa_r+0x71c>
80005e96:	fa e8 00 28 	ld.d	r8,sp[40]
80005e9a:	30 0a       	mov	r10,0
80005e9c:	fc 1b 3f e0 	movh	r11,0x3fe0
80005ea0:	e0 a0 10 a4 	rcall	80007fe8 <__avr32_f64_sub>
80005ea4:	14 98       	mov	r8,r10
80005ea6:	16 99       	mov	r9,r11
80005ea8:	fa ea 00 08 	ld.d	r10,sp[8]
80005eac:	e0 a0 12 c0 	rcall	8000842c <__avr32_f64_cmp_lt>
80005eb0:	c1 40       	breq	80005ed8 <_dtoa_r+0x630>
80005eb2:	33 09       	mov	r9,48
80005eb4:	0a 98       	mov	r8,r5
80005eb6:	11 7a       	ld.ub	r10,--r8
80005eb8:	f2 0a 18 00 	cp.b	r10,r9
80005ebc:	e0 81 02 d2 	brne	80006460 <_dtoa_r+0xbb8>
80005ec0:	10 95       	mov	r5,r8
80005ec2:	cf 9b       	rjmp	80005eb4 <_dtoa_r+0x60c>
80005ec4:	80 00       	ld.sh	r0,r0[0x0]
80005ec6:	98 dc       	ld.uh	r12,r12[0xa]
80005ec8:	30 08       	mov	r8,0
80005eca:	fc 19 40 24 	movh	r9,0x4024
80005ece:	e0 a0 0f a1 	rcall	80007e10 <__avr32_f64_mul>
80005ed2:	fa eb 00 08 	st.d	sp[8],r10
80005ed6:	cb cb       	rjmp	80005e4e <_dtoa_r+0x5a6>
80005ed8:	fa ea 00 3c 	ld.d	r10,sp[60]
80005edc:	fa eb 00 08 	st.d	sp[8],r10
80005ee0:	58 e6       	cp.w	r6,14
80005ee2:	5f ab       	srle	r11
80005ee4:	41 8a       	lddsp	r10,sp[0x60]
80005ee6:	30 08       	mov	r8,0
80005ee8:	f4 09 11 ff 	rsub	r9,r10,-1
80005eec:	f7 e9 03 f9 	and	r9,r11,r9>>0x1f
80005ef0:	f0 09 18 00 	cp.b	r9,r8
80005ef4:	e0 80 00 81 	breq	80005ff6 <_dtoa_r+0x74e>
80005ef8:	40 ea       	lddsp	r10,sp[0x38]
80005efa:	58 01       	cp.w	r1,0
80005efc:	5f a9       	srle	r9
80005efe:	f3 ea 03 f9 	and	r9,r9,r10>>0x1f
80005f02:	4c 9a       	lddpc	r10,80006024 <_dtoa_r+0x77c>
80005f04:	f4 06 02 34 	ld.d	r4,r10[r6<<0x3]
80005f08:	fa e5 00 10 	st.d	sp[16],r4
80005f0c:	f0 09 18 00 	cp.b	r9,r8
80005f10:	c1 40       	breq	80005f38 <_dtoa_r+0x690>
80005f12:	58 01       	cp.w	r1,0
80005f14:	e0 81 01 78 	brne	80006204 <_dtoa_r+0x95c>
80005f18:	30 08       	mov	r8,0
80005f1a:	fc 19 40 14 	movh	r9,0x4014
80005f1e:	08 9a       	mov	r10,r4
80005f20:	0a 9b       	mov	r11,r5
80005f22:	e0 a0 0f 77 	rcall	80007e10 <__avr32_f64_mul>
80005f26:	fa e8 00 08 	ld.d	r8,sp[8]
80005f2a:	e0 a0 12 4d 	rcall	800083c4 <__avr32_f64_cmp_ge>
80005f2e:	e0 81 01 6b 	brne	80006204 <_dtoa_r+0x95c>
80005f32:	02 92       	mov	r2,r1
80005f34:	e0 8f 01 73 	bral	8000621a <_dtoa_r+0x972>
80005f38:	40 85       	lddsp	r5,sp[0x20]
80005f3a:	30 14       	mov	r4,1
80005f3c:	fa e8 00 10 	ld.d	r8,sp[16]
80005f40:	fa ea 00 08 	ld.d	r10,sp[8]
80005f44:	e0 a0 12 a8 	rcall	80008494 <__avr32_f64_div>
80005f48:	e0 a0 11 a4 	rcall	80008290 <__avr32_f64_to_s32>
80005f4c:	18 92       	mov	r2,r12
80005f4e:	e0 a0 11 b8 	rcall	800082be <__avr32_s32_to_f64>
80005f52:	fa e8 00 10 	ld.d	r8,sp[16]
80005f56:	e0 a0 0f 5d 	rcall	80007e10 <__avr32_f64_mul>
80005f5a:	14 98       	mov	r8,r10
80005f5c:	16 99       	mov	r9,r11
80005f5e:	fa ea 00 08 	ld.d	r10,sp[8]
80005f62:	e0 a0 10 43 	rcall	80007fe8 <__avr32_f64_sub>
80005f66:	fa eb 00 08 	st.d	sp[8],r10
80005f6a:	e4 c8 ff d0 	sub	r8,r2,-48
80005f6e:	0a c8       	st.b	r5++,r8
80005f70:	fc 19 40 24 	movh	r9,0x4024
80005f74:	30 08       	mov	r8,0
80005f76:	02 34       	cp.w	r4,r1
80005f78:	c3 31       	brne	80005fde <_dtoa_r+0x736>
80005f7a:	fa e8 00 08 	ld.d	r8,sp[8]
80005f7e:	e0 a0 11 03 	rcall	80008184 <__avr32_f64_add>
80005f82:	16 91       	mov	r1,r11
80005f84:	14 90       	mov	r0,r10
80005f86:	14 98       	mov	r8,r10
80005f88:	02 99       	mov	r9,r1
80005f8a:	fa ea 00 10 	ld.d	r10,sp[16]
80005f8e:	e0 a0 12 4f 	rcall	8000842c <__avr32_f64_cmp_lt>
80005f92:	c1 a1       	brne	80005fc6 <_dtoa_r+0x71e>
80005f94:	fa e8 00 10 	ld.d	r8,sp[16]
80005f98:	00 9a       	mov	r10,r0
80005f9a:	02 9b       	mov	r11,r1
80005f9c:	e0 a0 12 01 	rcall	8000839e <__avr32_f64_cmp_eq>
80005fa0:	e0 80 02 5f 	breq	8000645e <_dtoa_r+0xbb6>
80005fa4:	e5 d2 c0 01 	bfextu	r2,r2,0x0,0x1
80005fa8:	c0 f1       	brne	80005fc6 <_dtoa_r+0x71e>
80005faa:	e0 8f 02 5a 	bral	8000645e <_dtoa_r+0xbb6>
80005fae:	40 8a       	lddsp	r10,sp[0x20]
80005fb0:	14 38       	cp.w	r8,r10
80005fb2:	c0 30       	breq	80005fb8 <_dtoa_r+0x710>
80005fb4:	10 95       	mov	r5,r8
80005fb6:	c0 98       	rjmp	80005fc8 <_dtoa_r+0x720>
80005fb8:	33 08       	mov	r8,48
80005fba:	40 89       	lddsp	r9,sp[0x20]
80005fbc:	2f f6       	sub	r6,-1
80005fbe:	b2 88       	st.b	r9[0x0],r8
80005fc0:	40 88       	lddsp	r8,sp[0x20]
80005fc2:	c0 88       	rjmp	80005fd2 <_dtoa_r+0x72a>
80005fc4:	40 66       	lddsp	r6,sp[0x18]
80005fc6:	33 99       	mov	r9,57
80005fc8:	0a 98       	mov	r8,r5
80005fca:	11 7a       	ld.ub	r10,--r8
80005fcc:	f2 0a 18 00 	cp.b	r10,r9
80005fd0:	ce f0       	breq	80005fae <_dtoa_r+0x706>
80005fd2:	50 66       	stdsp	sp[0x18],r6
80005fd4:	11 89       	ld.ub	r9,r8[0x0]
80005fd6:	2f f9       	sub	r9,-1
80005fd8:	b0 89       	st.b	r8[0x0],r9
80005fda:	e0 8f 02 43 	bral	80006460 <_dtoa_r+0xbb8>
80005fde:	e0 a0 0f 19 	rcall	80007e10 <__avr32_f64_mul>
80005fe2:	2f f4       	sub	r4,-1
80005fe4:	fa eb 00 08 	st.d	sp[8],r10
80005fe8:	30 08       	mov	r8,0
80005fea:	30 09       	mov	r9,0
80005fec:	e0 a0 11 d9 	rcall	8000839e <__avr32_f64_cmp_eq>
80005ff0:	ca 60       	breq	80005f3c <_dtoa_r+0x694>
80005ff2:	e0 8f 02 36 	bral	8000645e <_dtoa_r+0xbb6>
80005ff6:	40 d8       	lddsp	r8,sp[0x34]
80005ff8:	58 08       	cp.w	r8,0
80005ffa:	c0 51       	brne	80006004 <_dtoa_r+0x75c>
80005ffc:	04 98       	mov	r8,r2
80005ffe:	00 95       	mov	r5,r0
80006000:	40 d4       	lddsp	r4,sp[0x34]
80006002:	c3 88       	rjmp	80006072 <_dtoa_r+0x7ca>
80006004:	40 c5       	lddsp	r5,sp[0x30]
80006006:	58 15       	cp.w	r5,1
80006008:	e0 89 00 10 	brgt	80006028 <_dtoa_r+0x780>
8000600c:	41 74       	lddsp	r4,sp[0x5c]
8000600e:	58 04       	cp.w	r4,0
80006010:	c0 40       	breq	80006018 <_dtoa_r+0x770>
80006012:	f4 c9 fb cd 	sub	r9,r10,-1075
80006016:	c0 48       	rjmp	8000601e <_dtoa_r+0x776>
80006018:	41 99       	lddsp	r9,sp[0x64]
8000601a:	f2 09 11 36 	rsub	r9,r9,54
8000601e:	04 98       	mov	r8,r2
80006020:	00 95       	mov	r5,r0
80006022:	c1 d8       	rjmp	8000605c <_dtoa_r+0x7b4>
80006024:	80 00       	ld.sh	r0,r0[0x0]
80006026:	98 dc       	ld.uh	r12,r12[0xa]
80006028:	e2 c8 00 01 	sub	r8,r1,1
8000602c:	58 01       	cp.w	r1,0
8000602e:	e0 05 17 40 	movge	r5,r0
80006032:	e2 09 17 40 	movge	r9,r1
80006036:	e1 d1 e5 15 	sublt	r5,r0,r1
8000603a:	f9 b9 05 00 	movlt	r9,0
8000603e:	10 32       	cp.w	r2,r8
80006040:	e5 d8 e4 18 	subge	r8,r2,r8
80006044:	f1 d2 e5 18 	sublt	r8,r8,r2
80006048:	e5 d8 e5 02 	addlt	r2,r2,r8
8000604c:	fb fc 50 11 	ld.wlt	r12,sp[0x44]
80006050:	f9 d8 e5 0c 	addlt	r12,r12,r8
80006054:	fb fc 5a 11 	st.wlt	sp[0x44],r12
80006058:	f9 b8 05 00 	movlt	r8,0
8000605c:	40 4b       	lddsp	r11,sp[0x10]
8000605e:	12 0b       	add	r11,r9
80006060:	50 08       	stdsp	sp[0x0],r8
80006062:	50 4b       	stdsp	sp[0x10],r11
80006064:	12 00       	add	r0,r9
80006066:	30 1b       	mov	r11,1
80006068:	0e 9c       	mov	r12,r7
8000606a:	e0 a0 0a e5 	rcall	80007634 <__i2b>
8000606e:	40 08       	lddsp	r8,sp[0x0]
80006070:	18 94       	mov	r4,r12
80006072:	40 4a       	lddsp	r10,sp[0x10]
80006074:	58 05       	cp.w	r5,0
80006076:	5f 99       	srgt	r9
80006078:	58 0a       	cp.w	r10,0
8000607a:	5f 9a       	srgt	r10
8000607c:	f5 e9 00 09 	and	r9,r10,r9
80006080:	c0 80       	breq	80006090 <_dtoa_r+0x7e8>
80006082:	40 4c       	lddsp	r12,sp[0x10]
80006084:	f8 05 0d 49 	min	r9,r12,r5
80006088:	12 1c       	sub	r12,r9
8000608a:	12 10       	sub	r0,r9
8000608c:	50 4c       	stdsp	sp[0x10],r12
8000608e:	12 15       	sub	r5,r9
80006090:	58 02       	cp.w	r2,0
80006092:	e0 8a 00 27 	brle	800060e0 <_dtoa_r+0x838>
80006096:	40 db       	lddsp	r11,sp[0x34]
80006098:	58 0b       	cp.w	r11,0
8000609a:	c1 d0       	breq	800060d4 <_dtoa_r+0x82c>
8000609c:	58 08       	cp.w	r8,0
8000609e:	e0 8a 00 17 	brle	800060cc <_dtoa_r+0x824>
800060a2:	10 9a       	mov	r10,r8
800060a4:	50 08       	stdsp	sp[0x0],r8
800060a6:	08 9b       	mov	r11,r4
800060a8:	0e 9c       	mov	r12,r7
800060aa:	e0 a0 0b 0b 	rcall	800076c0 <__pow5mult>
800060ae:	06 9a       	mov	r10,r3
800060b0:	18 9b       	mov	r11,r12
800060b2:	18 94       	mov	r4,r12
800060b4:	0e 9c       	mov	r12,r7
800060b6:	e0 a0 0a 3f 	rcall	80007534 <__multiply>
800060ba:	18 99       	mov	r9,r12
800060bc:	06 9b       	mov	r11,r3
800060be:	50 19       	stdsp	sp[0x4],r9
800060c0:	0e 9c       	mov	r12,r7
800060c2:	e0 a0 08 e7 	rcall	80007290 <_Bfree>
800060c6:	40 19       	lddsp	r9,sp[0x4]
800060c8:	40 08       	lddsp	r8,sp[0x0]
800060ca:	12 93       	mov	r3,r9
800060cc:	e4 08 01 0a 	sub	r10,r2,r8
800060d0:	c0 80       	breq	800060e0 <_dtoa_r+0x838>
800060d2:	c0 28       	rjmp	800060d6 <_dtoa_r+0x82e>
800060d4:	04 9a       	mov	r10,r2
800060d6:	06 9b       	mov	r11,r3
800060d8:	0e 9c       	mov	r12,r7
800060da:	e0 a0 0a f3 	rcall	800076c0 <__pow5mult>
800060de:	18 93       	mov	r3,r12
800060e0:	30 1b       	mov	r11,1
800060e2:	0e 9c       	mov	r12,r7
800060e4:	e0 a0 0a a8 	rcall	80007634 <__i2b>
800060e8:	41 1a       	lddsp	r10,sp[0x44]
800060ea:	18 92       	mov	r2,r12
800060ec:	58 0a       	cp.w	r10,0
800060ee:	e0 8a 00 07 	brle	800060fc <_dtoa_r+0x854>
800060f2:	18 9b       	mov	r11,r12
800060f4:	0e 9c       	mov	r12,r7
800060f6:	e0 a0 0a e5 	rcall	800076c0 <__pow5mult>
800060fa:	18 92       	mov	r2,r12
800060fc:	40 c9       	lddsp	r9,sp[0x30]
800060fe:	58 19       	cp.w	r9,1
80006100:	e0 89 00 14 	brgt	80006128 <_dtoa_r+0x880>
80006104:	40 38       	lddsp	r8,sp[0xc]
80006106:	58 08       	cp.w	r8,0
80006108:	c1 01       	brne	80006128 <_dtoa_r+0x880>
8000610a:	40 29       	lddsp	r9,sp[0x8]
8000610c:	f1 d9 c0 14 	bfextu	r8,r9,0x0,0x14
80006110:	c0 c1       	brne	80006128 <_dtoa_r+0x880>
80006112:	12 98       	mov	r8,r9
80006114:	e6 18 7f f0 	andh	r8,0x7ff0,COH
80006118:	c0 80       	breq	80006128 <_dtoa_r+0x880>
8000611a:	40 4c       	lddsp	r12,sp[0x10]
8000611c:	30 1b       	mov	r11,1
8000611e:	2f fc       	sub	r12,-1
80006120:	2f f0       	sub	r0,-1
80006122:	50 4c       	stdsp	sp[0x10],r12
80006124:	50 6b       	stdsp	sp[0x18],r11
80006126:	c0 38       	rjmp	8000612c <_dtoa_r+0x884>
80006128:	30 0a       	mov	r10,0
8000612a:	50 6a       	stdsp	sp[0x18],r10
8000612c:	41 19       	lddsp	r9,sp[0x44]
8000612e:	58 09       	cp.w	r9,0
80006130:	c0 31       	brne	80006136 <_dtoa_r+0x88e>
80006132:	30 1c       	mov	r12,1
80006134:	c0 98       	rjmp	80006146 <_dtoa_r+0x89e>
80006136:	64 48       	ld.w	r8,r2[0x10]
80006138:	2f c8       	sub	r8,-4
8000613a:	e4 08 03 2c 	ld.w	r12,r2[r8<<0x2]
8000613e:	e0 a0 08 18 	rcall	8000716e <__hi0bits>
80006142:	f8 0c 11 20 	rsub	r12,r12,32
80006146:	40 4b       	lddsp	r11,sp[0x10]
80006148:	f8 0b 00 08 	add	r8,r12,r11
8000614c:	f1 d8 c0 05 	bfextu	r8,r8,0x0,0x5
80006150:	c0 c0       	breq	80006168 <_dtoa_r+0x8c0>
80006152:	f0 08 11 20 	rsub	r8,r8,32
80006156:	58 48       	cp.w	r8,4
80006158:	e0 8a 00 06 	brle	80006164 <_dtoa_r+0x8bc>
8000615c:	20 48       	sub	r8,4
8000615e:	10 0b       	add	r11,r8
80006160:	50 4b       	stdsp	sp[0x10],r11
80006162:	c0 78       	rjmp	80006170 <_dtoa_r+0x8c8>
80006164:	58 48       	cp.w	r8,4
80006166:	c0 70       	breq	80006174 <_dtoa_r+0x8cc>
80006168:	40 4a       	lddsp	r10,sp[0x10]
8000616a:	2e 48       	sub	r8,-28
8000616c:	10 0a       	add	r10,r8
8000616e:	50 4a       	stdsp	sp[0x10],r10
80006170:	10 00       	add	r0,r8
80006172:	10 05       	add	r5,r8
80006174:	58 00       	cp.w	r0,0
80006176:	e0 8a 00 08 	brle	80006186 <_dtoa_r+0x8de>
8000617a:	06 9b       	mov	r11,r3
8000617c:	00 9a       	mov	r10,r0
8000617e:	0e 9c       	mov	r12,r7
80006180:	e0 a0 09 96 	rcall	800074ac <__lshift>
80006184:	18 93       	mov	r3,r12
80006186:	40 49       	lddsp	r9,sp[0x10]
80006188:	58 09       	cp.w	r9,0
8000618a:	e0 8a 00 08 	brle	8000619a <_dtoa_r+0x8f2>
8000618e:	04 9b       	mov	r11,r2
80006190:	12 9a       	mov	r10,r9
80006192:	0e 9c       	mov	r12,r7
80006194:	e0 a0 09 8c 	rcall	800074ac <__lshift>
80006198:	18 92       	mov	r2,r12
8000619a:	41 48       	lddsp	r8,sp[0x50]
8000619c:	58 08       	cp.w	r8,0
8000619e:	c1 b0       	breq	800061d4 <_dtoa_r+0x92c>
800061a0:	04 9b       	mov	r11,r2
800061a2:	06 9c       	mov	r12,r3
800061a4:	e0 a0 08 5c 	rcall	8000725c <__mcmp>
800061a8:	c1 64       	brge	800061d4 <_dtoa_r+0x92c>
800061aa:	06 9b       	mov	r11,r3
800061ac:	30 09       	mov	r9,0
800061ae:	30 aa       	mov	r10,10
800061b0:	0e 9c       	mov	r12,r7
800061b2:	e0 a0 0a 49 	rcall	80007644 <__multadd>
800061b6:	20 16       	sub	r6,1
800061b8:	18 93       	mov	r3,r12
800061ba:	40 dc       	lddsp	r12,sp[0x34]
800061bc:	58 0c       	cp.w	r12,0
800061be:	c0 31       	brne	800061c4 <_dtoa_r+0x91c>
800061c0:	40 91       	lddsp	r1,sp[0x24]
800061c2:	c0 98       	rjmp	800061d4 <_dtoa_r+0x92c>
800061c4:	08 9b       	mov	r11,r4
800061c6:	40 91       	lddsp	r1,sp[0x24]
800061c8:	30 09       	mov	r9,0
800061ca:	30 aa       	mov	r10,10
800061cc:	0e 9c       	mov	r12,r7
800061ce:	e0 a0 0a 3b 	rcall	80007644 <__multadd>
800061d2:	18 94       	mov	r4,r12
800061d4:	58 01       	cp.w	r1,0
800061d6:	5f a9       	srle	r9
800061d8:	40 cb       	lddsp	r11,sp[0x30]
800061da:	58 2b       	cp.w	r11,2
800061dc:	5f 98       	srgt	r8
800061de:	f3 e8 00 08 	and	r8,r9,r8
800061e2:	c2 50       	breq	8000622c <_dtoa_r+0x984>
800061e4:	58 01       	cp.w	r1,0
800061e6:	c1 11       	brne	80006208 <_dtoa_r+0x960>
800061e8:	04 9b       	mov	r11,r2
800061ea:	02 99       	mov	r9,r1
800061ec:	30 5a       	mov	r10,5
800061ee:	0e 9c       	mov	r12,r7
800061f0:	e0 a0 0a 2a 	rcall	80007644 <__multadd>
800061f4:	18 92       	mov	r2,r12
800061f6:	18 9b       	mov	r11,r12
800061f8:	06 9c       	mov	r12,r3
800061fa:	e0 a0 08 31 	rcall	8000725c <__mcmp>
800061fe:	e0 89 00 0f 	brgt	8000621c <_dtoa_r+0x974>
80006202:	c0 38       	rjmp	80006208 <_dtoa_r+0x960>
80006204:	30 02       	mov	r2,0
80006206:	04 94       	mov	r4,r2
80006208:	40 ea       	lddsp	r10,sp[0x38]
8000620a:	30 09       	mov	r9,0
8000620c:	5c da       	com	r10
8000620e:	40 85       	lddsp	r5,sp[0x20]
80006210:	50 6a       	stdsp	sp[0x18],r10
80006212:	50 49       	stdsp	sp[0x10],r9
80006214:	c0 f9       	rjmp	80006432 <_dtoa_r+0xb8a>
80006216:	08 92       	mov	r2,r4
80006218:	40 66       	lddsp	r6,sp[0x18]
8000621a:	04 94       	mov	r4,r2
8000621c:	2f f6       	sub	r6,-1
8000621e:	50 66       	stdsp	sp[0x18],r6
80006220:	33 18       	mov	r8,49
80006222:	40 85       	lddsp	r5,sp[0x20]
80006224:	0a c8       	st.b	r5++,r8
80006226:	30 08       	mov	r8,0
80006228:	50 48       	stdsp	sp[0x10],r8
8000622a:	c0 49       	rjmp	80006432 <_dtoa_r+0xb8a>
8000622c:	40 dc       	lddsp	r12,sp[0x34]
8000622e:	58 0c       	cp.w	r12,0
80006230:	e0 80 00 b5 	breq	8000639a <_dtoa_r+0xaf2>
80006234:	58 05       	cp.w	r5,0
80006236:	e0 8a 00 08 	brle	80006246 <_dtoa_r+0x99e>
8000623a:	08 9b       	mov	r11,r4
8000623c:	0a 9a       	mov	r10,r5
8000623e:	0e 9c       	mov	r12,r7
80006240:	e0 a0 09 36 	rcall	800074ac <__lshift>
80006244:	18 94       	mov	r4,r12
80006246:	40 6b       	lddsp	r11,sp[0x18]
80006248:	58 0b       	cp.w	r11,0
8000624a:	c0 31       	brne	80006250 <_dtoa_r+0x9a8>
8000624c:	08 9c       	mov	r12,r4
8000624e:	c1 38       	rjmp	80006274 <_dtoa_r+0x9cc>
80006250:	68 1b       	ld.w	r11,r4[0x4]
80006252:	0e 9c       	mov	r12,r7
80006254:	e0 a0 08 38 	rcall	800072c4 <_Balloc>
80006258:	68 4a       	ld.w	r10,r4[0x10]
8000625a:	18 95       	mov	r5,r12
8000625c:	e8 cb ff f4 	sub	r11,r4,-12
80006260:	2f ea       	sub	r10,-2
80006262:	2f 4c       	sub	r12,-12
80006264:	a3 6a       	lsl	r10,0x2
80006266:	fe b0 e8 36 	rcall	800032d2 <memcpy>
8000626a:	0a 9b       	mov	r11,r5
8000626c:	30 1a       	mov	r10,1
8000626e:	0e 9c       	mov	r12,r7
80006270:	e0 a0 09 1e 	rcall	800074ac <__lshift>
80006274:	50 44       	stdsp	sp[0x10],r4
80006276:	40 3a       	lddsp	r10,sp[0xc]
80006278:	30 19       	mov	r9,1
8000627a:	f5 da c0 01 	bfextu	r10,r10,0x0,0x1
8000627e:	18 94       	mov	r4,r12
80006280:	50 da       	stdsp	sp[0x34],r10
80006282:	40 85       	lddsp	r5,sp[0x20]
80006284:	50 99       	stdsp	sp[0x24],r9
80006286:	50 26       	stdsp	sp[0x8],r6
80006288:	50 e1       	stdsp	sp[0x38],r1
8000628a:	04 9b       	mov	r11,r2
8000628c:	06 9c       	mov	r12,r3
8000628e:	fe b0 fa 7d 	rcall	80005788 <quorem>
80006292:	40 4b       	lddsp	r11,sp[0x10]
80006294:	f8 c0 ff d0 	sub	r0,r12,-48
80006298:	06 9c       	mov	r12,r3
8000629a:	e0 a0 07 e1 	rcall	8000725c <__mcmp>
8000629e:	08 9a       	mov	r10,r4
800062a0:	50 6c       	stdsp	sp[0x18],r12
800062a2:	04 9b       	mov	r11,r2
800062a4:	0e 9c       	mov	r12,r7
800062a6:	e0 a0 08 9b 	rcall	800073dc <__mdiff>
800062aa:	18 91       	mov	r1,r12
800062ac:	78 38       	ld.w	r8,r12[0xc]
800062ae:	58 08       	cp.w	r8,0
800062b0:	c0 30       	breq	800062b6 <_dtoa_r+0xa0e>
800062b2:	30 16       	mov	r6,1
800062b4:	c0 68       	rjmp	800062c0 <_dtoa_r+0xa18>
800062b6:	18 9b       	mov	r11,r12
800062b8:	06 9c       	mov	r12,r3
800062ba:	e0 a0 07 d1 	rcall	8000725c <__mcmp>
800062be:	18 96       	mov	r6,r12
800062c0:	0e 9c       	mov	r12,r7
800062c2:	02 9b       	mov	r11,r1
800062c4:	e0 a0 07 e6 	rcall	80007290 <_Bfree>
800062c8:	40 cc       	lddsp	r12,sp[0x30]
800062ca:	ed ec 10 08 	or	r8,r6,r12
800062ce:	c0 d1       	brne	800062e8 <_dtoa_r+0xa40>
800062d0:	40 db       	lddsp	r11,sp[0x34]
800062d2:	58 0b       	cp.w	r11,0
800062d4:	c0 a1       	brne	800062e8 <_dtoa_r+0xa40>
800062d6:	40 26       	lddsp	r6,sp[0x8]
800062d8:	e0 40 00 39 	cp.w	r0,57
800062dc:	c3 00       	breq	8000633c <_dtoa_r+0xa94>
800062de:	40 6a       	lddsp	r10,sp[0x18]
800062e0:	58 0a       	cp.w	r10,0
800062e2:	e0 89 00 24 	brgt	8000632a <_dtoa_r+0xa82>
800062e6:	c2 f8       	rjmp	80006344 <_dtoa_r+0xa9c>
800062e8:	40 69       	lddsp	r9,sp[0x18]
800062ea:	58 09       	cp.w	r9,0
800062ec:	c0 85       	brlt	800062fc <_dtoa_r+0xa54>
800062ee:	12 98       	mov	r8,r9
800062f0:	40 cc       	lddsp	r12,sp[0x30]
800062f2:	18 48       	or	r8,r12
800062f4:	c1 d1       	brne	8000632e <_dtoa_r+0xa86>
800062f6:	40 db       	lddsp	r11,sp[0x34]
800062f8:	58 0b       	cp.w	r11,0
800062fa:	c1 a1       	brne	8000632e <_dtoa_r+0xa86>
800062fc:	0c 99       	mov	r9,r6
800062fe:	40 26       	lddsp	r6,sp[0x8]
80006300:	58 09       	cp.w	r9,0
80006302:	e0 8a 00 21 	brle	80006344 <_dtoa_r+0xa9c>
80006306:	06 9b       	mov	r11,r3
80006308:	30 1a       	mov	r10,1
8000630a:	0e 9c       	mov	r12,r7
8000630c:	e0 a0 08 d0 	rcall	800074ac <__lshift>
80006310:	04 9b       	mov	r11,r2
80006312:	18 93       	mov	r3,r12
80006314:	e0 a0 07 a4 	rcall	8000725c <__mcmp>
80006318:	e0 89 00 06 	brgt	80006324 <_dtoa_r+0xa7c>
8000631c:	c1 41       	brne	80006344 <_dtoa_r+0xa9c>
8000631e:	ed b0 00 00 	bld	r0,0x0
80006322:	c1 11       	brne	80006344 <_dtoa_r+0xa9c>
80006324:	e0 40 00 39 	cp.w	r0,57
80006328:	c0 a0       	breq	8000633c <_dtoa_r+0xa94>
8000632a:	2f f0       	sub	r0,-1
8000632c:	c0 c8       	rjmp	80006344 <_dtoa_r+0xa9c>
8000632e:	58 06       	cp.w	r6,0
80006330:	e0 8a 00 0c 	brle	80006348 <_dtoa_r+0xaa0>
80006334:	40 26       	lddsp	r6,sp[0x8]
80006336:	e0 40 00 39 	cp.w	r0,57
8000633a:	c0 41       	brne	80006342 <_dtoa_r+0xa9a>
8000633c:	33 98       	mov	r8,57
8000633e:	0a c8       	st.b	r5++,r8
80006340:	c6 78       	rjmp	8000640e <_dtoa_r+0xb66>
80006342:	2f f0       	sub	r0,-1
80006344:	0a c0       	st.b	r5++,r0
80006346:	c7 58       	rjmp	80006430 <_dtoa_r+0xb88>
80006348:	0a c0       	st.b	r5++,r0
8000634a:	40 9a       	lddsp	r10,sp[0x24]
8000634c:	40 e9       	lddsp	r9,sp[0x38]
8000634e:	12 3a       	cp.w	r10,r9
80006350:	c4 30       	breq	800063d6 <_dtoa_r+0xb2e>
80006352:	06 9b       	mov	r11,r3
80006354:	30 09       	mov	r9,0
80006356:	30 aa       	mov	r10,10
80006358:	0e 9c       	mov	r12,r7
8000635a:	e0 a0 09 75 	rcall	80007644 <__multadd>
8000635e:	40 48       	lddsp	r8,sp[0x10]
80006360:	18 93       	mov	r3,r12
80006362:	08 38       	cp.w	r8,r4
80006364:	c0 91       	brne	80006376 <_dtoa_r+0xace>
80006366:	10 9b       	mov	r11,r8
80006368:	30 09       	mov	r9,0
8000636a:	30 aa       	mov	r10,10
8000636c:	0e 9c       	mov	r12,r7
8000636e:	e0 a0 09 6b 	rcall	80007644 <__multadd>
80006372:	50 4c       	stdsp	sp[0x10],r12
80006374:	c0 e8       	rjmp	80006390 <_dtoa_r+0xae8>
80006376:	40 4b       	lddsp	r11,sp[0x10]
80006378:	30 09       	mov	r9,0
8000637a:	30 aa       	mov	r10,10
8000637c:	0e 9c       	mov	r12,r7
8000637e:	e0 a0 09 63 	rcall	80007644 <__multadd>
80006382:	08 9b       	mov	r11,r4
80006384:	50 4c       	stdsp	sp[0x10],r12
80006386:	30 09       	mov	r9,0
80006388:	30 aa       	mov	r10,10
8000638a:	0e 9c       	mov	r12,r7
8000638c:	e0 a0 09 5c 	rcall	80007644 <__multadd>
80006390:	18 94       	mov	r4,r12
80006392:	40 9c       	lddsp	r12,sp[0x24]
80006394:	2f fc       	sub	r12,-1
80006396:	50 9c       	stdsp	sp[0x24],r12
80006398:	c7 9b       	rjmp	8000628a <_dtoa_r+0x9e2>
8000639a:	30 18       	mov	r8,1
8000639c:	06 90       	mov	r0,r3
8000639e:	40 85       	lddsp	r5,sp[0x20]
800063a0:	08 93       	mov	r3,r4
800063a2:	0c 94       	mov	r4,r6
800063a4:	10 96       	mov	r6,r8
800063a6:	04 9b       	mov	r11,r2
800063a8:	00 9c       	mov	r12,r0
800063aa:	fe b0 f9 ef 	rcall	80005788 <quorem>
800063ae:	2d 0c       	sub	r12,-48
800063b0:	0a cc       	st.b	r5++,r12
800063b2:	02 36       	cp.w	r6,r1
800063b4:	c0 a4       	brge	800063c8 <_dtoa_r+0xb20>
800063b6:	00 9b       	mov	r11,r0
800063b8:	30 09       	mov	r9,0
800063ba:	30 aa       	mov	r10,10
800063bc:	0e 9c       	mov	r12,r7
800063be:	2f f6       	sub	r6,-1
800063c0:	e0 a0 09 42 	rcall	80007644 <__multadd>
800063c4:	18 90       	mov	r0,r12
800063c6:	cf 0b       	rjmp	800063a6 <_dtoa_r+0xafe>
800063c8:	08 96       	mov	r6,r4
800063ca:	30 0b       	mov	r11,0
800063cc:	06 94       	mov	r4,r3
800063ce:	50 4b       	stdsp	sp[0x10],r11
800063d0:	00 93       	mov	r3,r0
800063d2:	18 90       	mov	r0,r12
800063d4:	c0 28       	rjmp	800063d8 <_dtoa_r+0xb30>
800063d6:	40 26       	lddsp	r6,sp[0x8]
800063d8:	06 9b       	mov	r11,r3
800063da:	30 1a       	mov	r10,1
800063dc:	0e 9c       	mov	r12,r7
800063de:	e0 a0 08 67 	rcall	800074ac <__lshift>
800063e2:	04 9b       	mov	r11,r2
800063e4:	18 93       	mov	r3,r12
800063e6:	e0 a0 07 3b 	rcall	8000725c <__mcmp>
800063ea:	e0 89 00 12 	brgt	8000640e <_dtoa_r+0xb66>
800063ee:	c1 b1       	brne	80006424 <_dtoa_r+0xb7c>
800063f0:	e1 d0 c0 01 	bfextu	r0,r0,0x0,0x1
800063f4:	c0 d1       	brne	8000640e <_dtoa_r+0xb66>
800063f6:	c1 78       	rjmp	80006424 <_dtoa_r+0xb7c>
800063f8:	40 89       	lddsp	r9,sp[0x20]
800063fa:	12 38       	cp.w	r8,r9
800063fc:	c0 30       	breq	80006402 <_dtoa_r+0xb5a>
800063fe:	10 95       	mov	r5,r8
80006400:	c0 88       	rjmp	80006410 <_dtoa_r+0xb68>
80006402:	2f f6       	sub	r6,-1
80006404:	50 66       	stdsp	sp[0x18],r6
80006406:	33 18       	mov	r8,49
80006408:	40 8c       	lddsp	r12,sp[0x20]
8000640a:	b8 88       	st.b	r12[0x0],r8
8000640c:	c1 38       	rjmp	80006432 <_dtoa_r+0xb8a>
8000640e:	33 9a       	mov	r10,57
80006410:	0a 98       	mov	r8,r5
80006412:	11 79       	ld.ub	r9,--r8
80006414:	f4 09 18 00 	cp.b	r9,r10
80006418:	cf 00       	breq	800063f8 <_dtoa_r+0xb50>
8000641a:	2f f9       	sub	r9,-1
8000641c:	b0 89       	st.b	r8[0x0],r9
8000641e:	c0 98       	rjmp	80006430 <_dtoa_r+0xb88>
80006420:	10 95       	mov	r5,r8
80006422:	c0 28       	rjmp	80006426 <_dtoa_r+0xb7e>
80006424:	33 09       	mov	r9,48
80006426:	0a 98       	mov	r8,r5
80006428:	11 7a       	ld.ub	r10,--r8
8000642a:	f2 0a 18 00 	cp.b	r10,r9
8000642e:	cf 90       	breq	80006420 <_dtoa_r+0xb78>
80006430:	50 66       	stdsp	sp[0x18],r6
80006432:	04 9b       	mov	r11,r2
80006434:	0e 9c       	mov	r12,r7
80006436:	e0 a0 07 2d 	rcall	80007290 <_Bfree>
8000643a:	58 04       	cp.w	r4,0
8000643c:	c1 20       	breq	80006460 <_dtoa_r+0xbb8>
8000643e:	40 4b       	lddsp	r11,sp[0x10]
80006440:	08 3b       	cp.w	r11,r4
80006442:	5f 19       	srne	r9
80006444:	58 0b       	cp.w	r11,0
80006446:	5f 18       	srne	r8
80006448:	f3 e8 00 08 	and	r8,r9,r8
8000644c:	c0 40       	breq	80006454 <_dtoa_r+0xbac>
8000644e:	0e 9c       	mov	r12,r7
80006450:	e0 a0 07 20 	rcall	80007290 <_Bfree>
80006454:	08 9b       	mov	r11,r4
80006456:	0e 9c       	mov	r12,r7
80006458:	e0 a0 07 1c 	rcall	80007290 <_Bfree>
8000645c:	c0 28       	rjmp	80006460 <_dtoa_r+0xbb8>
8000645e:	50 66       	stdsp	sp[0x18],r6
80006460:	0e 9c       	mov	r12,r7
80006462:	06 9b       	mov	r11,r3
80006464:	e0 a0 07 16 	rcall	80007290 <_Bfree>
80006468:	30 08       	mov	r8,0
8000646a:	aa 88       	st.b	r5[0x0],r8
8000646c:	40 68       	lddsp	r8,sp[0x18]
8000646e:	41 5a       	lddsp	r10,sp[0x54]
80006470:	2f f8       	sub	r8,-1
80006472:	41 29       	lddsp	r9,sp[0x48]
80006474:	95 08       	st.w	r10[0x0],r8
80006476:	40 8c       	lddsp	r12,sp[0x20]
80006478:	58 09       	cp.w	r9,0
8000647a:	fb f8 10 12 	ld.wne	r8,sp[0x48]
8000647e:	f1 f5 1a 00 	st.wne	r8[0x0],r5
80006482:	2e 6d       	sub	sp,-104
80006484:	d8 32       	popm	r0-r7,pc
80006486:	d7 03       	nop

80006488 <_fflush_r>:
80006488:	d4 21       	pushm	r4-r7,lr
8000648a:	16 97       	mov	r7,r11
8000648c:	18 96       	mov	r6,r12
8000648e:	76 48       	ld.w	r8,r11[0x10]
80006490:	58 08       	cp.w	r8,0
80006492:	c7 c0       	breq	8000658a <_fflush_r+0x102>
80006494:	58 0c       	cp.w	r12,0
80006496:	c0 50       	breq	800064a0 <_fflush_r+0x18>
80006498:	78 68       	ld.w	r8,r12[0x18]
8000649a:	58 08       	cp.w	r8,0
8000649c:	c0 21       	brne	800064a0 <_fflush_r+0x18>
8000649e:	cd 1c       	rcall	80006640 <__sinit>
800064a0:	4b b8       	lddpc	r8,8000658c <_fflush_r+0x104>
800064a2:	10 37       	cp.w	r7,r8
800064a4:	c0 31       	brne	800064aa <_fflush_r+0x22>
800064a6:	6c 07       	ld.w	r7,r6[0x0]
800064a8:	c0 a8       	rjmp	800064bc <_fflush_r+0x34>
800064aa:	4b a8       	lddpc	r8,80006590 <_fflush_r+0x108>
800064ac:	10 37       	cp.w	r7,r8
800064ae:	c0 31       	brne	800064b4 <_fflush_r+0x2c>
800064b0:	6c 17       	ld.w	r7,r6[0x4]
800064b2:	c0 58       	rjmp	800064bc <_fflush_r+0x34>
800064b4:	4b 88       	lddpc	r8,80006594 <_fflush_r+0x10c>
800064b6:	10 37       	cp.w	r7,r8
800064b8:	ed f7 00 02 	ld.weq	r7,r6[0x8]
800064bc:	8e 6a       	ld.sh	r10,r7[0xc]
800064be:	14 98       	mov	r8,r10
800064c0:	ed ba 00 03 	bld	r10,0x3
800064c4:	c4 20       	breq	80006548 <_fflush_r+0xc0>
800064c6:	ab ba       	sbr	r10,0xb
800064c8:	ae 6a       	st.h	r7[0xc],r10
800064ca:	6e 18       	ld.w	r8,r7[0x4]
800064cc:	58 08       	cp.w	r8,0
800064ce:	e0 89 00 06 	brgt	800064da <_fflush_r+0x52>
800064d2:	6f 08       	ld.w	r8,r7[0x40]
800064d4:	58 08       	cp.w	r8,0
800064d6:	e0 8a 00 5a 	brle	8000658a <_fflush_r+0x102>
800064da:	6e b8       	ld.w	r8,r7[0x2c]
800064dc:	58 08       	cp.w	r8,0
800064de:	c5 60       	breq	8000658a <_fflush_r+0x102>
800064e0:	e2 1a 10 00 	andl	r10,0x1000,COH
800064e4:	c0 30       	breq	800064ea <_fflush_r+0x62>
800064e6:	6f 55       	ld.w	r5,r7[0x54]
800064e8:	c0 f8       	rjmp	80006506 <_fflush_r+0x7e>
800064ea:	30 19       	mov	r9,1
800064ec:	6e 8b       	ld.w	r11,r7[0x20]
800064ee:	0c 9c       	mov	r12,r6
800064f0:	5d 18       	icall	r8
800064f2:	18 95       	mov	r5,r12
800064f4:	5b fc       	cp.w	r12,-1
800064f6:	c0 81       	brne	80006506 <_fflush_r+0x7e>
800064f8:	6c 38       	ld.w	r8,r6[0xc]
800064fa:	59 d8       	cp.w	r8,29
800064fc:	c4 70       	breq	8000658a <_fflush_r+0x102>
800064fe:	8e 68       	ld.sh	r8,r7[0xc]
80006500:	a7 a8       	sbr	r8,0x6
80006502:	ae 68       	st.h	r7[0xc],r8
80006504:	d8 22       	popm	r4-r7,pc
80006506:	8e 68       	ld.sh	r8,r7[0xc]
80006508:	ed b8 00 02 	bld	r8,0x2
8000650c:	c0 91       	brne	8000651e <_fflush_r+0x96>
8000650e:	6e 18       	ld.w	r8,r7[0x4]
80006510:	10 15       	sub	r5,r8
80006512:	6e d8       	ld.w	r8,r7[0x34]
80006514:	58 08       	cp.w	r8,0
80006516:	ef f8 10 10 	ld.wne	r8,r7[0x40]
8000651a:	eb d8 e1 15 	subne	r5,r5,r8
8000651e:	6e b8       	ld.w	r8,r7[0x2c]
80006520:	0c 9c       	mov	r12,r6
80006522:	30 09       	mov	r9,0
80006524:	0a 9a       	mov	r10,r5
80006526:	6e 8b       	ld.w	r11,r7[0x20]
80006528:	5d 18       	icall	r8
8000652a:	8e 68       	ld.sh	r8,r7[0xc]
8000652c:	0a 3c       	cp.w	r12,r5
8000652e:	c2 61       	brne	8000657a <_fflush_r+0xf2>
80006530:	ab d8       	cbr	r8,0xb
80006532:	30 0c       	mov	r12,0
80006534:	6e 49       	ld.w	r9,r7[0x10]
80006536:	ae 68       	st.h	r7[0xc],r8
80006538:	8f 1c       	st.w	r7[0x4],r12
8000653a:	8f 09       	st.w	r7[0x0],r9
8000653c:	ed b8 00 0c 	bld	r8,0xc
80006540:	c2 51       	brne	8000658a <_fflush_r+0x102>
80006542:	ef 45 00 54 	st.w	r7[84],r5
80006546:	d8 22       	popm	r4-r7,pc
80006548:	6e 45       	ld.w	r5,r7[0x10]
8000654a:	58 05       	cp.w	r5,0
8000654c:	c1 f0       	breq	8000658a <_fflush_r+0x102>
8000654e:	6e 04       	ld.w	r4,r7[0x0]
80006550:	f5 da c0 02 	bfextu	r10,r10,0x0,0x2
80006554:	8f 05       	st.w	r7[0x0],r5
80006556:	f9 b8 01 00 	movne	r8,0
8000655a:	ef f8 00 05 	ld.weq	r8,r7[0x14]
8000655e:	0a 14       	sub	r4,r5
80006560:	8f 28       	st.w	r7[0x8],r8
80006562:	c1 18       	rjmp	80006584 <_fflush_r+0xfc>
80006564:	08 99       	mov	r9,r4
80006566:	0a 9a       	mov	r10,r5
80006568:	6e a8       	ld.w	r8,r7[0x28]
8000656a:	6e 8b       	ld.w	r11,r7[0x20]
8000656c:	0c 9c       	mov	r12,r6
8000656e:	5d 18       	icall	r8
80006570:	18 14       	sub	r4,r12
80006572:	58 0c       	cp.w	r12,0
80006574:	e0 89 00 07 	brgt	80006582 <_fflush_r+0xfa>
80006578:	8e 68       	ld.sh	r8,r7[0xc]
8000657a:	a7 a8       	sbr	r8,0x6
8000657c:	3f fc       	mov	r12,-1
8000657e:	ae 68       	st.h	r7[0xc],r8
80006580:	d8 22       	popm	r4-r7,pc
80006582:	18 05       	add	r5,r12
80006584:	58 04       	cp.w	r4,0
80006586:	fe 99 ff ef 	brgt	80006564 <_fflush_r+0xdc>
8000658a:	d8 2a       	popm	r4-r7,pc,r12=0
8000658c:	80 00       	ld.sh	r0,r0[0x0]
8000658e:	98 28       	ld.sh	r8,r12[0x4]
80006590:	80 00       	ld.sh	r0,r0[0x0]
80006592:	98 48       	ld.sh	r8,r12[0x8]
80006594:	80 00       	ld.sh	r0,r0[0x0]
80006596:	98 68       	ld.sh	r8,r12[0xc]

80006598 <__sfp_lock_acquire>:
80006598:	5e fc       	retal	r12

8000659a <__sfp_lock_release>:
8000659a:	5e fc       	retal	r12

8000659c <_cleanup_r>:
8000659c:	d4 01       	pushm	lr
8000659e:	fe cb e8 12 	sub	r11,pc,-6126
800065a2:	e0 a0 03 05 	rcall	80006bac <_fwalk>
800065a6:	d8 02       	popm	pc

800065a8 <__sfmoreglue>:
800065a8:	d4 21       	pushm	r4-r7,lr
800065aa:	16 95       	mov	r5,r11
800065ac:	f6 06 10 5c 	mul	r6,r11,92
800065b0:	ec cb ff f4 	sub	r11,r6,-12
800065b4:	e0 a0 03 90 	rcall	80006cd4 <_malloc_r>
800065b8:	18 97       	mov	r7,r12
800065ba:	c0 90       	breq	800065cc <__sfmoreglue+0x24>
800065bc:	99 15       	st.w	r12[0x4],r5
800065be:	30 0b       	mov	r11,0
800065c0:	2f 4c       	sub	r12,-12
800065c2:	0c 9a       	mov	r10,r6
800065c4:	8f 2c       	st.w	r7[0x8],r12
800065c6:	8f 0b       	st.w	r7[0x0],r11
800065c8:	e0 a0 05 ca 	rcall	8000715c <memset>
800065cc:	0e 9c       	mov	r12,r7
800065ce:	d8 22       	popm	r4-r7,pc

800065d0 <__sfp>:
800065d0:	d4 21       	pushm	r4-r7,lr
800065d2:	49 b8       	lddpc	r8,8000663c <__sfp+0x6c>
800065d4:	18 96       	mov	r6,r12
800065d6:	70 07       	ld.w	r7,r8[0x0]
800065d8:	6e 68       	ld.w	r8,r7[0x18]
800065da:	58 08       	cp.w	r8,0
800065dc:	c0 31       	brne	800065e2 <__sfp+0x12>
800065de:	0e 9c       	mov	r12,r7
800065e0:	c3 0c       	rcall	80006640 <__sinit>
800065e2:	ee c7 ff 28 	sub	r7,r7,-216
800065e6:	30 05       	mov	r5,0
800065e8:	6e 2c       	ld.w	r12,r7[0x8]
800065ea:	6e 18       	ld.w	r8,r7[0x4]
800065ec:	c0 68       	rjmp	800065f8 <__sfp+0x28>
800065ee:	98 69       	ld.sh	r9,r12[0xc]
800065f0:	ea 09 19 00 	cp.h	r9,r5
800065f4:	c1 10       	breq	80006616 <__sfp+0x46>
800065f6:	2a 4c       	sub	r12,-92
800065f8:	20 18       	sub	r8,1
800065fa:	cf a7       	brpl	800065ee <__sfp+0x1e>
800065fc:	6e 08       	ld.w	r8,r7[0x0]
800065fe:	58 08       	cp.w	r8,0
80006600:	c0 61       	brne	8000660c <__sfp+0x3c>
80006602:	30 4b       	mov	r11,4
80006604:	0c 9c       	mov	r12,r6
80006606:	cd 1f       	rcall	800065a8 <__sfmoreglue>
80006608:	8f 0c       	st.w	r7[0x0],r12
8000660a:	c0 30       	breq	80006610 <__sfp+0x40>
8000660c:	6e 07       	ld.w	r7,r7[0x0]
8000660e:	ce db       	rjmp	800065e8 <__sfp+0x18>
80006610:	30 c8       	mov	r8,12
80006612:	8d 38       	st.w	r6[0xc],r8
80006614:	d8 22       	popm	r4-r7,pc
80006616:	30 08       	mov	r8,0
80006618:	f9 48 00 4c 	st.w	r12[76],r8
8000661c:	99 08       	st.w	r12[0x0],r8
8000661e:	99 28       	st.w	r12[0x8],r8
80006620:	99 18       	st.w	r12[0x4],r8
80006622:	99 48       	st.w	r12[0x10],r8
80006624:	99 58       	st.w	r12[0x14],r8
80006626:	99 68       	st.w	r12[0x18],r8
80006628:	99 d8       	st.w	r12[0x34],r8
8000662a:	99 e8       	st.w	r12[0x38],r8
8000662c:	f9 48 00 48 	st.w	r12[72],r8
80006630:	3f f8       	mov	r8,-1
80006632:	b8 78       	st.h	r12[0xe],r8
80006634:	30 18       	mov	r8,1
80006636:	b8 68       	st.h	r12[0xc],r8
80006638:	d8 22       	popm	r4-r7,pc
8000663a:	d7 03       	nop
8000663c:	80 00       	ld.sh	r0,r0[0x0]
8000663e:	98 8c       	ld.uh	r12,r12[0x0]

80006640 <__sinit>:
80006640:	d4 21       	pushm	r4-r7,lr
80006642:	18 96       	mov	r6,r12
80006644:	78 67       	ld.w	r7,r12[0x18]
80006646:	58 07       	cp.w	r7,0
80006648:	c4 91       	brne	800066da <__sinit+0x9a>
8000664a:	fe c8 00 ae 	sub	r8,pc,174
8000664e:	30 15       	mov	r5,1
80006650:	99 a8       	st.w	r12[0x28],r8
80006652:	f9 47 00 d8 	st.w	r12[216],r7
80006656:	f9 47 00 dc 	st.w	r12[220],r7
8000665a:	f9 47 00 e0 	st.w	r12[224],r7
8000665e:	99 65       	st.w	r12[0x18],r5
80006660:	cb 8f       	rcall	800065d0 <__sfp>
80006662:	8d 0c       	st.w	r6[0x0],r12
80006664:	0c 9c       	mov	r12,r6
80006666:	cb 5f       	rcall	800065d0 <__sfp>
80006668:	8d 1c       	st.w	r6[0x4],r12
8000666a:	0c 9c       	mov	r12,r6
8000666c:	cb 2f       	rcall	800065d0 <__sfp>
8000666e:	6c 09       	ld.w	r9,r6[0x0]
80006670:	30 48       	mov	r8,4
80006672:	93 07       	st.w	r9[0x0],r7
80006674:	b2 68       	st.h	r9[0xc],r8
80006676:	93 17       	st.w	r9[0x4],r7
80006678:	93 27       	st.w	r9[0x8],r7
8000667a:	6c 18       	ld.w	r8,r6[0x4]
8000667c:	b2 77       	st.h	r9[0xe],r7
8000667e:	93 47       	st.w	r9[0x10],r7
80006680:	93 57       	st.w	r9[0x14],r7
80006682:	93 67       	st.w	r9[0x18],r7
80006684:	93 89       	st.w	r9[0x20],r9
80006686:	91 07       	st.w	r8[0x0],r7
80006688:	91 17       	st.w	r8[0x4],r7
8000668a:	91 27       	st.w	r8[0x8],r7
8000668c:	fe ce eb b4 	sub	lr,pc,-5196
80006690:	fe cb eb e4 	sub	r11,pc,-5148
80006694:	93 9e       	st.w	r9[0x24],lr
80006696:	93 ab       	st.w	r9[0x28],r11
80006698:	fe ca ec 14 	sub	r10,pc,-5100
8000669c:	fe c4 ec 20 	sub	r4,pc,-5088
800066a0:	93 ba       	st.w	r9[0x2c],r10
800066a2:	93 c4       	st.w	r9[0x30],r4
800066a4:	30 99       	mov	r9,9
800066a6:	b0 69       	st.h	r8[0xc],r9
800066a8:	b0 75       	st.h	r8[0xe],r5
800066aa:	91 c4       	st.w	r8[0x30],r4
800066ac:	91 47       	st.w	r8[0x10],r7
800066ae:	91 57       	st.w	r8[0x14],r7
800066b0:	91 67       	st.w	r8[0x18],r7
800066b2:	91 88       	st.w	r8[0x20],r8
800066b4:	91 9e       	st.w	r8[0x24],lr
800066b6:	91 ab       	st.w	r8[0x28],r11
800066b8:	91 ba       	st.w	r8[0x2c],r10
800066ba:	8d 2c       	st.w	r6[0x8],r12
800066bc:	31 28       	mov	r8,18
800066be:	99 07       	st.w	r12[0x0],r7
800066c0:	b8 68       	st.h	r12[0xc],r8
800066c2:	99 17       	st.w	r12[0x4],r7
800066c4:	99 27       	st.w	r12[0x8],r7
800066c6:	30 28       	mov	r8,2
800066c8:	b8 78       	st.h	r12[0xe],r8
800066ca:	99 c4       	st.w	r12[0x30],r4
800066cc:	99 67       	st.w	r12[0x18],r7
800066ce:	99 9e       	st.w	r12[0x24],lr
800066d0:	99 ab       	st.w	r12[0x28],r11
800066d2:	99 ba       	st.w	r12[0x2c],r10
800066d4:	99 47       	st.w	r12[0x10],r7
800066d6:	99 57       	st.w	r12[0x14],r7
800066d8:	99 8c       	st.w	r12[0x20],r12
800066da:	d8 22       	popm	r4-r7,pc

800066dc <_malloc_trim_r>:
800066dc:	d4 21       	pushm	r4-r7,lr
800066de:	16 95       	mov	r5,r11
800066e0:	18 97       	mov	r7,r12
800066e2:	e0 a0 05 44 	rcall	8000716a <__malloc_lock>
800066e6:	4a 24       	lddpc	r4,8000676c <_malloc_trim_r+0x90>
800066e8:	68 28       	ld.w	r8,r4[0x8]
800066ea:	70 16       	ld.w	r6,r8[0x4]
800066ec:	e0 16 ff fc 	andl	r6,0xfffc
800066f0:	ec c8 ff 91 	sub	r8,r6,-111
800066f4:	f0 05 01 05 	sub	r5,r8,r5
800066f8:	e0 15 ff 80 	andl	r5,0xff80
800066fc:	ea c5 00 80 	sub	r5,r5,128
80006700:	e0 45 00 7f 	cp.w	r5,127
80006704:	e0 8a 00 23 	brle	8000674a <_malloc_trim_r+0x6e>
80006708:	30 0b       	mov	r11,0
8000670a:	0e 9c       	mov	r12,r7
8000670c:	e0 a0 09 a8 	rcall	80007a5c <_sbrk_r>
80006710:	68 28       	ld.w	r8,r4[0x8]
80006712:	0c 08       	add	r8,r6
80006714:	10 3c       	cp.w	r12,r8
80006716:	c1 a1       	brne	8000674a <_malloc_trim_r+0x6e>
80006718:	ea 0b 11 00 	rsub	r11,r5,0
8000671c:	0e 9c       	mov	r12,r7
8000671e:	e0 a0 09 9f 	rcall	80007a5c <_sbrk_r>
80006722:	5b fc       	cp.w	r12,-1
80006724:	c1 71       	brne	80006752 <_malloc_trim_r+0x76>
80006726:	30 0b       	mov	r11,0
80006728:	0e 9c       	mov	r12,r7
8000672a:	e0 a0 09 99 	rcall	80007a5c <_sbrk_r>
8000672e:	68 28       	ld.w	r8,r4[0x8]
80006730:	f8 08 01 09 	sub	r9,r12,r8
80006734:	58 f9       	cp.w	r9,15
80006736:	e0 8a 00 0a 	brle	8000674a <_malloc_trim_r+0x6e>
8000673a:	a1 a9       	sbr	r9,0x0
8000673c:	91 19       	st.w	r8[0x4],r9
8000673e:	48 d8       	lddpc	r8,80006770 <_malloc_trim_r+0x94>
80006740:	70 09       	ld.w	r9,r8[0x0]
80006742:	48 d8       	lddpc	r8,80006774 <_malloc_trim_r+0x98>
80006744:	f8 09 01 09 	sub	r9,r12,r9
80006748:	91 09       	st.w	r8[0x0],r9
8000674a:	0e 9c       	mov	r12,r7
8000674c:	e0 a0 05 10 	rcall	8000716c <__malloc_unlock>
80006750:	d8 2a       	popm	r4-r7,pc,r12=0
80006752:	68 28       	ld.w	r8,r4[0x8]
80006754:	0a 16       	sub	r6,r5
80006756:	a1 a6       	sbr	r6,0x0
80006758:	91 16       	st.w	r8[0x4],r6
8000675a:	48 78       	lddpc	r8,80006774 <_malloc_trim_r+0x98>
8000675c:	70 09       	ld.w	r9,r8[0x0]
8000675e:	0a 19       	sub	r9,r5
80006760:	0e 9c       	mov	r12,r7
80006762:	91 09       	st.w	r8[0x0],r9
80006764:	e0 a0 05 04 	rcall	8000716c <__malloc_unlock>
80006768:	da 2a       	popm	r4-r7,pc,r12=1
8000676a:	d7 03       	nop
8000676c:	00 00       	add	r0,r0
8000676e:	01 04       	ld.w	r4,r0++
80006770:	00 00       	add	r0,r0
80006772:	05 10       	ld.sh	r0,r2++
80006774:	00 00       	add	r0,r0
80006776:	06 18       	sub	r8,r3

80006778 <_free_r>:
80006778:	d4 21       	pushm	r4-r7,lr
8000677a:	16 96       	mov	r6,r11
8000677c:	18 97       	mov	r7,r12
8000677e:	58 0b       	cp.w	r11,0
80006780:	e0 80 00 c2 	breq	80006904 <_free_r+0x18c>
80006784:	e0 a0 04 f3 	rcall	8000716a <__malloc_lock>
80006788:	20 86       	sub	r6,8
8000678a:	4c ca       	lddpc	r10,800068b8 <_free_r+0x140>
8000678c:	6c 18       	ld.w	r8,r6[0x4]
8000678e:	74 2e       	ld.w	lr,r10[0x8]
80006790:	f9 d8 c0 01 	bfextu	r12,r8,0x0,0x1
80006794:	a1 c8       	cbr	r8,0x0
80006796:	ec 08 00 09 	add	r9,r6,r8
8000679a:	72 1b       	ld.w	r11,r9[0x4]
8000679c:	e0 1b ff fc 	andl	r11,0xfffc
800067a0:	1c 39       	cp.w	r9,lr
800067a2:	c1 c1       	brne	800067da <_free_r+0x62>
800067a4:	f6 08 00 08 	add	r8,r11,r8
800067a8:	58 0c       	cp.w	r12,0
800067aa:	c0 81       	brne	800067ba <_free_r+0x42>
800067ac:	6c 09       	ld.w	r9,r6[0x0]
800067ae:	12 16       	sub	r6,r9
800067b0:	12 08       	add	r8,r9
800067b2:	6c 3b       	ld.w	r11,r6[0xc]
800067b4:	6c 29       	ld.w	r9,r6[0x8]
800067b6:	97 29       	st.w	r11[0x8],r9
800067b8:	93 3b       	st.w	r9[0xc],r11
800067ba:	10 99       	mov	r9,r8
800067bc:	95 26       	st.w	r10[0x8],r6
800067be:	a1 a9       	sbr	r9,0x0
800067c0:	8d 19       	st.w	r6[0x4],r9
800067c2:	4b f9       	lddpc	r9,800068bc <_free_r+0x144>
800067c4:	72 09       	ld.w	r9,r9[0x0]
800067c6:	12 38       	cp.w	r8,r9
800067c8:	c0 53       	brcs	800067d2 <_free_r+0x5a>
800067ca:	4b e8       	lddpc	r8,800068c0 <_free_r+0x148>
800067cc:	0e 9c       	mov	r12,r7
800067ce:	70 0b       	ld.w	r11,r8[0x0]
800067d0:	c8 6f       	rcall	800066dc <_malloc_trim_r>
800067d2:	0e 9c       	mov	r12,r7
800067d4:	e0 a0 04 cc 	rcall	8000716c <__malloc_unlock>
800067d8:	d8 22       	popm	r4-r7,pc
800067da:	93 1b       	st.w	r9[0x4],r11
800067dc:	58 0c       	cp.w	r12,0
800067de:	c0 30       	breq	800067e4 <_free_r+0x6c>
800067e0:	30 0c       	mov	r12,0
800067e2:	c1 08       	rjmp	80006802 <_free_r+0x8a>
800067e4:	6c 0e       	ld.w	lr,r6[0x0]
800067e6:	f4 c5 ff f8 	sub	r5,r10,-8
800067ea:	1c 16       	sub	r6,lr
800067ec:	1c 08       	add	r8,lr
800067ee:	6c 2e       	ld.w	lr,r6[0x8]
800067f0:	0a 3e       	cp.w	lr,r5
800067f2:	f9 bc 00 01 	moveq	r12,1
800067f6:	ed f5 10 03 	ld.wne	r5,r6[0xc]
800067fa:	eb fe 1a 02 	st.wne	r5[0x8],lr
800067fe:	fd f5 1a 03 	st.wne	lr[0xc],r5
80006802:	f2 0b 00 0e 	add	lr,r9,r11
80006806:	7c 1e       	ld.w	lr,lr[0x4]
80006808:	ed be 00 00 	bld	lr,0x0
8000680c:	c1 30       	breq	80006832 <_free_r+0xba>
8000680e:	16 08       	add	r8,r11
80006810:	58 0c       	cp.w	r12,0
80006812:	c0 c1       	brne	8000682a <_free_r+0xb2>
80006814:	4a 9e       	lddpc	lr,800068b8 <_free_r+0x140>
80006816:	72 2b       	ld.w	r11,r9[0x8]
80006818:	2f 8e       	sub	lr,-8
8000681a:	1c 3b       	cp.w	r11,lr
8000681c:	c0 71       	brne	8000682a <_free_r+0xb2>
8000681e:	97 36       	st.w	r11[0xc],r6
80006820:	97 26       	st.w	r11[0x8],r6
80006822:	8d 2b       	st.w	r6[0x8],r11
80006824:	8d 3b       	st.w	r6[0xc],r11
80006826:	30 1c       	mov	r12,1
80006828:	c0 58       	rjmp	80006832 <_free_r+0xba>
8000682a:	72 2b       	ld.w	r11,r9[0x8]
8000682c:	72 39       	ld.w	r9,r9[0xc]
8000682e:	93 2b       	st.w	r9[0x8],r11
80006830:	97 39       	st.w	r11[0xc],r9
80006832:	10 99       	mov	r9,r8
80006834:	ec 08 09 08 	st.w	r6[r8],r8
80006838:	a1 a9       	sbr	r9,0x0
8000683a:	8d 19       	st.w	r6[0x4],r9
8000683c:	58 0c       	cp.w	r12,0
8000683e:	c6 01       	brne	800068fe <_free_r+0x186>
80006840:	e0 48 01 ff 	cp.w	r8,511
80006844:	e0 8b 00 13 	brhi	8000686a <_free_r+0xf2>
80006848:	a3 98       	lsr	r8,0x3
8000684a:	f4 08 00 39 	add	r9,r10,r8<<0x3
8000684e:	72 2b       	ld.w	r11,r9[0x8]
80006850:	8d 39       	st.w	r6[0xc],r9
80006852:	8d 2b       	st.w	r6[0x8],r11
80006854:	97 36       	st.w	r11[0xc],r6
80006856:	93 26       	st.w	r9[0x8],r6
80006858:	a3 48       	asr	r8,0x2
8000685a:	74 19       	ld.w	r9,r10[0x4]
8000685c:	30 1b       	mov	r11,1
8000685e:	f6 08 09 48 	lsl	r8,r11,r8
80006862:	f3 e8 10 08 	or	r8,r9,r8
80006866:	95 18       	st.w	r10[0x4],r8
80006868:	c4 b8       	rjmp	800068fe <_free_r+0x186>
8000686a:	f0 09 16 09 	lsr	r9,r8,0x9
8000686e:	58 49       	cp.w	r9,4
80006870:	e0 8b 00 06 	brhi	8000687c <_free_r+0x104>
80006874:	f0 0b 16 06 	lsr	r11,r8,0x6
80006878:	2c 8b       	sub	r11,-56
8000687a:	c2 68       	rjmp	800068c6 <_free_r+0x14e>
8000687c:	59 49       	cp.w	r9,20
8000687e:	e0 8b 00 05 	brhi	80006888 <_free_r+0x110>
80006882:	f2 cb ff a5 	sub	r11,r9,-91
80006886:	c2 08       	rjmp	800068c6 <_free_r+0x14e>
80006888:	e0 49 00 54 	cp.w	r9,84
8000688c:	e0 8b 00 06 	brhi	80006898 <_free_r+0x120>
80006890:	f0 0b 16 0c 	lsr	r11,r8,0xc
80006894:	29 2b       	sub	r11,-110
80006896:	c1 88       	rjmp	800068c6 <_free_r+0x14e>
80006898:	e0 49 01 54 	cp.w	r9,340
8000689c:	e0 8b 00 06 	brhi	800068a8 <_free_r+0x130>
800068a0:	f0 0b 16 0f 	lsr	r11,r8,0xf
800068a4:	28 9b       	sub	r11,-119
800068a6:	c1 08       	rjmp	800068c6 <_free_r+0x14e>
800068a8:	f0 0b 16 12 	lsr	r11,r8,0x12
800068ac:	e0 49 05 54 	cp.w	r9,1364
800068b0:	e0 88 00 0a 	brls	800068c4 <_free_r+0x14c>
800068b4:	37 eb       	mov	r11,126
800068b6:	c0 88       	rjmp	800068c6 <_free_r+0x14e>
800068b8:	00 00       	add	r0,r0
800068ba:	01 04       	ld.w	r4,r0++
800068bc:	00 00       	add	r0,r0
800068be:	05 0c       	ld.w	r12,r2++
800068c0:	00 00       	add	r0,r0
800068c2:	06 14       	sub	r4,r3
800068c4:	28 4b       	sub	r11,-124
800068c6:	f4 0b 00 3c 	add	r12,r10,r11<<0x3
800068ca:	78 29       	ld.w	r9,r12[0x8]
800068cc:	18 39       	cp.w	r9,r12
800068ce:	c0 e1       	brne	800068ea <_free_r+0x172>
800068d0:	74 18       	ld.w	r8,r10[0x4]
800068d2:	a3 4b       	asr	r11,0x2
800068d4:	30 1c       	mov	r12,1
800068d6:	f8 0b 09 4b 	lsl	r11,r12,r11
800068da:	f1 eb 10 0b 	or	r11,r8,r11
800068de:	12 98       	mov	r8,r9
800068e0:	95 1b       	st.w	r10[0x4],r11
800068e2:	c0 a8       	rjmp	800068f6 <_free_r+0x17e>
800068e4:	72 29       	ld.w	r9,r9[0x8]
800068e6:	18 39       	cp.w	r9,r12
800068e8:	c0 60       	breq	800068f4 <_free_r+0x17c>
800068ea:	72 1a       	ld.w	r10,r9[0x4]
800068ec:	e0 1a ff fc 	andl	r10,0xfffc
800068f0:	14 38       	cp.w	r8,r10
800068f2:	cf 93       	brcs	800068e4 <_free_r+0x16c>
800068f4:	72 38       	ld.w	r8,r9[0xc]
800068f6:	8d 38       	st.w	r6[0xc],r8
800068f8:	8d 29       	st.w	r6[0x8],r9
800068fa:	93 36       	st.w	r9[0xc],r6
800068fc:	91 26       	st.w	r8[0x8],r6
800068fe:	0e 9c       	mov	r12,r7
80006900:	e0 a0 04 36 	rcall	8000716c <__malloc_unlock>
80006904:	d8 22       	popm	r4-r7,pc
80006906:	d7 03       	nop

80006908 <__sfvwrite_r>:
80006908:	d4 31       	pushm	r0-r7,lr
8000690a:	20 3d       	sub	sp,12
8000690c:	14 94       	mov	r4,r10
8000690e:	18 95       	mov	r5,r12
80006910:	16 97       	mov	r7,r11
80006912:	74 28       	ld.w	r8,r10[0x8]
80006914:	58 08       	cp.w	r8,0
80006916:	e0 80 01 48 	breq	80006ba6 <__sfvwrite_r+0x29e>
8000691a:	96 68       	ld.sh	r8,r11[0xc]
8000691c:	ed b8 00 03 	bld	r8,0x3
80006920:	c0 41       	brne	80006928 <__sfvwrite_r+0x20>
80006922:	76 48       	ld.w	r8,r11[0x10]
80006924:	58 08       	cp.w	r8,0
80006926:	c0 c1       	brne	8000693e <__sfvwrite_r+0x36>
80006928:	0e 9b       	mov	r11,r7
8000692a:	0a 9c       	mov	r12,r5
8000692c:	fe b0 f6 c0 	rcall	800056ac <__swsetup_r>
80006930:	c0 70       	breq	8000693e <__sfvwrite_r+0x36>
80006932:	8e 68       	ld.sh	r8,r7[0xc]
80006934:	a7 a8       	sbr	r8,0x6
80006936:	ae 68       	st.h	r7[0xc],r8
80006938:	30 98       	mov	r8,9
8000693a:	8b 38       	st.w	r5[0xc],r8
8000693c:	c3 39       	rjmp	80006ba2 <__sfvwrite_r+0x29a>
8000693e:	8e 63       	ld.sh	r3,r7[0xc]
80006940:	68 00       	ld.w	r0,r4[0x0]
80006942:	06 96       	mov	r6,r3
80006944:	e2 16 00 02 	andl	r6,0x2,COH
80006948:	c2 10       	breq	8000698a <__sfvwrite_r+0x82>
8000694a:	30 03       	mov	r3,0
8000694c:	e0 62 04 00 	mov	r2,1024
80006950:	06 96       	mov	r6,r3
80006952:	c0 48       	rjmp	8000695a <__sfvwrite_r+0x52>
80006954:	60 03       	ld.w	r3,r0[0x0]
80006956:	60 16       	ld.w	r6,r0[0x4]
80006958:	2f 80       	sub	r0,-8
8000695a:	58 06       	cp.w	r6,0
8000695c:	cf c0       	breq	80006954 <__sfvwrite_r+0x4c>
8000695e:	e0 46 04 00 	cp.w	r6,1024
80006962:	ec 09 17 80 	movls	r9,r6
80006966:	e4 09 17 b0 	movhi	r9,r2
8000696a:	06 9a       	mov	r10,r3
8000696c:	6e a8       	ld.w	r8,r7[0x28]
8000696e:	6e 8b       	ld.w	r11,r7[0x20]
80006970:	0a 9c       	mov	r12,r5
80006972:	5d 18       	icall	r8
80006974:	18 16       	sub	r6,r12
80006976:	58 0c       	cp.w	r12,0
80006978:	e0 8a 01 12 	brle	80006b9c <__sfvwrite_r+0x294>
8000697c:	68 28       	ld.w	r8,r4[0x8]
8000697e:	18 18       	sub	r8,r12
80006980:	89 28       	st.w	r4[0x8],r8
80006982:	e0 80 01 12 	breq	80006ba6 <__sfvwrite_r+0x29e>
80006986:	18 03       	add	r3,r12
80006988:	ce 9b       	rjmp	8000695a <__sfvwrite_r+0x52>
8000698a:	e7 d3 c0 01 	bfextu	r3,r3,0x0,0x1
8000698e:	c0 70       	breq	8000699c <__sfvwrite_r+0x94>
80006990:	50 06       	stdsp	sp[0x0],r6
80006992:	0c 93       	mov	r3,r6
80006994:	0c 91       	mov	r1,r6
80006996:	50 15       	stdsp	sp[0x4],r5
80006998:	08 92       	mov	r2,r4
8000699a:	c9 e8       	rjmp	80006ad6 <__sfvwrite_r+0x1ce>
8000699c:	06 96       	mov	r6,r3
8000699e:	08 91       	mov	r1,r4
800069a0:	c0 48       	rjmp	800069a8 <__sfvwrite_r+0xa0>
800069a2:	60 03       	ld.w	r3,r0[0x0]
800069a4:	60 16       	ld.w	r6,r0[0x4]
800069a6:	2f 80       	sub	r0,-8
800069a8:	58 06       	cp.w	r6,0
800069aa:	cf c0       	breq	800069a2 <__sfvwrite_r+0x9a>
800069ac:	8e 68       	ld.sh	r8,r7[0xc]
800069ae:	6e 24       	ld.w	r4,r7[0x8]
800069b0:	10 99       	mov	r9,r8
800069b2:	e2 19 02 00 	andl	r9,0x200,COH
800069b6:	c5 50       	breq	80006a60 <__sfvwrite_r+0x158>
800069b8:	08 36       	cp.w	r6,r4
800069ba:	c4 33       	brcs	80006a40 <__sfvwrite_r+0x138>
800069bc:	10 99       	mov	r9,r8
800069be:	e2 19 04 80 	andl	r9,0x480,COH
800069c2:	c3 f0       	breq	80006a40 <__sfvwrite_r+0x138>
800069c4:	6e 4b       	ld.w	r11,r7[0x10]
800069c6:	6e 09       	ld.w	r9,r7[0x0]
800069c8:	16 19       	sub	r9,r11
800069ca:	50 09       	stdsp	sp[0x0],r9
800069cc:	6e 59       	ld.w	r9,r7[0x14]
800069ce:	10 9c       	mov	r12,r8
800069d0:	f2 09 00 1a 	add	r10,r9,r9<<0x1
800069d4:	30 28       	mov	r8,2
800069d6:	f4 08 0c 08 	divs	r8,r10,r8
800069da:	fa e9 00 04 	st.d	sp[4],r8
800069de:	10 94       	mov	r4,r8
800069e0:	40 09       	lddsp	r9,sp[0x0]
800069e2:	e2 1c 04 00 	andl	r12,0x400,COH
800069e6:	2f f9       	sub	r9,-1
800069e8:	0c 09       	add	r9,r6
800069ea:	12 38       	cp.w	r8,r9
800069ec:	f2 04 17 30 	movlo	r4,r9
800069f0:	58 0c       	cp.w	r12,0
800069f2:	c1 00       	breq	80006a12 <__sfvwrite_r+0x10a>
800069f4:	08 9b       	mov	r11,r4
800069f6:	0a 9c       	mov	r12,r5
800069f8:	c6 ed       	rcall	80006cd4 <_malloc_r>
800069fa:	18 92       	mov	r2,r12
800069fc:	c1 40       	breq	80006a24 <__sfvwrite_r+0x11c>
800069fe:	40 0a       	lddsp	r10,sp[0x0]
80006a00:	6e 4b       	ld.w	r11,r7[0x10]
80006a02:	fe b0 e4 68 	rcall	800032d2 <memcpy>
80006a06:	8e 68       	ld.sh	r8,r7[0xc]
80006a08:	e0 18 fb 7f 	andl	r8,0xfb7f
80006a0c:	a7 b8       	sbr	r8,0x7
80006a0e:	ae 68       	st.h	r7[0xc],r8
80006a10:	c0 d8       	rjmp	80006a2a <__sfvwrite_r+0x122>
80006a12:	08 9a       	mov	r10,r4
80006a14:	0a 9c       	mov	r12,r5
80006a16:	e0 a0 06 9d 	rcall	80007750 <_realloc_r>
80006a1a:	18 92       	mov	r2,r12
80006a1c:	c0 71       	brne	80006a2a <__sfvwrite_r+0x122>
80006a1e:	6e 4b       	ld.w	r11,r7[0x10]
80006a20:	0a 9c       	mov	r12,r5
80006a22:	ca be       	rcall	80006778 <_free_r>
80006a24:	30 c8       	mov	r8,12
80006a26:	8b 38       	st.w	r5[0xc],r8
80006a28:	cb a8       	rjmp	80006b9c <__sfvwrite_r+0x294>
80006a2a:	40 0a       	lddsp	r10,sp[0x0]
80006a2c:	40 09       	lddsp	r9,sp[0x0]
80006a2e:	e8 0a 01 0a 	sub	r10,r4,r10
80006a32:	e4 09 00 08 	add	r8,r2,r9
80006a36:	8f 54       	st.w	r7[0x14],r4
80006a38:	8f 2a       	st.w	r7[0x8],r10
80006a3a:	8f 08       	st.w	r7[0x0],r8
80006a3c:	8f 42       	st.w	r7[0x10],r2
80006a3e:	0c 94       	mov	r4,r6
80006a40:	08 36       	cp.w	r6,r4
80006a42:	ec 04 17 30 	movlo	r4,r6
80006a46:	06 9b       	mov	r11,r3
80006a48:	08 9a       	mov	r10,r4
80006a4a:	6e 0c       	ld.w	r12,r7[0x0]
80006a4c:	e0 a0 03 69 	rcall	8000711e <memmove>
80006a50:	6e 08       	ld.w	r8,r7[0x0]
80006a52:	08 08       	add	r8,r4
80006a54:	8f 08       	st.w	r7[0x0],r8
80006a56:	6e 28       	ld.w	r8,r7[0x8]
80006a58:	08 18       	sub	r8,r4
80006a5a:	0c 94       	mov	r4,r6
80006a5c:	8f 28       	st.w	r7[0x8],r8
80006a5e:	c3 08       	rjmp	80006abe <__sfvwrite_r+0x1b6>
80006a60:	08 36       	cp.w	r6,r4
80006a62:	5f ba       	srhi	r10
80006a64:	6e 0c       	ld.w	r12,r7[0x0]
80006a66:	6e 48       	ld.w	r8,r7[0x10]
80006a68:	10 3c       	cp.w	r12,r8
80006a6a:	5f b8       	srhi	r8
80006a6c:	f5 e8 00 08 	and	r8,r10,r8
80006a70:	f2 08 18 00 	cp.b	r8,r9
80006a74:	c0 e0       	breq	80006a90 <__sfvwrite_r+0x188>
80006a76:	06 9b       	mov	r11,r3
80006a78:	08 9a       	mov	r10,r4
80006a7a:	e0 a0 03 52 	rcall	8000711e <memmove>
80006a7e:	6e 08       	ld.w	r8,r7[0x0]
80006a80:	08 08       	add	r8,r4
80006a82:	0e 9b       	mov	r11,r7
80006a84:	8f 08       	st.w	r7[0x0],r8
80006a86:	0a 9c       	mov	r12,r5
80006a88:	fe b0 fd 00 	rcall	80006488 <_fflush_r>
80006a8c:	c1 90       	breq	80006abe <__sfvwrite_r+0x1b6>
80006a8e:	c8 78       	rjmp	80006b9c <__sfvwrite_r+0x294>
80006a90:	6e 59       	ld.w	r9,r7[0x14]
80006a92:	12 36       	cp.w	r6,r9
80006a94:	c0 a3       	brcs	80006aa8 <__sfvwrite_r+0x1a0>
80006a96:	6e a8       	ld.w	r8,r7[0x28]
80006a98:	06 9a       	mov	r10,r3
80006a9a:	6e 8b       	ld.w	r11,r7[0x20]
80006a9c:	0a 9c       	mov	r12,r5
80006a9e:	5d 18       	icall	r8
80006aa0:	18 94       	mov	r4,r12
80006aa2:	e0 89 00 0e 	brgt	80006abe <__sfvwrite_r+0x1b6>
80006aa6:	c7 b8       	rjmp	80006b9c <__sfvwrite_r+0x294>
80006aa8:	0c 9a       	mov	r10,r6
80006aaa:	06 9b       	mov	r11,r3
80006aac:	e0 a0 03 39 	rcall	8000711e <memmove>
80006ab0:	6e 08       	ld.w	r8,r7[0x0]
80006ab2:	0c 08       	add	r8,r6
80006ab4:	0c 94       	mov	r4,r6
80006ab6:	8f 08       	st.w	r7[0x0],r8
80006ab8:	6e 28       	ld.w	r8,r7[0x8]
80006aba:	0c 18       	sub	r8,r6
80006abc:	8f 28       	st.w	r7[0x8],r8
80006abe:	62 28       	ld.w	r8,r1[0x8]
80006ac0:	08 18       	sub	r8,r4
80006ac2:	83 28       	st.w	r1[0x8],r8
80006ac4:	c7 10       	breq	80006ba6 <__sfvwrite_r+0x29e>
80006ac6:	08 16       	sub	r6,r4
80006ac8:	08 03       	add	r3,r4
80006aca:	c6 fb       	rjmp	800069a8 <__sfvwrite_r+0xa0>
80006acc:	60 03       	ld.w	r3,r0[0x0]
80006ace:	60 11       	ld.w	r1,r0[0x4]
80006ad0:	30 08       	mov	r8,0
80006ad2:	2f 80       	sub	r0,-8
80006ad4:	50 08       	stdsp	sp[0x0],r8
80006ad6:	58 01       	cp.w	r1,0
80006ad8:	cf a0       	breq	80006acc <__sfvwrite_r+0x1c4>
80006ada:	40 0a       	lddsp	r10,sp[0x0]
80006adc:	58 0a       	cp.w	r10,0
80006ade:	c1 81       	brne	80006b0e <__sfvwrite_r+0x206>
80006ae0:	02 9a       	mov	r10,r1
80006ae2:	30 ab       	mov	r11,10
80006ae4:	06 9c       	mov	r12,r3
80006ae6:	e0 a0 03 11 	rcall	80007108 <memchr>
80006aea:	f9 b8 01 01 	movne	r8,1
80006aee:	f9 d8 e1 06 	addne	r6,r12,r8
80006af2:	ed d3 e1 16 	subne	r6,r6,r3
80006af6:	f9 b9 01 01 	movne	r9,1
80006afa:	fb f9 1a 00 	st.wne	sp[0x0],r9
80006afe:	f9 b8 00 01 	moveq	r8,1
80006b02:	e3 d8 e0 06 	addeq	r6,r1,r8
80006b06:	f9 b8 00 01 	moveq	r8,1
80006b0a:	fb f8 0a 00 	st.weq	sp[0x0],r8
80006b0e:	02 36       	cp.w	r6,r1
80006b10:	ec 04 17 80 	movls	r4,r6
80006b14:	e2 04 17 b0 	movhi	r4,r1
80006b18:	6e 59       	ld.w	r9,r7[0x14]
80006b1a:	6e 25       	ld.w	r5,r7[0x8]
80006b1c:	f2 05 00 05 	add	r5,r9,r5
80006b20:	0a 34       	cp.w	r4,r5
80006b22:	5f 9a       	srgt	r10
80006b24:	6e 0c       	ld.w	r12,r7[0x0]
80006b26:	6e 48       	ld.w	r8,r7[0x10]
80006b28:	10 3c       	cp.w	r12,r8
80006b2a:	5f b8       	srhi	r8
80006b2c:	f5 e8 00 08 	and	r8,r10,r8
80006b30:	30 0a       	mov	r10,0
80006b32:	f4 08 18 00 	cp.b	r8,r10
80006b36:	c0 e0       	breq	80006b52 <__sfvwrite_r+0x24a>
80006b38:	06 9b       	mov	r11,r3
80006b3a:	0a 9a       	mov	r10,r5
80006b3c:	e0 a0 02 f1 	rcall	8000711e <memmove>
80006b40:	6e 08       	ld.w	r8,r7[0x0]
80006b42:	0a 08       	add	r8,r5
80006b44:	0e 9b       	mov	r11,r7
80006b46:	8f 08       	st.w	r7[0x0],r8
80006b48:	40 1c       	lddsp	r12,sp[0x4]
80006b4a:	fe b0 fc 9f 	rcall	80006488 <_fflush_r>
80006b4e:	c1 80       	breq	80006b7e <__sfvwrite_r+0x276>
80006b50:	c2 68       	rjmp	80006b9c <__sfvwrite_r+0x294>
80006b52:	12 34       	cp.w	r4,r9
80006b54:	c0 a5       	brlt	80006b68 <__sfvwrite_r+0x260>
80006b56:	6e a8       	ld.w	r8,r7[0x28]
80006b58:	06 9a       	mov	r10,r3
80006b5a:	6e 8b       	ld.w	r11,r7[0x20]
80006b5c:	40 1c       	lddsp	r12,sp[0x4]
80006b5e:	5d 18       	icall	r8
80006b60:	18 95       	mov	r5,r12
80006b62:	e0 89 00 0e 	brgt	80006b7e <__sfvwrite_r+0x276>
80006b66:	c1 b8       	rjmp	80006b9c <__sfvwrite_r+0x294>
80006b68:	08 9a       	mov	r10,r4
80006b6a:	06 9b       	mov	r11,r3
80006b6c:	e0 a0 02 d9 	rcall	8000711e <memmove>
80006b70:	6e 08       	ld.w	r8,r7[0x0]
80006b72:	08 08       	add	r8,r4
80006b74:	08 95       	mov	r5,r4
80006b76:	8f 08       	st.w	r7[0x0],r8
80006b78:	6e 28       	ld.w	r8,r7[0x8]
80006b7a:	08 18       	sub	r8,r4
80006b7c:	8f 28       	st.w	r7[0x8],r8
80006b7e:	0a 16       	sub	r6,r5
80006b80:	c0 71       	brne	80006b8e <__sfvwrite_r+0x286>
80006b82:	0e 9b       	mov	r11,r7
80006b84:	40 1c       	lddsp	r12,sp[0x4]
80006b86:	fe b0 fc 81 	rcall	80006488 <_fflush_r>
80006b8a:	c0 91       	brne	80006b9c <__sfvwrite_r+0x294>
80006b8c:	50 06       	stdsp	sp[0x0],r6
80006b8e:	64 28       	ld.w	r8,r2[0x8]
80006b90:	0a 18       	sub	r8,r5
80006b92:	85 28       	st.w	r2[0x8],r8
80006b94:	c0 90       	breq	80006ba6 <__sfvwrite_r+0x29e>
80006b96:	0a 11       	sub	r1,r5
80006b98:	0a 03       	add	r3,r5
80006b9a:	c9 eb       	rjmp	80006ad6 <__sfvwrite_r+0x1ce>
80006b9c:	8e 68       	ld.sh	r8,r7[0xc]
80006b9e:	a7 a8       	sbr	r8,0x6
80006ba0:	ae 68       	st.h	r7[0xc],r8
80006ba2:	3f fc       	mov	r12,-1
80006ba4:	c0 28       	rjmp	80006ba8 <__sfvwrite_r+0x2a0>
80006ba6:	30 0c       	mov	r12,0
80006ba8:	2f dd       	sub	sp,-12
80006baa:	d8 32       	popm	r0-r7,pc

80006bac <_fwalk>:
80006bac:	d4 31       	pushm	r0-r7,lr
80006bae:	30 05       	mov	r5,0
80006bb0:	16 91       	mov	r1,r11
80006bb2:	f8 c7 ff 28 	sub	r7,r12,-216
80006bb6:	0a 92       	mov	r2,r5
80006bb8:	fe b0 fc f0 	rcall	80006598 <__sfp_lock_acquire>
80006bbc:	3f f3       	mov	r3,-1
80006bbe:	c1 68       	rjmp	80006bea <_fwalk+0x3e>
80006bc0:	6e 26       	ld.w	r6,r7[0x8]
80006bc2:	6e 14       	ld.w	r4,r7[0x4]
80006bc4:	2f 46       	sub	r6,-12
80006bc6:	c0 c8       	rjmp	80006bde <_fwalk+0x32>
80006bc8:	8c 08       	ld.sh	r8,r6[0x0]
80006bca:	e4 08 19 00 	cp.h	r8,r2
80006bce:	c0 70       	breq	80006bdc <_fwalk+0x30>
80006bd0:	8c 18       	ld.sh	r8,r6[0x2]
80006bd2:	e6 08 19 00 	cp.h	r8,r3
80006bd6:	c0 30       	breq	80006bdc <_fwalk+0x30>
80006bd8:	5d 11       	icall	r1
80006bda:	18 45       	or	r5,r12
80006bdc:	2a 46       	sub	r6,-92
80006bde:	20 14       	sub	r4,1
80006be0:	ec cc 00 0c 	sub	r12,r6,12
80006be4:	58 04       	cp.w	r4,0
80006be6:	cf 14       	brge	80006bc8 <_fwalk+0x1c>
80006be8:	6e 07       	ld.w	r7,r7[0x0]
80006bea:	58 07       	cp.w	r7,0
80006bec:	ce a1       	brne	80006bc0 <_fwalk+0x14>
80006bee:	fe b0 fc d6 	rcall	8000659a <__sfp_lock_release>
80006bf2:	0a 9c       	mov	r12,r5
80006bf4:	d8 32       	popm	r0-r7,pc
80006bf6:	d7 03       	nop

80006bf8 <_localeconv_r>:
80006bf8:	48 1c       	lddpc	r12,80006bfc <_localeconv_r+0x4>
80006bfa:	5e fc       	retal	r12
80006bfc:	80 00       	ld.sh	r0,r0[0x0]
80006bfe:	98 90       	ld.uh	r0,r12[0x2]

80006c00 <__smakebuf_r>:
80006c00:	d4 21       	pushm	r4-r7,lr
80006c02:	20 fd       	sub	sp,60
80006c04:	96 68       	ld.sh	r8,r11[0xc]
80006c06:	16 97       	mov	r7,r11
80006c08:	18 96       	mov	r6,r12
80006c0a:	e2 18 00 02 	andl	r8,0x2,COH
80006c0e:	c3 c1       	brne	80006c86 <__smakebuf_r+0x86>
80006c10:	96 7b       	ld.sh	r11,r11[0xe]
80006c12:	f0 0b 19 00 	cp.h	r11,r8
80006c16:	c0 55       	brlt	80006c20 <__smakebuf_r+0x20>
80006c18:	1a 9a       	mov	r10,sp
80006c1a:	e0 a0 08 c1 	rcall	80007d9c <_fstat_r>
80006c1e:	c0 f4       	brge	80006c3c <__smakebuf_r+0x3c>
80006c20:	8e 65       	ld.sh	r5,r7[0xc]
80006c22:	0a 98       	mov	r8,r5
80006c24:	ab b8       	sbr	r8,0xb
80006c26:	e2 15 00 80 	andl	r5,0x80,COH
80006c2a:	ae 68       	st.h	r7[0xc],r8
80006c2c:	30 04       	mov	r4,0
80006c2e:	e0 68 04 00 	mov	r8,1024
80006c32:	f9 b5 01 40 	movne	r5,64
80006c36:	f0 05 17 00 	moveq	r5,r8
80006c3a:	c1 c8       	rjmp	80006c72 <__smakebuf_r+0x72>
80006c3c:	40 18       	lddsp	r8,sp[0x4]
80006c3e:	e2 18 f0 00 	andl	r8,0xf000,COH
80006c42:	e0 48 20 00 	cp.w	r8,8192
80006c46:	5f 04       	sreq	r4
80006c48:	e0 48 80 00 	cp.w	r8,32768
80006c4c:	c0 e1       	brne	80006c68 <__smakebuf_r+0x68>
80006c4e:	6e b9       	ld.w	r9,r7[0x2c]
80006c50:	fe c8 f1 cc 	sub	r8,pc,-3636
80006c54:	10 39       	cp.w	r9,r8
80006c56:	c0 91       	brne	80006c68 <__smakebuf_r+0x68>
80006c58:	8e 68       	ld.sh	r8,r7[0xc]
80006c5a:	e0 65 04 00 	mov	r5,1024
80006c5e:	ab a8       	sbr	r8,0xa
80006c60:	ef 45 00 50 	st.w	r7[80],r5
80006c64:	ae 68       	st.h	r7[0xc],r8
80006c66:	c0 68       	rjmp	80006c72 <__smakebuf_r+0x72>
80006c68:	8e 68       	ld.sh	r8,r7[0xc]
80006c6a:	e0 65 04 00 	mov	r5,1024
80006c6e:	ab b8       	sbr	r8,0xb
80006c70:	ae 68       	st.h	r7[0xc],r8
80006c72:	0a 9b       	mov	r11,r5
80006c74:	0c 9c       	mov	r12,r6
80006c76:	c2 fc       	rcall	80006cd4 <_malloc_r>
80006c78:	8e 68       	ld.sh	r8,r7[0xc]
80006c7a:	c0 d1       	brne	80006c94 <__smakebuf_r+0x94>
80006c7c:	ed b8 00 09 	bld	r8,0x9
80006c80:	c1 f0       	breq	80006cbe <__smakebuf_r+0xbe>
80006c82:	a1 b8       	sbr	r8,0x1
80006c84:	ae 68       	st.h	r7[0xc],r8
80006c86:	ee c8 ff b9 	sub	r8,r7,-71
80006c8a:	8f 48       	st.w	r7[0x10],r8
80006c8c:	8f 08       	st.w	r7[0x0],r8
80006c8e:	30 18       	mov	r8,1
80006c90:	8f 58       	st.w	r7[0x14],r8
80006c92:	c1 68       	rjmp	80006cbe <__smakebuf_r+0xbe>
80006c94:	a7 b8       	sbr	r8,0x7
80006c96:	8f 4c       	st.w	r7[0x10],r12
80006c98:	ae 68       	st.h	r7[0xc],r8
80006c9a:	8f 55       	st.w	r7[0x14],r5
80006c9c:	fe c8 07 00 	sub	r8,pc,1792
80006ca0:	8f 0c       	st.w	r7[0x0],r12
80006ca2:	8d a8       	st.w	r6[0x28],r8
80006ca4:	58 04       	cp.w	r4,0
80006ca6:	c0 c0       	breq	80006cbe <__smakebuf_r+0xbe>
80006ca8:	8e 7c       	ld.sh	r12,r7[0xe]
80006caa:	e0 a0 07 61 	rcall	80007b6c <isatty>
80006cae:	ef f8 12 06 	ld.shne	r8,r7[0xc]
80006cb2:	f9 b9 01 01 	movne	r9,1
80006cb6:	f1 d9 e1 38 	orne	r8,r8,r9
80006cba:	ef f8 1c 06 	st.hne	r7[0xc],r8
80006cbe:	2f 1d       	sub	sp,-60
80006cc0:	d8 22       	popm	r4-r7,pc
80006cc2:	d7 03       	nop

80006cc4 <malloc>:
80006cc4:	d4 01       	pushm	lr
80006cc6:	48 38       	lddpc	r8,80006cd0 <malloc+0xc>
80006cc8:	18 9b       	mov	r11,r12
80006cca:	70 0c       	ld.w	r12,r8[0x0]
80006ccc:	c0 4c       	rcall	80006cd4 <_malloc_r>
80006cce:	d8 02       	popm	pc
80006cd0:	00 00       	add	r0,r0
80006cd2:	01 00       	ld.w	r0,r0++

80006cd4 <_malloc_r>:
80006cd4:	d4 31       	pushm	r0-r7,lr
80006cd6:	f6 c7 ff f5 	sub	r7,r11,-11
80006cda:	18 95       	mov	r5,r12
80006cdc:	59 67       	cp.w	r7,22
80006cde:	f9 b7 08 10 	movls	r7,16
80006ce2:	f9 b8 0b f8 	movhi	r8,-8
80006ce6:	ef d8 eb 27 	andhi	r7,r7,r8
80006cea:	16 37       	cp.w	r7,r11
80006cec:	5f 38       	srlo	r8
80006cee:	f1 e7 13 f8 	or	r8,r8,r7>>0x1f
80006cf2:	c0 50       	breq	80006cfc <_malloc_r+0x28>
80006cf4:	30 c8       	mov	r8,12
80006cf6:	99 38       	st.w	r12[0xc],r8
80006cf8:	e0 8f 01 ef 	bral	800070d6 <_malloc_r+0x402>
80006cfc:	e0 a0 02 37 	rcall	8000716a <__malloc_lock>
80006d00:	e0 47 01 f7 	cp.w	r7,503
80006d04:	e0 8b 00 1c 	brhi	80006d3c <_malloc_r+0x68>
80006d08:	ee 03 16 03 	lsr	r3,r7,0x3
80006d0c:	4c c8       	lddpc	r8,80006e3c <_malloc_r+0x168>
80006d0e:	f0 03 00 38 	add	r8,r8,r3<<0x3
80006d12:	70 36       	ld.w	r6,r8[0xc]
80006d14:	10 36       	cp.w	r6,r8
80006d16:	c0 61       	brne	80006d22 <_malloc_r+0x4e>
80006d18:	ec c8 ff f8 	sub	r8,r6,-8
80006d1c:	70 36       	ld.w	r6,r8[0xc]
80006d1e:	10 36       	cp.w	r6,r8
80006d20:	c0 c0       	breq	80006d38 <_malloc_r+0x64>
80006d22:	6c 18       	ld.w	r8,r6[0x4]
80006d24:	e0 18 ff fc 	andl	r8,0xfffc
80006d28:	6c 3a       	ld.w	r10,r6[0xc]
80006d2a:	ec 08 00 09 	add	r9,r6,r8
80006d2e:	0a 9c       	mov	r12,r5
80006d30:	6c 28       	ld.w	r8,r6[0x8]
80006d32:	95 28       	st.w	r10[0x8],r8
80006d34:	91 3a       	st.w	r8[0xc],r10
80006d36:	c4 78       	rjmp	80006dc4 <_malloc_r+0xf0>
80006d38:	2f e3       	sub	r3,-2
80006d3a:	c4 d8       	rjmp	80006dd4 <_malloc_r+0x100>
80006d3c:	ee 08 16 09 	lsr	r8,r7,0x9
80006d40:	c0 41       	brne	80006d48 <_malloc_r+0x74>
80006d42:	ee 03 16 03 	lsr	r3,r7,0x3
80006d46:	c2 78       	rjmp	80006d94 <_malloc_r+0xc0>
80006d48:	58 48       	cp.w	r8,4
80006d4a:	e0 8b 00 06 	brhi	80006d56 <_malloc_r+0x82>
80006d4e:	ee 03 16 06 	lsr	r3,r7,0x6
80006d52:	2c 83       	sub	r3,-56
80006d54:	c2 08       	rjmp	80006d94 <_malloc_r+0xc0>
80006d56:	59 48       	cp.w	r8,20
80006d58:	e0 8b 00 05 	brhi	80006d62 <_malloc_r+0x8e>
80006d5c:	f0 c3 ff a5 	sub	r3,r8,-91
80006d60:	c1 a8       	rjmp	80006d94 <_malloc_r+0xc0>
80006d62:	e0 48 00 54 	cp.w	r8,84
80006d66:	e0 8b 00 06 	brhi	80006d72 <_malloc_r+0x9e>
80006d6a:	ee 03 16 0c 	lsr	r3,r7,0xc
80006d6e:	29 23       	sub	r3,-110
80006d70:	c1 28       	rjmp	80006d94 <_malloc_r+0xc0>
80006d72:	e0 48 01 54 	cp.w	r8,340
80006d76:	e0 8b 00 06 	brhi	80006d82 <_malloc_r+0xae>
80006d7a:	ee 03 16 0f 	lsr	r3,r7,0xf
80006d7e:	28 93       	sub	r3,-119
80006d80:	c0 a8       	rjmp	80006d94 <_malloc_r+0xc0>
80006d82:	ee 03 16 12 	lsr	r3,r7,0x12
80006d86:	e0 48 05 54 	cp.w	r8,1364
80006d8a:	e0 88 00 04 	brls	80006d92 <_malloc_r+0xbe>
80006d8e:	37 e3       	mov	r3,126
80006d90:	c0 28       	rjmp	80006d94 <_malloc_r+0xc0>
80006d92:	28 43       	sub	r3,-124
80006d94:	4a aa       	lddpc	r10,80006e3c <_malloc_r+0x168>
80006d96:	f4 03 00 3a 	add	r10,r10,r3<<0x3
80006d9a:	74 36       	ld.w	r6,r10[0xc]
80006d9c:	c1 98       	rjmp	80006dce <_malloc_r+0xfa>
80006d9e:	6c 19       	ld.w	r9,r6[0x4]
80006da0:	e0 19 ff fc 	andl	r9,0xfffc
80006da4:	f2 07 01 0b 	sub	r11,r9,r7
80006da8:	58 fb       	cp.w	r11,15
80006daa:	e0 8a 00 04 	brle	80006db2 <_malloc_r+0xde>
80006dae:	20 13       	sub	r3,1
80006db0:	c1 18       	rjmp	80006dd2 <_malloc_r+0xfe>
80006db2:	6c 38       	ld.w	r8,r6[0xc]
80006db4:	58 0b       	cp.w	r11,0
80006db6:	c0 b5       	brlt	80006dcc <_malloc_r+0xf8>
80006db8:	6c 2a       	ld.w	r10,r6[0x8]
80006dba:	ec 09 00 09 	add	r9,r6,r9
80006dbe:	0a 9c       	mov	r12,r5
80006dc0:	91 2a       	st.w	r8[0x8],r10
80006dc2:	95 38       	st.w	r10[0xc],r8
80006dc4:	72 18       	ld.w	r8,r9[0x4]
80006dc6:	a1 a8       	sbr	r8,0x0
80006dc8:	93 18       	st.w	r9[0x4],r8
80006dca:	cb b8       	rjmp	80006f40 <_malloc_r+0x26c>
80006dcc:	10 96       	mov	r6,r8
80006dce:	14 36       	cp.w	r6,r10
80006dd0:	ce 71       	brne	80006d9e <_malloc_r+0xca>
80006dd2:	2f f3       	sub	r3,-1
80006dd4:	49 aa       	lddpc	r10,80006e3c <_malloc_r+0x168>
80006dd6:	f4 cc ff f8 	sub	r12,r10,-8
80006dda:	78 26       	ld.w	r6,r12[0x8]
80006ddc:	18 36       	cp.w	r6,r12
80006dde:	c6 d0       	breq	80006eb8 <_malloc_r+0x1e4>
80006de0:	6c 19       	ld.w	r9,r6[0x4]
80006de2:	e0 19 ff fc 	andl	r9,0xfffc
80006de6:	f2 07 01 08 	sub	r8,r9,r7
80006dea:	58 f8       	cp.w	r8,15
80006dec:	e0 89 00 8f 	brgt	80006f0a <_malloc_r+0x236>
80006df0:	99 3c       	st.w	r12[0xc],r12
80006df2:	99 2c       	st.w	r12[0x8],r12
80006df4:	58 08       	cp.w	r8,0
80006df6:	c0 55       	brlt	80006e00 <_malloc_r+0x12c>
80006df8:	ec 09 00 09 	add	r9,r6,r9
80006dfc:	0a 9c       	mov	r12,r5
80006dfe:	ce 3b       	rjmp	80006dc4 <_malloc_r+0xf0>
80006e00:	e0 49 01 ff 	cp.w	r9,511
80006e04:	e0 8b 00 13 	brhi	80006e2a <_malloc_r+0x156>
80006e08:	a3 99       	lsr	r9,0x3
80006e0a:	f4 09 00 38 	add	r8,r10,r9<<0x3
80006e0e:	70 2b       	ld.w	r11,r8[0x8]
80006e10:	8d 38       	st.w	r6[0xc],r8
80006e12:	8d 2b       	st.w	r6[0x8],r11
80006e14:	97 36       	st.w	r11[0xc],r6
80006e16:	91 26       	st.w	r8[0x8],r6
80006e18:	a3 49       	asr	r9,0x2
80006e1a:	74 18       	ld.w	r8,r10[0x4]
80006e1c:	30 1b       	mov	r11,1
80006e1e:	f6 09 09 49 	lsl	r9,r11,r9
80006e22:	f1 e9 10 09 	or	r9,r8,r9
80006e26:	95 19       	st.w	r10[0x4],r9
80006e28:	c4 88       	rjmp	80006eb8 <_malloc_r+0x1e4>
80006e2a:	f2 08 16 09 	lsr	r8,r9,0x9
80006e2e:	58 48       	cp.w	r8,4
80006e30:	e0 8b 00 08 	brhi	80006e40 <_malloc_r+0x16c>
80006e34:	f2 0a 16 06 	lsr	r10,r9,0x6
80006e38:	2c 8a       	sub	r10,-56
80006e3a:	c2 28       	rjmp	80006e7e <_malloc_r+0x1aa>
80006e3c:	00 00       	add	r0,r0
80006e3e:	01 04       	ld.w	r4,r0++
80006e40:	59 48       	cp.w	r8,20
80006e42:	e0 8b 00 05 	brhi	80006e4c <_malloc_r+0x178>
80006e46:	f0 ca ff a5 	sub	r10,r8,-91
80006e4a:	c1 a8       	rjmp	80006e7e <_malloc_r+0x1aa>
80006e4c:	e0 48 00 54 	cp.w	r8,84
80006e50:	e0 8b 00 06 	brhi	80006e5c <_malloc_r+0x188>
80006e54:	f2 0a 16 0c 	lsr	r10,r9,0xc
80006e58:	29 2a       	sub	r10,-110
80006e5a:	c1 28       	rjmp	80006e7e <_malloc_r+0x1aa>
80006e5c:	e0 48 01 54 	cp.w	r8,340
80006e60:	e0 8b 00 06 	brhi	80006e6c <_malloc_r+0x198>
80006e64:	f2 0a 16 0f 	lsr	r10,r9,0xf
80006e68:	28 9a       	sub	r10,-119
80006e6a:	c0 a8       	rjmp	80006e7e <_malloc_r+0x1aa>
80006e6c:	f2 0a 16 12 	lsr	r10,r9,0x12
80006e70:	e0 48 05 54 	cp.w	r8,1364
80006e74:	e0 88 00 04 	brls	80006e7c <_malloc_r+0x1a8>
80006e78:	37 ea       	mov	r10,126
80006e7a:	c0 28       	rjmp	80006e7e <_malloc_r+0x1aa>
80006e7c:	28 4a       	sub	r10,-124
80006e7e:	4c 8b       	lddpc	r11,80006f9c <_malloc_r+0x2c8>
80006e80:	f6 0a 00 34 	add	r4,r11,r10<<0x3
80006e84:	68 28       	ld.w	r8,r4[0x8]
80006e86:	08 38       	cp.w	r8,r4
80006e88:	c0 e1       	brne	80006ea4 <_malloc_r+0x1d0>
80006e8a:	76 19       	ld.w	r9,r11[0x4]
80006e8c:	a3 4a       	asr	r10,0x2
80006e8e:	30 1e       	mov	lr,1
80006e90:	fc 0a 09 4a 	lsl	r10,lr,r10
80006e94:	f3 ea 10 0a 	or	r10,r9,r10
80006e98:	10 99       	mov	r9,r8
80006e9a:	97 1a       	st.w	r11[0x4],r10
80006e9c:	c0 a8       	rjmp	80006eb0 <_malloc_r+0x1dc>
80006e9e:	70 28       	ld.w	r8,r8[0x8]
80006ea0:	08 38       	cp.w	r8,r4
80006ea2:	c0 60       	breq	80006eae <_malloc_r+0x1da>
80006ea4:	70 1a       	ld.w	r10,r8[0x4]
80006ea6:	e0 1a ff fc 	andl	r10,0xfffc
80006eaa:	14 39       	cp.w	r9,r10
80006eac:	cf 93       	brcs	80006e9e <_malloc_r+0x1ca>
80006eae:	70 39       	ld.w	r9,r8[0xc]
80006eb0:	8d 39       	st.w	r6[0xc],r9
80006eb2:	8d 28       	st.w	r6[0x8],r8
80006eb4:	91 36       	st.w	r8[0xc],r6
80006eb6:	93 26       	st.w	r9[0x8],r6
80006eb8:	e6 08 14 02 	asr	r8,r3,0x2
80006ebc:	30 1b       	mov	r11,1
80006ebe:	4b 84       	lddpc	r4,80006f9c <_malloc_r+0x2c8>
80006ec0:	f6 08 09 4b 	lsl	r11,r11,r8
80006ec4:	68 18       	ld.w	r8,r4[0x4]
80006ec6:	10 3b       	cp.w	r11,r8
80006ec8:	e0 8b 00 6c 	brhi	80006fa0 <_malloc_r+0x2cc>
80006ecc:	f7 e8 00 09 	and	r9,r11,r8
80006ed0:	c0 b1       	brne	80006ee6 <_malloc_r+0x212>
80006ed2:	e0 13 ff fc 	andl	r3,0xfffc
80006ed6:	a1 7b       	lsl	r11,0x1
80006ed8:	2f c3       	sub	r3,-4
80006eda:	c0 38       	rjmp	80006ee0 <_malloc_r+0x20c>
80006edc:	2f c3       	sub	r3,-4
80006ede:	a1 7b       	lsl	r11,0x1
80006ee0:	f7 e8 00 09 	and	r9,r11,r8
80006ee4:	cf c0       	breq	80006edc <_malloc_r+0x208>
80006ee6:	e8 03 00 3e 	add	lr,r4,r3<<0x3
80006eea:	06 92       	mov	r2,r3
80006eec:	1c 91       	mov	r1,lr
80006eee:	62 36       	ld.w	r6,r1[0xc]
80006ef0:	c2 d8       	rjmp	80006f4a <_malloc_r+0x276>
80006ef2:	6c 1a       	ld.w	r10,r6[0x4]
80006ef4:	e0 1a ff fc 	andl	r10,0xfffc
80006ef8:	f4 07 01 08 	sub	r8,r10,r7
80006efc:	58 f8       	cp.w	r8,15
80006efe:	e0 8a 00 15 	brle	80006f28 <_malloc_r+0x254>
80006f02:	6c 3a       	ld.w	r10,r6[0xc]
80006f04:	6c 29       	ld.w	r9,r6[0x8]
80006f06:	95 29       	st.w	r10[0x8],r9
80006f08:	93 3a       	st.w	r9[0xc],r10
80006f0a:	0e 99       	mov	r9,r7
80006f0c:	ec 07 00 07 	add	r7,r6,r7
80006f10:	a1 a9       	sbr	r9,0x0
80006f12:	99 37       	st.w	r12[0xc],r7
80006f14:	99 27       	st.w	r12[0x8],r7
80006f16:	8d 19       	st.w	r6[0x4],r9
80006f18:	ee 08 09 08 	st.w	r7[r8],r8
80006f1c:	8f 2c       	st.w	r7[0x8],r12
80006f1e:	8f 3c       	st.w	r7[0xc],r12
80006f20:	a1 a8       	sbr	r8,0x0
80006f22:	0a 9c       	mov	r12,r5
80006f24:	8f 18       	st.w	r7[0x4],r8
80006f26:	c0 d8       	rjmp	80006f40 <_malloc_r+0x26c>
80006f28:	6c 39       	ld.w	r9,r6[0xc]
80006f2a:	58 08       	cp.w	r8,0
80006f2c:	c0 e5       	brlt	80006f48 <_malloc_r+0x274>
80006f2e:	ec 0a 00 0a 	add	r10,r6,r10
80006f32:	74 18       	ld.w	r8,r10[0x4]
80006f34:	a1 a8       	sbr	r8,0x0
80006f36:	0a 9c       	mov	r12,r5
80006f38:	95 18       	st.w	r10[0x4],r8
80006f3a:	6c 28       	ld.w	r8,r6[0x8]
80006f3c:	93 28       	st.w	r9[0x8],r8
80006f3e:	91 39       	st.w	r8[0xc],r9
80006f40:	c1 6d       	rcall	8000716c <__malloc_unlock>
80006f42:	ec cc ff f8 	sub	r12,r6,-8
80006f46:	d8 32       	popm	r0-r7,pc
80006f48:	12 96       	mov	r6,r9
80006f4a:	02 36       	cp.w	r6,r1
80006f4c:	cd 31       	brne	80006ef2 <_malloc_r+0x21e>
80006f4e:	2f f2       	sub	r2,-1
80006f50:	f1 d2 c0 02 	bfextu	r8,r2,0x0,0x2
80006f54:	c0 30       	breq	80006f5a <_malloc_r+0x286>
80006f56:	2f 81       	sub	r1,-8
80006f58:	cc bb       	rjmp	80006eee <_malloc_r+0x21a>
80006f5a:	1c 98       	mov	r8,lr
80006f5c:	f3 d3 c0 02 	bfextu	r9,r3,0x0,0x2
80006f60:	c0 81       	brne	80006f70 <_malloc_r+0x29c>
80006f62:	68 19       	ld.w	r9,r4[0x4]
80006f64:	f6 08 11 ff 	rsub	r8,r11,-1
80006f68:	f3 e8 00 08 	and	r8,r9,r8
80006f6c:	89 18       	st.w	r4[0x4],r8
80006f6e:	c0 78       	rjmp	80006f7c <_malloc_r+0x2a8>
80006f70:	f0 c9 00 08 	sub	r9,r8,8
80006f74:	20 13       	sub	r3,1
80006f76:	70 08       	ld.w	r8,r8[0x0]
80006f78:	12 38       	cp.w	r8,r9
80006f7a:	cf 10       	breq	80006f5c <_malloc_r+0x288>
80006f7c:	a1 7b       	lsl	r11,0x1
80006f7e:	68 18       	ld.w	r8,r4[0x4]
80006f80:	10 3b       	cp.w	r11,r8
80006f82:	e0 8b 00 0f 	brhi	80006fa0 <_malloc_r+0x2cc>
80006f86:	58 0b       	cp.w	r11,0
80006f88:	c0 c0       	breq	80006fa0 <_malloc_r+0x2cc>
80006f8a:	04 93       	mov	r3,r2
80006f8c:	c0 38       	rjmp	80006f92 <_malloc_r+0x2be>
80006f8e:	2f c3       	sub	r3,-4
80006f90:	a1 7b       	lsl	r11,0x1
80006f92:	f7 e8 00 09 	and	r9,r11,r8
80006f96:	ca 81       	brne	80006ee6 <_malloc_r+0x212>
80006f98:	cf bb       	rjmp	80006f8e <_malloc_r+0x2ba>
80006f9a:	d7 03       	nop
80006f9c:	00 00       	add	r0,r0
80006f9e:	01 04       	ld.w	r4,r0++
80006fa0:	68 23       	ld.w	r3,r4[0x8]
80006fa2:	66 12       	ld.w	r2,r3[0x4]
80006fa4:	e0 12 ff fc 	andl	r2,0xfffc
80006fa8:	0e 32       	cp.w	r2,r7
80006faa:	5f 39       	srlo	r9
80006fac:	e4 07 01 08 	sub	r8,r2,r7
80006fb0:	58 f8       	cp.w	r8,15
80006fb2:	5f aa       	srle	r10
80006fb4:	f5 e9 10 09 	or	r9,r10,r9
80006fb8:	e0 80 00 9a 	breq	800070ec <_malloc_r+0x418>
80006fbc:	4c 78       	lddpc	r8,800070d8 <_malloc_r+0x404>
80006fbe:	70 01       	ld.w	r1,r8[0x0]
80006fc0:	4c 78       	lddpc	r8,800070dc <_malloc_r+0x408>
80006fc2:	2f 01       	sub	r1,-16
80006fc4:	70 08       	ld.w	r8,r8[0x0]
80006fc6:	0e 01       	add	r1,r7
80006fc8:	5b f8       	cp.w	r8,-1
80006fca:	c0 40       	breq	80006fd2 <_malloc_r+0x2fe>
80006fcc:	28 11       	sub	r1,-127
80006fce:	e0 11 ff 80 	andl	r1,0xff80
80006fd2:	02 9b       	mov	r11,r1
80006fd4:	0a 9c       	mov	r12,r5
80006fd6:	e0 a0 05 43 	rcall	80007a5c <_sbrk_r>
80006fda:	18 96       	mov	r6,r12
80006fdc:	5b fc       	cp.w	r12,-1
80006fde:	c6 e0       	breq	800070ba <_malloc_r+0x3e6>
80006fe0:	e6 02 00 08 	add	r8,r3,r2
80006fe4:	10 3c       	cp.w	r12,r8
80006fe6:	c0 32       	brcc	80006fec <_malloc_r+0x318>
80006fe8:	08 33       	cp.w	r3,r4
80006fea:	c6 81       	brne	800070ba <_malloc_r+0x3e6>
80006fec:	4b da       	lddpc	r10,800070e0 <_malloc_r+0x40c>
80006fee:	74 09       	ld.w	r9,r10[0x0]
80006ff0:	e2 09 00 09 	add	r9,r1,r9
80006ff4:	95 09       	st.w	r10[0x0],r9
80006ff6:	10 36       	cp.w	r6,r8
80006ff8:	c0 a1       	brne	8000700c <_malloc_r+0x338>
80006ffa:	f5 d6 c0 07 	bfextu	r10,r6,0x0,0x7
80006ffe:	c0 71       	brne	8000700c <_malloc_r+0x338>
80007000:	e2 02 00 02 	add	r2,r1,r2
80007004:	68 28       	ld.w	r8,r4[0x8]
80007006:	a1 a2       	sbr	r2,0x0
80007008:	91 12       	st.w	r8[0x4],r2
8000700a:	c4 c8       	rjmp	800070a2 <_malloc_r+0x3ce>
8000700c:	4b 4a       	lddpc	r10,800070dc <_malloc_r+0x408>
8000700e:	74 0b       	ld.w	r11,r10[0x0]
80007010:	5b fb       	cp.w	r11,-1
80007012:	c0 31       	brne	80007018 <_malloc_r+0x344>
80007014:	95 06       	st.w	r10[0x0],r6
80007016:	c0 68       	rjmp	80007022 <_malloc_r+0x34e>
80007018:	ec 09 00 09 	add	r9,r6,r9
8000701c:	4b 1a       	lddpc	r10,800070e0 <_malloc_r+0x40c>
8000701e:	10 19       	sub	r9,r8
80007020:	95 09       	st.w	r10[0x0],r9
80007022:	f1 d6 c0 03 	bfextu	r8,r6,0x0,0x3
80007026:	f0 09 11 08 	rsub	r9,r8,8
8000702a:	58 08       	cp.w	r8,0
8000702c:	f2 08 17 10 	movne	r8,r9
80007030:	ed d8 e1 06 	addne	r6,r6,r8
80007034:	28 08       	sub	r8,-128
80007036:	ec 01 00 01 	add	r1,r6,r1
8000703a:	0a 9c       	mov	r12,r5
8000703c:	e3 d1 c0 07 	bfextu	r1,r1,0x0,0x7
80007040:	f0 01 01 01 	sub	r1,r8,r1
80007044:	02 9b       	mov	r11,r1
80007046:	e0 a0 05 0b 	rcall	80007a5c <_sbrk_r>
8000704a:	4a 68       	lddpc	r8,800070e0 <_malloc_r+0x40c>
8000704c:	5b fc       	cp.w	r12,-1
8000704e:	ec 0c 17 00 	moveq	r12,r6
80007052:	f9 b1 00 00 	moveq	r1,0
80007056:	70 09       	ld.w	r9,r8[0x0]
80007058:	0c 1c       	sub	r12,r6
8000705a:	89 26       	st.w	r4[0x8],r6
8000705c:	02 0c       	add	r12,r1
8000705e:	12 01       	add	r1,r9
80007060:	a1 ac       	sbr	r12,0x0
80007062:	91 01       	st.w	r8[0x0],r1
80007064:	8d 1c       	st.w	r6[0x4],r12
80007066:	08 33       	cp.w	r3,r4
80007068:	c1 d0       	breq	800070a2 <_malloc_r+0x3ce>
8000706a:	58 f2       	cp.w	r2,15
8000706c:	e0 8b 00 05 	brhi	80007076 <_malloc_r+0x3a2>
80007070:	30 18       	mov	r8,1
80007072:	8d 18       	st.w	r6[0x4],r8
80007074:	c2 38       	rjmp	800070ba <_malloc_r+0x3e6>
80007076:	30 59       	mov	r9,5
80007078:	20 c2       	sub	r2,12
8000707a:	e0 12 ff f8 	andl	r2,0xfff8
8000707e:	e6 02 00 08 	add	r8,r3,r2
80007082:	91 29       	st.w	r8[0x8],r9
80007084:	91 19       	st.w	r8[0x4],r9
80007086:	66 18       	ld.w	r8,r3[0x4]
80007088:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
8000708c:	e5 e8 10 08 	or	r8,r2,r8
80007090:	87 18       	st.w	r3[0x4],r8
80007092:	58 f2       	cp.w	r2,15
80007094:	e0 88 00 07 	brls	800070a2 <_malloc_r+0x3ce>
80007098:	e6 cb ff f8 	sub	r11,r3,-8
8000709c:	0a 9c       	mov	r12,r5
8000709e:	fe b0 fb 6d 	rcall	80006778 <_free_r>
800070a2:	49 19       	lddpc	r9,800070e4 <_malloc_r+0x410>
800070a4:	72 0a       	ld.w	r10,r9[0x0]
800070a6:	48 f8       	lddpc	r8,800070e0 <_malloc_r+0x40c>
800070a8:	70 08       	ld.w	r8,r8[0x0]
800070aa:	14 38       	cp.w	r8,r10
800070ac:	f3 f8 ba 00 	st.whi	r9[0x0],r8
800070b0:	48 e9       	lddpc	r9,800070e8 <_malloc_r+0x414>
800070b2:	72 0a       	ld.w	r10,r9[0x0]
800070b4:	14 38       	cp.w	r8,r10
800070b6:	f3 f8 ba 00 	st.whi	r9[0x0],r8
800070ba:	68 28       	ld.w	r8,r4[0x8]
800070bc:	70 18       	ld.w	r8,r8[0x4]
800070be:	e0 18 ff fc 	andl	r8,0xfffc
800070c2:	0e 38       	cp.w	r8,r7
800070c4:	5f 39       	srlo	r9
800070c6:	0e 18       	sub	r8,r7
800070c8:	58 f8       	cp.w	r8,15
800070ca:	5f aa       	srle	r10
800070cc:	f5 e9 10 09 	or	r9,r10,r9
800070d0:	c0 e0       	breq	800070ec <_malloc_r+0x418>
800070d2:	0a 9c       	mov	r12,r5
800070d4:	c4 cc       	rcall	8000716c <__malloc_unlock>
800070d6:	d8 3a       	popm	r0-r7,pc,r12=0
800070d8:	00 00       	add	r0,r0
800070da:	06 14       	sub	r4,r3
800070dc:	00 00       	add	r0,r0
800070de:	05 10       	ld.sh	r0,r2++
800070e0:	00 00       	add	r0,r0
800070e2:	06 18       	sub	r8,r3
800070e4:	00 00       	add	r0,r0
800070e6:	06 10       	sub	r0,r3
800070e8:	00 00       	add	r0,r0
800070ea:	06 0c       	add	r12,r3
800070ec:	68 26       	ld.w	r6,r4[0x8]
800070ee:	a1 a8       	sbr	r8,0x0
800070f0:	0e 99       	mov	r9,r7
800070f2:	a1 a9       	sbr	r9,0x0
800070f4:	8d 19       	st.w	r6[0x4],r9
800070f6:	ec 07 00 07 	add	r7,r6,r7
800070fa:	0a 9c       	mov	r12,r5
800070fc:	89 27       	st.w	r4[0x8],r7
800070fe:	8f 18       	st.w	r7[0x4],r8
80007100:	c3 6c       	rcall	8000716c <__malloc_unlock>
80007102:	ec cc ff f8 	sub	r12,r6,-8
80007106:	d8 32       	popm	r0-r7,pc

80007108 <memchr>:
80007108:	f7 db c0 08 	bfextu	r11,r11,0x0,0x8
8000710c:	c0 68       	rjmp	80007118 <memchr+0x10>
8000710e:	20 1a       	sub	r10,1
80007110:	19 88       	ld.ub	r8,r12[0x0]
80007112:	16 38       	cp.w	r8,r11
80007114:	5e 0c       	reteq	r12
80007116:	2f fc       	sub	r12,-1
80007118:	58 0a       	cp.w	r10,0
8000711a:	cf a1       	brne	8000710e <memchr+0x6>
8000711c:	5e fa       	retal	r10

8000711e <memmove>:
8000711e:	d4 01       	pushm	lr
80007120:	18 3b       	cp.w	r11,r12
80007122:	c1 92       	brcc	80007154 <memmove+0x36>
80007124:	f6 0a 00 09 	add	r9,r11,r10
80007128:	12 3c       	cp.w	r12,r9
8000712a:	c1 52       	brcc	80007154 <memmove+0x36>
8000712c:	f8 0a 00 0b 	add	r11,r12,r10
80007130:	30 08       	mov	r8,0
80007132:	c0 68       	rjmp	8000713e <memmove+0x20>
80007134:	f2 08 07 0e 	ld.ub	lr,r9[r8]
80007138:	20 1a       	sub	r10,1
8000713a:	f6 08 0b 0e 	st.b	r11[r8],lr
8000713e:	20 18       	sub	r8,1
80007140:	58 0a       	cp.w	r10,0
80007142:	cf 91       	brne	80007134 <memmove+0x16>
80007144:	d8 02       	popm	pc
80007146:	f6 08 07 09 	ld.ub	r9,r11[r8]
8000714a:	20 1a       	sub	r10,1
8000714c:	f8 08 0b 09 	st.b	r12[r8],r9
80007150:	2f f8       	sub	r8,-1
80007152:	c0 28       	rjmp	80007156 <memmove+0x38>
80007154:	30 08       	mov	r8,0
80007156:	58 0a       	cp.w	r10,0
80007158:	cf 71       	brne	80007146 <memmove+0x28>
8000715a:	d8 02       	popm	pc

8000715c <memset>:
8000715c:	18 98       	mov	r8,r12
8000715e:	c0 38       	rjmp	80007164 <memset+0x8>
80007160:	10 cb       	st.b	r8++,r11
80007162:	20 1a       	sub	r10,1
80007164:	58 0a       	cp.w	r10,0
80007166:	cf d1       	brne	80007160 <memset+0x4>
80007168:	5e fc       	retal	r12

8000716a <__malloc_lock>:
8000716a:	5e fc       	retal	r12

8000716c <__malloc_unlock>:
8000716c:	5e fc       	retal	r12

8000716e <__hi0bits>:
8000716e:	18 98       	mov	r8,r12
80007170:	e0 1c 00 00 	andl	r12,0x0
80007174:	f0 09 15 10 	lsl	r9,r8,0x10
80007178:	58 0c       	cp.w	r12,0
8000717a:	f2 08 17 00 	moveq	r8,r9
8000717e:	f9 bc 00 10 	moveq	r12,16
80007182:	f9 bc 01 00 	movne	r12,0
80007186:	10 9a       	mov	r10,r8
80007188:	f0 09 15 08 	lsl	r9,r8,0x8
8000718c:	e6 1a ff 00 	andh	r10,0xff00,COH
80007190:	f7 bc 00 f8 	subeq	r12,-8
80007194:	f2 08 17 00 	moveq	r8,r9
80007198:	10 9a       	mov	r10,r8
8000719a:	f0 09 15 04 	lsl	r9,r8,0x4
8000719e:	e6 1a f0 00 	andh	r10,0xf000,COH
800071a2:	f7 bc 00 fc 	subeq	r12,-4
800071a6:	f2 08 17 00 	moveq	r8,r9
800071aa:	10 9a       	mov	r10,r8
800071ac:	f0 09 15 02 	lsl	r9,r8,0x2
800071b0:	e6 1a c0 00 	andh	r10,0xc000,COH
800071b4:	f7 bc 00 fe 	subeq	r12,-2
800071b8:	f2 08 17 00 	moveq	r8,r9
800071bc:	58 08       	cp.w	r8,0
800071be:	5e 5c       	retlt	r12
800071c0:	ed b8 00 1e 	bld	r8,0x1e
800071c4:	f9 bc 01 20 	movne	r12,32
800071c8:	f7 bc 00 ff 	subeq	r12,-1
800071cc:	5e fc       	retal	r12

800071ce <__lo0bits>:
800071ce:	18 99       	mov	r9,r12
800071d0:	78 08       	ld.w	r8,r12[0x0]
800071d2:	f9 d8 c0 03 	bfextu	r12,r8,0x0,0x3
800071d6:	c1 50       	breq	80007200 <__lo0bits+0x32>
800071d8:	ed b8 00 00 	bld	r8,0x0
800071dc:	c0 21       	brne	800071e0 <__lo0bits+0x12>
800071de:	5e fd       	retal	0
800071e0:	10 9b       	mov	r11,r8
800071e2:	f0 0a 16 01 	lsr	r10,r8,0x1
800071e6:	e2 1b 00 02 	andl	r11,0x2,COH
800071ea:	a3 88       	lsr	r8,0x2
800071ec:	58 0b       	cp.w	r11,0
800071ee:	f3 fa 1a 00 	st.wne	r9[0x0],r10
800071f2:	f9 bc 01 01 	movne	r12,1
800071f6:	f3 f8 0a 00 	st.weq	r9[0x0],r8
800071fa:	f9 bc 00 02 	moveq	r12,2
800071fe:	5e fc       	retal	r12
80007200:	f5 d8 c0 10 	bfextu	r10,r8,0x0,0x10
80007204:	f0 0b 16 10 	lsr	r11,r8,0x10
80007208:	58 0a       	cp.w	r10,0
8000720a:	f6 08 17 00 	moveq	r8,r11
8000720e:	f9 bc 00 10 	moveq	r12,16
80007212:	f7 d8 c0 08 	bfextu	r11,r8,0x0,0x8
80007216:	f0 0a 16 08 	lsr	r10,r8,0x8
8000721a:	58 0b       	cp.w	r11,0
8000721c:	f7 bc 00 f8 	subeq	r12,-8
80007220:	f4 08 17 00 	moveq	r8,r10
80007224:	f7 d8 c0 04 	bfextu	r11,r8,0x0,0x4
80007228:	f0 0a 16 04 	lsr	r10,r8,0x4
8000722c:	58 0b       	cp.w	r11,0
8000722e:	f7 bc 00 fc 	subeq	r12,-4
80007232:	f4 08 17 00 	moveq	r8,r10
80007236:	f7 d8 c0 02 	bfextu	r11,r8,0x0,0x2
8000723a:	f0 0a 16 02 	lsr	r10,r8,0x2
8000723e:	58 0b       	cp.w	r11,0
80007240:	f7 bc 00 fe 	subeq	r12,-2
80007244:	f4 08 17 00 	moveq	r8,r10
80007248:	ed b8 00 00 	bld	r8,0x0
8000724c:	c0 60       	breq	80007258 <__lo0bits+0x8a>
8000724e:	a1 98       	lsr	r8,0x1
80007250:	c0 31       	brne	80007256 <__lo0bits+0x88>
80007252:	32 0c       	mov	r12,32
80007254:	5e fc       	retal	r12
80007256:	2f fc       	sub	r12,-1
80007258:	93 08       	st.w	r9[0x0],r8
8000725a:	5e fc       	retal	r12

8000725c <__mcmp>:
8000725c:	d4 01       	pushm	lr
8000725e:	18 98       	mov	r8,r12
80007260:	76 49       	ld.w	r9,r11[0x10]
80007262:	78 4c       	ld.w	r12,r12[0x10]
80007264:	12 1c       	sub	r12,r9
80007266:	c1 31       	brne	8000728c <__mcmp+0x30>
80007268:	2f b9       	sub	r9,-5
8000726a:	a3 69       	lsl	r9,0x2
8000726c:	12 0b       	add	r11,r9
8000726e:	f0 09 00 09 	add	r9,r8,r9
80007272:	2e c8       	sub	r8,-20
80007274:	13 4e       	ld.w	lr,--r9
80007276:	17 4a       	ld.w	r10,--r11
80007278:	14 3e       	cp.w	lr,r10
8000727a:	c0 60       	breq	80007286 <__mcmp+0x2a>
8000727c:	f9 bc 03 ff 	movlo	r12,-1
80007280:	f9 bc 02 01 	movhs	r12,1
80007284:	d8 02       	popm	pc
80007286:	10 39       	cp.w	r9,r8
80007288:	fe 9b ff f6 	brhi	80007274 <__mcmp+0x18>
8000728c:	d8 02       	popm	pc
8000728e:	d7 03       	nop

80007290 <_Bfree>:
80007290:	d4 21       	pushm	r4-r7,lr
80007292:	18 97       	mov	r7,r12
80007294:	16 95       	mov	r5,r11
80007296:	78 96       	ld.w	r6,r12[0x24]
80007298:	58 06       	cp.w	r6,0
8000729a:	c0 91       	brne	800072ac <_Bfree+0x1c>
8000729c:	31 0c       	mov	r12,16
8000729e:	fe b0 fd 13 	rcall	80006cc4 <malloc>
800072a2:	99 36       	st.w	r12[0xc],r6
800072a4:	8f 9c       	st.w	r7[0x24],r12
800072a6:	99 16       	st.w	r12[0x4],r6
800072a8:	99 26       	st.w	r12[0x8],r6
800072aa:	99 06       	st.w	r12[0x0],r6
800072ac:	58 05       	cp.w	r5,0
800072ae:	c0 90       	breq	800072c0 <_Bfree+0x30>
800072b0:	6a 19       	ld.w	r9,r5[0x4]
800072b2:	6e 98       	ld.w	r8,r7[0x24]
800072b4:	70 38       	ld.w	r8,r8[0xc]
800072b6:	f0 09 03 2a 	ld.w	r10,r8[r9<<0x2]
800072ba:	8b 0a       	st.w	r5[0x0],r10
800072bc:	f0 09 09 25 	st.w	r8[r9<<0x2],r5
800072c0:	d8 22       	popm	r4-r7,pc
800072c2:	d7 03       	nop

800072c4 <_Balloc>:
800072c4:	d4 21       	pushm	r4-r7,lr
800072c6:	18 97       	mov	r7,r12
800072c8:	16 96       	mov	r6,r11
800072ca:	78 95       	ld.w	r5,r12[0x24]
800072cc:	58 05       	cp.w	r5,0
800072ce:	c0 91       	brne	800072e0 <_Balloc+0x1c>
800072d0:	31 0c       	mov	r12,16
800072d2:	fe b0 fc f9 	rcall	80006cc4 <malloc>
800072d6:	99 35       	st.w	r12[0xc],r5
800072d8:	8f 9c       	st.w	r7[0x24],r12
800072da:	99 15       	st.w	r12[0x4],r5
800072dc:	99 25       	st.w	r12[0x8],r5
800072de:	99 05       	st.w	r12[0x0],r5
800072e0:	6e 95       	ld.w	r5,r7[0x24]
800072e2:	6a 38       	ld.w	r8,r5[0xc]
800072e4:	58 08       	cp.w	r8,0
800072e6:	c0 b1       	brne	800072fc <_Balloc+0x38>
800072e8:	31 0a       	mov	r10,16
800072ea:	30 4b       	mov	r11,4
800072ec:	0e 9c       	mov	r12,r7
800072ee:	e0 a0 04 af 	rcall	80007c4c <_calloc_r>
800072f2:	8b 3c       	st.w	r5[0xc],r12
800072f4:	6e 98       	ld.w	r8,r7[0x24]
800072f6:	70 3c       	ld.w	r12,r8[0xc]
800072f8:	58 0c       	cp.w	r12,0
800072fa:	c1 b0       	breq	80007330 <_Balloc+0x6c>
800072fc:	6e 98       	ld.w	r8,r7[0x24]
800072fe:	70 38       	ld.w	r8,r8[0xc]
80007300:	f0 06 00 28 	add	r8,r8,r6<<0x2
80007304:	70 0c       	ld.w	r12,r8[0x0]
80007306:	58 0c       	cp.w	r12,0
80007308:	c0 40       	breq	80007310 <_Balloc+0x4c>
8000730a:	78 09       	ld.w	r9,r12[0x0]
8000730c:	91 09       	st.w	r8[0x0],r9
8000730e:	c0 e8       	rjmp	8000732a <_Balloc+0x66>
80007310:	0e 9c       	mov	r12,r7
80007312:	30 17       	mov	r7,1
80007314:	0e 9b       	mov	r11,r7
80007316:	ee 06 09 47 	lsl	r7,r7,r6
8000731a:	ee ca ff fb 	sub	r10,r7,-5
8000731e:	a3 6a       	lsl	r10,0x2
80007320:	e0 a0 04 96 	rcall	80007c4c <_calloc_r>
80007324:	c0 60       	breq	80007330 <_Balloc+0x6c>
80007326:	99 16       	st.w	r12[0x4],r6
80007328:	99 27       	st.w	r12[0x8],r7
8000732a:	30 08       	mov	r8,0
8000732c:	99 38       	st.w	r12[0xc],r8
8000732e:	99 48       	st.w	r12[0x10],r8
80007330:	d8 22       	popm	r4-r7,pc
80007332:	d7 03       	nop

80007334 <__d2b>:
80007334:	d4 31       	pushm	r0-r7,lr
80007336:	20 2d       	sub	sp,8
80007338:	16 93       	mov	r3,r11
8000733a:	12 96       	mov	r6,r9
8000733c:	10 95       	mov	r5,r8
8000733e:	14 92       	mov	r2,r10
80007340:	30 1b       	mov	r11,1
80007342:	cc 1f       	rcall	800072c4 <_Balloc>
80007344:	f3 d3 c0 14 	bfextu	r9,r3,0x0,0x14
80007348:	50 09       	stdsp	sp[0x0],r9
8000734a:	f1 d3 c0 1f 	bfextu	r8,r3,0x0,0x1f
8000734e:	f0 01 16 14 	lsr	r1,r8,0x14
80007352:	fc 1a 00 10 	movh	r10,0x10
80007356:	f3 da e1 39 	orne	r9,r9,r10
8000735a:	fb f9 1a 00 	st.wne	sp[0x0],r9
8000735e:	18 94       	mov	r4,r12
80007360:	58 02       	cp.w	r2,0
80007362:	c1 d0       	breq	8000739c <__d2b+0x68>
80007364:	fa cc ff f8 	sub	r12,sp,-8
80007368:	18 d2       	st.w	--r12,r2
8000736a:	c3 2f       	rcall	800071ce <__lo0bits>
8000736c:	40 18       	lddsp	r8,sp[0x4]
8000736e:	c0 d0       	breq	80007388 <__d2b+0x54>
80007370:	40 09       	lddsp	r9,sp[0x0]
80007372:	f8 0a 11 20 	rsub	r10,r12,32
80007376:	f2 0a 09 4a 	lsl	r10,r9,r10
8000737a:	f5 e8 10 08 	or	r8,r10,r8
8000737e:	89 58       	st.w	r4[0x14],r8
80007380:	f2 0c 0a 49 	lsr	r9,r9,r12
80007384:	50 09       	stdsp	sp[0x0],r9
80007386:	c0 28       	rjmp	8000738a <__d2b+0x56>
80007388:	89 58       	st.w	r4[0x14],r8
8000738a:	40 08       	lddsp	r8,sp[0x0]
8000738c:	58 08       	cp.w	r8,0
8000738e:	f9 b3 01 02 	movne	r3,2
80007392:	f9 b3 00 01 	moveq	r3,1
80007396:	89 68       	st.w	r4[0x18],r8
80007398:	89 43       	st.w	r4[0x10],r3
8000739a:	c0 88       	rjmp	800073aa <__d2b+0x76>
8000739c:	1a 9c       	mov	r12,sp
8000739e:	c1 8f       	rcall	800071ce <__lo0bits>
800073a0:	30 13       	mov	r3,1
800073a2:	40 08       	lddsp	r8,sp[0x0]
800073a4:	2e 0c       	sub	r12,-32
800073a6:	89 43       	st.w	r4[0x10],r3
800073a8:	89 58       	st.w	r4[0x14],r8
800073aa:	58 01       	cp.w	r1,0
800073ac:	c0 90       	breq	800073be <__d2b+0x8a>
800073ae:	e2 c1 04 33 	sub	r1,r1,1075
800073b2:	18 01       	add	r1,r12
800073b4:	8d 01       	st.w	r6[0x0],r1
800073b6:	f8 0c 11 35 	rsub	r12,r12,53
800073ba:	8b 0c       	st.w	r5[0x0],r12
800073bc:	c0 c8       	rjmp	800073d4 <__d2b+0xa0>
800073be:	e6 c8 ff fc 	sub	r8,r3,-4
800073c2:	f8 cc 04 32 	sub	r12,r12,1074
800073c6:	a5 73       	lsl	r3,0x5
800073c8:	8d 0c       	st.w	r6[0x0],r12
800073ca:	e8 08 03 2c 	ld.w	r12,r4[r8<<0x2]
800073ce:	cd 0e       	rcall	8000716e <__hi0bits>
800073d0:	18 13       	sub	r3,r12
800073d2:	8b 03       	st.w	r5[0x0],r3
800073d4:	08 9c       	mov	r12,r4
800073d6:	2f ed       	sub	sp,-8
800073d8:	d8 32       	popm	r0-r7,pc
800073da:	d7 03       	nop

800073dc <__mdiff>:
800073dc:	d4 31       	pushm	r0-r7,lr
800073de:	74 48       	ld.w	r8,r10[0x10]
800073e0:	76 45       	ld.w	r5,r11[0x10]
800073e2:	16 97       	mov	r7,r11
800073e4:	14 96       	mov	r6,r10
800073e6:	10 15       	sub	r5,r8
800073e8:	c1 31       	brne	8000740e <__mdiff+0x32>
800073ea:	2f b8       	sub	r8,-5
800073ec:	ee ce ff ec 	sub	lr,r7,-20
800073f0:	a3 68       	lsl	r8,0x2
800073f2:	f4 08 00 0b 	add	r11,r10,r8
800073f6:	ee 08 00 08 	add	r8,r7,r8
800073fa:	11 4a       	ld.w	r10,--r8
800073fc:	17 49       	ld.w	r9,--r11
800073fe:	12 3a       	cp.w	r10,r9
80007400:	c0 30       	breq	80007406 <__mdiff+0x2a>
80007402:	c0 e2       	brcc	8000741e <__mdiff+0x42>
80007404:	c0 78       	rjmp	80007412 <__mdiff+0x36>
80007406:	1c 38       	cp.w	r8,lr
80007408:	fe 9b ff f9 	brhi	800073fa <__mdiff+0x1e>
8000740c:	c4 98       	rjmp	8000749e <__mdiff+0xc2>
8000740e:	58 05       	cp.w	r5,0
80007410:	c0 64       	brge	8000741c <__mdiff+0x40>
80007412:	0e 98       	mov	r8,r7
80007414:	30 15       	mov	r5,1
80007416:	0c 97       	mov	r7,r6
80007418:	10 96       	mov	r6,r8
8000741a:	c0 28       	rjmp	8000741e <__mdiff+0x42>
8000741c:	30 05       	mov	r5,0
8000741e:	6e 1b       	ld.w	r11,r7[0x4]
80007420:	c5 2f       	rcall	800072c4 <_Balloc>
80007422:	6e 49       	ld.w	r9,r7[0x10]
80007424:	6c 44       	ld.w	r4,r6[0x10]
80007426:	99 35       	st.w	r12[0xc],r5
80007428:	2f b4       	sub	r4,-5
8000742a:	f2 c5 ff fb 	sub	r5,r9,-5
8000742e:	ec 04 00 24 	add	r4,r6,r4<<0x2
80007432:	ee 05 00 25 	add	r5,r7,r5<<0x2
80007436:	2e c6       	sub	r6,-20
80007438:	2e c7       	sub	r7,-20
8000743a:	f8 c8 ff ec 	sub	r8,r12,-20
8000743e:	30 0a       	mov	r10,0
80007440:	0f 0e       	ld.w	lr,r7++
80007442:	0d 0b       	ld.w	r11,r6++
80007444:	fc 02 16 10 	lsr	r2,lr,0x10
80007448:	f6 03 16 10 	lsr	r3,r11,0x10
8000744c:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
80007450:	e4 03 01 03 	sub	r3,r2,r3
80007454:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
80007458:	fc 0b 01 0b 	sub	r11,lr,r11
8000745c:	f6 0a 00 0a 	add	r10,r11,r10
80007460:	b0 1a       	st.h	r8[0x2],r10
80007462:	b1 4a       	asr	r10,0x10
80007464:	e6 0a 00 0a 	add	r10,r3,r10
80007468:	b0 0a       	st.h	r8[0x0],r10
8000746a:	2f c8       	sub	r8,-4
8000746c:	b1 4a       	asr	r10,0x10
8000746e:	08 36       	cp.w	r6,r4
80007470:	ce 83       	brcs	80007440 <__mdiff+0x64>
80007472:	c0 d8       	rjmp	8000748c <__mdiff+0xb0>
80007474:	0f 0b       	ld.w	r11,r7++
80007476:	f6 0e 16 10 	lsr	lr,r11,0x10
8000747a:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
8000747e:	16 0a       	add	r10,r11
80007480:	b0 1a       	st.h	r8[0x2],r10
80007482:	b1 4a       	asr	r10,0x10
80007484:	1c 0a       	add	r10,lr
80007486:	b0 0a       	st.h	r8[0x0],r10
80007488:	2f c8       	sub	r8,-4
8000748a:	b1 4a       	asr	r10,0x10
8000748c:	0a 37       	cp.w	r7,r5
8000748e:	cf 33       	brcs	80007474 <__mdiff+0x98>
80007490:	c0 28       	rjmp	80007494 <__mdiff+0xb8>
80007492:	20 19       	sub	r9,1
80007494:	11 4a       	ld.w	r10,--r8
80007496:	58 0a       	cp.w	r10,0
80007498:	cf d0       	breq	80007492 <__mdiff+0xb6>
8000749a:	99 49       	st.w	r12[0x10],r9
8000749c:	d8 32       	popm	r0-r7,pc
8000749e:	30 0b       	mov	r11,0
800074a0:	c1 2f       	rcall	800072c4 <_Balloc>
800074a2:	30 18       	mov	r8,1
800074a4:	99 48       	st.w	r12[0x10],r8
800074a6:	30 08       	mov	r8,0
800074a8:	99 58       	st.w	r12[0x14],r8
800074aa:	d8 32       	popm	r0-r7,pc

800074ac <__lshift>:
800074ac:	d4 31       	pushm	r0-r7,lr
800074ae:	16 97       	mov	r7,r11
800074b0:	76 46       	ld.w	r6,r11[0x10]
800074b2:	f4 02 14 05 	asr	r2,r10,0x5
800074b6:	2f f6       	sub	r6,-1
800074b8:	14 93       	mov	r3,r10
800074ba:	18 94       	mov	r4,r12
800074bc:	04 06       	add	r6,r2
800074be:	76 1b       	ld.w	r11,r11[0x4]
800074c0:	6e 28       	ld.w	r8,r7[0x8]
800074c2:	c0 38       	rjmp	800074c8 <__lshift+0x1c>
800074c4:	2f fb       	sub	r11,-1
800074c6:	a1 78       	lsl	r8,0x1
800074c8:	10 36       	cp.w	r6,r8
800074ca:	fe 99 ff fd 	brgt	800074c4 <__lshift+0x18>
800074ce:	08 9c       	mov	r12,r4
800074d0:	cf ae       	rcall	800072c4 <_Balloc>
800074d2:	30 09       	mov	r9,0
800074d4:	18 95       	mov	r5,r12
800074d6:	f8 c8 ff ec 	sub	r8,r12,-20
800074da:	12 9a       	mov	r10,r9
800074dc:	c0 38       	rjmp	800074e2 <__lshift+0x36>
800074de:	10 aa       	st.w	r8++,r10
800074e0:	2f f9       	sub	r9,-1
800074e2:	04 39       	cp.w	r9,r2
800074e4:	cf d5       	brlt	800074de <__lshift+0x32>
800074e6:	6e 4b       	ld.w	r11,r7[0x10]
800074e8:	e7 d3 c0 05 	bfextu	r3,r3,0x0,0x5
800074ec:	2f bb       	sub	r11,-5
800074ee:	ee c9 ff ec 	sub	r9,r7,-20
800074f2:	ee 0b 00 2b 	add	r11,r7,r11<<0x2
800074f6:	58 03       	cp.w	r3,0
800074f8:	c1 30       	breq	8000751e <__lshift+0x72>
800074fa:	e6 0c 11 20 	rsub	r12,r3,32
800074fe:	30 0a       	mov	r10,0
80007500:	72 02       	ld.w	r2,r9[0x0]
80007502:	e4 03 09 42 	lsl	r2,r2,r3
80007506:	04 4a       	or	r10,r2
80007508:	10 aa       	st.w	r8++,r10
8000750a:	13 0a       	ld.w	r10,r9++
8000750c:	f4 0c 0a 4a 	lsr	r10,r10,r12
80007510:	16 39       	cp.w	r9,r11
80007512:	cf 73       	brcs	80007500 <__lshift+0x54>
80007514:	91 0a       	st.w	r8[0x0],r10
80007516:	58 0a       	cp.w	r10,0
80007518:	c0 70       	breq	80007526 <__lshift+0x7a>
8000751a:	2f f6       	sub	r6,-1
8000751c:	c0 58       	rjmp	80007526 <__lshift+0x7a>
8000751e:	13 0a       	ld.w	r10,r9++
80007520:	10 aa       	st.w	r8++,r10
80007522:	16 39       	cp.w	r9,r11
80007524:	cf d3       	brcs	8000751e <__lshift+0x72>
80007526:	08 9c       	mov	r12,r4
80007528:	20 16       	sub	r6,1
8000752a:	0e 9b       	mov	r11,r7
8000752c:	8b 46       	st.w	r5[0x10],r6
8000752e:	cb 1e       	rcall	80007290 <_Bfree>
80007530:	0a 9c       	mov	r12,r5
80007532:	d8 32       	popm	r0-r7,pc

80007534 <__multiply>:
80007534:	d4 31       	pushm	r0-r7,lr
80007536:	20 2d       	sub	sp,8
80007538:	76 49       	ld.w	r9,r11[0x10]
8000753a:	74 48       	ld.w	r8,r10[0x10]
8000753c:	16 96       	mov	r6,r11
8000753e:	14 95       	mov	r5,r10
80007540:	10 39       	cp.w	r9,r8
80007542:	ec 08 17 50 	movlt	r8,r6
80007546:	ea 06 17 50 	movlt	r6,r5
8000754a:	f0 05 17 50 	movlt	r5,r8
8000754e:	6c 28       	ld.w	r8,r6[0x8]
80007550:	76 43       	ld.w	r3,r11[0x10]
80007552:	74 42       	ld.w	r2,r10[0x10]
80007554:	76 1b       	ld.w	r11,r11[0x4]
80007556:	e4 03 00 07 	add	r7,r2,r3
8000755a:	10 37       	cp.w	r7,r8
8000755c:	f7 bb 09 ff 	subgt	r11,-1
80007560:	cb 2e       	rcall	800072c4 <_Balloc>
80007562:	ee c4 ff fb 	sub	r4,r7,-5
80007566:	f8 c9 ff ec 	sub	r9,r12,-20
8000756a:	f8 04 00 24 	add	r4,r12,r4<<0x2
8000756e:	30 0a       	mov	r10,0
80007570:	12 98       	mov	r8,r9
80007572:	c0 28       	rjmp	80007576 <__multiply+0x42>
80007574:	10 aa       	st.w	r8++,r10
80007576:	08 38       	cp.w	r8,r4
80007578:	cf e3       	brcs	80007574 <__multiply+0x40>
8000757a:	2f b3       	sub	r3,-5
8000757c:	2f b2       	sub	r2,-5
8000757e:	ec 03 00 23 	add	r3,r6,r3<<0x2
80007582:	ea 02 00 22 	add	r2,r5,r2<<0x2
80007586:	ec cb ff ec 	sub	r11,r6,-20
8000758a:	50 12       	stdsp	sp[0x4],r2
8000758c:	ea ca ff ec 	sub	r10,r5,-20
80007590:	c4 48       	rjmp	80007618 <__multiply+0xe4>
80007592:	94 95       	ld.uh	r5,r10[0x2]
80007594:	58 05       	cp.w	r5,0
80007596:	c2 00       	breq	800075d6 <__multiply+0xa2>
80007598:	12 98       	mov	r8,r9
8000759a:	16 96       	mov	r6,r11
8000759c:	30 0e       	mov	lr,0
8000759e:	50 09       	stdsp	sp[0x0],r9
800075a0:	0d 02       	ld.w	r2,r6++
800075a2:	e4 00 16 10 	lsr	r0,r2,0x10
800075a6:	70 01       	ld.w	r1,r8[0x0]
800075a8:	70 09       	ld.w	r9,r8[0x0]
800075aa:	b1 81       	lsr	r1,0x10
800075ac:	e5 d2 c0 10 	bfextu	r2,r2,0x0,0x10
800075b0:	e0 05 03 41 	mac	r1,r0,r5
800075b4:	ab 32       	mul	r2,r5
800075b6:	e1 d9 c0 10 	bfextu	r0,r9,0x0,0x10
800075ba:	00 02       	add	r2,r0
800075bc:	e4 0e 00 0e 	add	lr,r2,lr
800075c0:	b0 1e       	st.h	r8[0x2],lr
800075c2:	b1 8e       	lsr	lr,0x10
800075c4:	1c 01       	add	r1,lr
800075c6:	b0 01       	st.h	r8[0x0],r1
800075c8:	e2 0e 16 10 	lsr	lr,r1,0x10
800075cc:	2f c8       	sub	r8,-4
800075ce:	06 36       	cp.w	r6,r3
800075d0:	ce 83       	brcs	800075a0 <__multiply+0x6c>
800075d2:	40 09       	lddsp	r9,sp[0x0]
800075d4:	91 0e       	st.w	r8[0x0],lr
800075d6:	94 86       	ld.uh	r6,r10[0x0]
800075d8:	58 06       	cp.w	r6,0
800075da:	c1 d0       	breq	80007614 <__multiply+0xe0>
800075dc:	72 02       	ld.w	r2,r9[0x0]
800075de:	12 98       	mov	r8,r9
800075e0:	16 9e       	mov	lr,r11
800075e2:	30 05       	mov	r5,0
800075e4:	b0 12       	st.h	r8[0x2],r2
800075e6:	1d 01       	ld.w	r1,lr++
800075e8:	90 82       	ld.uh	r2,r8[0x0]
800075ea:	e1 d1 c0 10 	bfextu	r0,r1,0x0,0x10
800075ee:	ad 30       	mul	r0,r6
800075f0:	e0 02 00 02 	add	r2,r0,r2
800075f4:	e4 05 00 05 	add	r5,r2,r5
800075f8:	b0 05       	st.h	r8[0x0],r5
800075fa:	b1 85       	lsr	r5,0x10
800075fc:	b1 81       	lsr	r1,0x10
800075fe:	2f c8       	sub	r8,-4
80007600:	ad 31       	mul	r1,r6
80007602:	90 92       	ld.uh	r2,r8[0x2]
80007604:	e2 02 00 02 	add	r2,r1,r2
80007608:	0a 02       	add	r2,r5
8000760a:	e4 05 16 10 	lsr	r5,r2,0x10
8000760e:	06 3e       	cp.w	lr,r3
80007610:	ce a3       	brcs	800075e4 <__multiply+0xb0>
80007612:	91 02       	st.w	r8[0x0],r2
80007614:	2f ca       	sub	r10,-4
80007616:	2f c9       	sub	r9,-4
80007618:	40 18       	lddsp	r8,sp[0x4]
8000761a:	10 3a       	cp.w	r10,r8
8000761c:	cb b3       	brcs	80007592 <__multiply+0x5e>
8000761e:	c0 28       	rjmp	80007622 <__multiply+0xee>
80007620:	20 17       	sub	r7,1
80007622:	58 07       	cp.w	r7,0
80007624:	e0 8a 00 05 	brle	8000762e <__multiply+0xfa>
80007628:	09 48       	ld.w	r8,--r4
8000762a:	58 08       	cp.w	r8,0
8000762c:	cf a0       	breq	80007620 <__multiply+0xec>
8000762e:	99 47       	st.w	r12[0x10],r7
80007630:	2f ed       	sub	sp,-8
80007632:	d8 32       	popm	r0-r7,pc

80007634 <__i2b>:
80007634:	d4 21       	pushm	r4-r7,lr
80007636:	16 97       	mov	r7,r11
80007638:	30 1b       	mov	r11,1
8000763a:	c4 5e       	rcall	800072c4 <_Balloc>
8000763c:	30 19       	mov	r9,1
8000763e:	99 57       	st.w	r12[0x14],r7
80007640:	99 49       	st.w	r12[0x10],r9
80007642:	d8 22       	popm	r4-r7,pc

80007644 <__multadd>:
80007644:	d4 31       	pushm	r0-r7,lr
80007646:	30 08       	mov	r8,0
80007648:	12 95       	mov	r5,r9
8000764a:	16 97       	mov	r7,r11
8000764c:	18 96       	mov	r6,r12
8000764e:	76 44       	ld.w	r4,r11[0x10]
80007650:	f6 c9 ff ec 	sub	r9,r11,-20
80007654:	72 0b       	ld.w	r11,r9[0x0]
80007656:	f6 0c 16 10 	lsr	r12,r11,0x10
8000765a:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
8000765e:	f4 0c 02 4c 	mul	r12,r10,r12
80007662:	f4 0b 03 45 	mac	r5,r10,r11
80007666:	f7 d5 c0 10 	bfextu	r11,r5,0x0,0x10
8000766a:	b1 85       	lsr	r5,0x10
8000766c:	18 05       	add	r5,r12
8000766e:	ea 0c 15 10 	lsl	r12,r5,0x10
80007672:	f8 0b 00 0b 	add	r11,r12,r11
80007676:	12 ab       	st.w	r9++,r11
80007678:	2f f8       	sub	r8,-1
8000767a:	b1 85       	lsr	r5,0x10
8000767c:	08 38       	cp.w	r8,r4
8000767e:	ce b5       	brlt	80007654 <__multadd+0x10>
80007680:	58 05       	cp.w	r5,0
80007682:	c1 c0       	breq	800076ba <__multadd+0x76>
80007684:	6e 28       	ld.w	r8,r7[0x8]
80007686:	10 34       	cp.w	r4,r8
80007688:	c1 35       	brlt	800076ae <__multadd+0x6a>
8000768a:	6e 1b       	ld.w	r11,r7[0x4]
8000768c:	0c 9c       	mov	r12,r6
8000768e:	2f fb       	sub	r11,-1
80007690:	c1 ae       	rcall	800072c4 <_Balloc>
80007692:	6e 4a       	ld.w	r10,r7[0x10]
80007694:	ee cb ff f4 	sub	r11,r7,-12
80007698:	18 93       	mov	r3,r12
8000769a:	2f ea       	sub	r10,-2
8000769c:	2f 4c       	sub	r12,-12
8000769e:	a3 6a       	lsl	r10,0x2
800076a0:	fe b0 de 19 	rcall	800032d2 <memcpy>
800076a4:	0e 9b       	mov	r11,r7
800076a6:	0c 9c       	mov	r12,r6
800076a8:	fe b0 fd f4 	rcall	80007290 <_Bfree>
800076ac:	06 97       	mov	r7,r3
800076ae:	e8 c8 ff ff 	sub	r8,r4,-1
800076b2:	2f b4       	sub	r4,-5
800076b4:	8f 48       	st.w	r7[0x10],r8
800076b6:	ee 04 09 25 	st.w	r7[r4<<0x2],r5
800076ba:	0e 9c       	mov	r12,r7
800076bc:	d8 32       	popm	r0-r7,pc
800076be:	d7 03       	nop

800076c0 <__pow5mult>:
800076c0:	d4 31       	pushm	r0-r7,lr
800076c2:	14 96       	mov	r6,r10
800076c4:	18 97       	mov	r7,r12
800076c6:	16 94       	mov	r4,r11
800076c8:	f1 da c0 02 	bfextu	r8,r10,0x0,0x2
800076cc:	c0 80       	breq	800076dc <__pow5mult+0x1c>
800076ce:	20 18       	sub	r8,1
800076d0:	49 f9       	lddpc	r9,8000774c <__pow5mult+0x8c>
800076d2:	f2 08 03 2a 	ld.w	r10,r9[r8<<0x2]
800076d6:	30 09       	mov	r9,0
800076d8:	cb 6f       	rcall	80007644 <__multadd>
800076da:	18 94       	mov	r4,r12
800076dc:	a3 46       	asr	r6,0x2
800076de:	c3 40       	breq	80007746 <__pow5mult+0x86>
800076e0:	6e 95       	ld.w	r5,r7[0x24]
800076e2:	58 05       	cp.w	r5,0
800076e4:	c0 91       	brne	800076f6 <__pow5mult+0x36>
800076e6:	31 0c       	mov	r12,16
800076e8:	fe b0 fa ee 	rcall	80006cc4 <malloc>
800076ec:	99 35       	st.w	r12[0xc],r5
800076ee:	8f 9c       	st.w	r7[0x24],r12
800076f0:	99 15       	st.w	r12[0x4],r5
800076f2:	99 25       	st.w	r12[0x8],r5
800076f4:	99 05       	st.w	r12[0x0],r5
800076f6:	6e 93       	ld.w	r3,r7[0x24]
800076f8:	66 25       	ld.w	r5,r3[0x8]
800076fa:	58 05       	cp.w	r5,0
800076fc:	c0 c1       	brne	80007714 <__pow5mult+0x54>
800076fe:	e0 6b 02 71 	mov	r11,625
80007702:	0e 9c       	mov	r12,r7
80007704:	c9 8f       	rcall	80007634 <__i2b>
80007706:	87 2c       	st.w	r3[0x8],r12
80007708:	30 08       	mov	r8,0
8000770a:	18 95       	mov	r5,r12
8000770c:	99 08       	st.w	r12[0x0],r8
8000770e:	c0 38       	rjmp	80007714 <__pow5mult+0x54>
80007710:	06 9c       	mov	r12,r3
80007712:	18 95       	mov	r5,r12
80007714:	ed b6 00 00 	bld	r6,0x0
80007718:	c0 b1       	brne	8000772e <__pow5mult+0x6e>
8000771a:	08 9b       	mov	r11,r4
8000771c:	0a 9a       	mov	r10,r5
8000771e:	0e 9c       	mov	r12,r7
80007720:	c0 af       	rcall	80007534 <__multiply>
80007722:	08 9b       	mov	r11,r4
80007724:	18 93       	mov	r3,r12
80007726:	0e 9c       	mov	r12,r7
80007728:	06 94       	mov	r4,r3
8000772a:	fe b0 fd b3 	rcall	80007290 <_Bfree>
8000772e:	a1 56       	asr	r6,0x1
80007730:	c0 b0       	breq	80007746 <__pow5mult+0x86>
80007732:	6a 03       	ld.w	r3,r5[0x0]
80007734:	58 03       	cp.w	r3,0
80007736:	ce d1       	brne	80007710 <__pow5mult+0x50>
80007738:	0a 9a       	mov	r10,r5
8000773a:	0a 9b       	mov	r11,r5
8000773c:	0e 9c       	mov	r12,r7
8000773e:	cf be       	rcall	80007534 <__multiply>
80007740:	8b 0c       	st.w	r5[0x0],r12
80007742:	99 03       	st.w	r12[0x0],r3
80007744:	ce 7b       	rjmp	80007712 <__pow5mult+0x52>
80007746:	08 9c       	mov	r12,r4
80007748:	d8 32       	popm	r0-r7,pc
8000774a:	d7 03       	nop
8000774c:	80 00       	ld.sh	r0,r0[0x0]
8000774e:	98 d0       	ld.uh	r0,r12[0xa]

80007750 <_realloc_r>:
80007750:	d4 31       	pushm	r0-r7,lr
80007752:	20 1d       	sub	sp,4
80007754:	16 94       	mov	r4,r11
80007756:	18 92       	mov	r2,r12
80007758:	14 9b       	mov	r11,r10
8000775a:	58 04       	cp.w	r4,0
8000775c:	c0 51       	brne	80007766 <_realloc_r+0x16>
8000775e:	fe b0 fa bb 	rcall	80006cd4 <_malloc_r>
80007762:	18 95       	mov	r5,r12
80007764:	c5 59       	rjmp	80007a0e <_realloc_r+0x2be>
80007766:	50 0a       	stdsp	sp[0x0],r10
80007768:	fe b0 fd 01 	rcall	8000716a <__malloc_lock>
8000776c:	40 0b       	lddsp	r11,sp[0x0]
8000776e:	e8 c1 00 08 	sub	r1,r4,8
80007772:	f6 c6 ff f5 	sub	r6,r11,-11
80007776:	62 1c       	ld.w	r12,r1[0x4]
80007778:	59 66       	cp.w	r6,22
8000777a:	f9 b6 08 10 	movls	r6,16
8000777e:	f9 b8 0b f8 	movhi	r8,-8
80007782:	ed d8 eb 26 	andhi	r6,r6,r8
80007786:	16 36       	cp.w	r6,r11
80007788:	5f 38       	srlo	r8
8000778a:	f1 e6 13 f8 	or	r8,r8,r6>>0x1f
8000778e:	c0 50       	breq	80007798 <_realloc_r+0x48>
80007790:	30 c8       	mov	r8,12
80007792:	30 05       	mov	r5,0
80007794:	85 38       	st.w	r2[0xc],r8
80007796:	c3 c9       	rjmp	80007a0e <_realloc_r+0x2be>
80007798:	18 90       	mov	r0,r12
8000779a:	e0 10 ff fc 	andl	r0,0xfffc
8000779e:	0c 30       	cp.w	r0,r6
800077a0:	e0 84 01 0c 	brge	800079b8 <_realloc_r+0x268>
800077a4:	4c 98       	lddpc	r8,800078c8 <_realloc_r+0x178>
800077a6:	e2 00 00 09 	add	r9,r1,r0
800077aa:	70 25       	ld.w	r5,r8[0x8]
800077ac:	0a 39       	cp.w	r9,r5
800077ae:	c0 90       	breq	800077c0 <_realloc_r+0x70>
800077b0:	72 1a       	ld.w	r10,r9[0x4]
800077b2:	a1 ca       	cbr	r10,0x0
800077b4:	f2 0a 00 0a 	add	r10,r9,r10
800077b8:	74 1a       	ld.w	r10,r10[0x4]
800077ba:	ed ba 00 00 	bld	r10,0x0
800077be:	c2 20       	breq	80007802 <_realloc_r+0xb2>
800077c0:	72 1a       	ld.w	r10,r9[0x4]
800077c2:	e0 1a ff fc 	andl	r10,0xfffc
800077c6:	f4 00 00 03 	add	r3,r10,r0
800077ca:	0a 39       	cp.w	r9,r5
800077cc:	c1 31       	brne	800077f2 <_realloc_r+0xa2>
800077ce:	ec c7 ff f0 	sub	r7,r6,-16
800077d2:	0e 33       	cp.w	r3,r7
800077d4:	c1 95       	brlt	80007806 <_realloc_r+0xb6>
800077d6:	e2 06 00 09 	add	r9,r1,r6
800077da:	0c 13       	sub	r3,r6
800077dc:	a1 a3       	sbr	r3,0x0
800077de:	93 13       	st.w	r9[0x4],r3
800077e0:	91 29       	st.w	r8[0x8],r9
800077e2:	04 9c       	mov	r12,r2
800077e4:	62 18       	ld.w	r8,r1[0x4]
800077e6:	08 95       	mov	r5,r4
800077e8:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
800077ec:	10 46       	or	r6,r8
800077ee:	83 16       	st.w	r1[0x4],r6
800077f0:	c0 d9       	rjmp	80007a0a <_realloc_r+0x2ba>
800077f2:	0c 33       	cp.w	r3,r6
800077f4:	c0 95       	brlt	80007806 <_realloc_r+0xb6>
800077f6:	72 28       	ld.w	r8,r9[0x8]
800077f8:	02 97       	mov	r7,r1
800077fa:	72 39       	ld.w	r9,r9[0xc]
800077fc:	93 28       	st.w	r9[0x8],r8
800077fe:	91 39       	st.w	r8[0xc],r9
80007800:	cd e8       	rjmp	800079bc <_realloc_r+0x26c>
80007802:	30 0a       	mov	r10,0
80007804:	14 99       	mov	r9,r10
80007806:	ed bc 00 00 	bld	r12,0x0
8000780a:	e0 80 00 97 	breq	80007938 <_realloc_r+0x1e8>
8000780e:	62 07       	ld.w	r7,r1[0x0]
80007810:	e2 07 01 07 	sub	r7,r1,r7
80007814:	6e 1c       	ld.w	r12,r7[0x4]
80007816:	e0 1c ff fc 	andl	r12,0xfffc
8000781a:	58 09       	cp.w	r9,0
8000781c:	c5 80       	breq	800078cc <_realloc_r+0x17c>
8000781e:	f8 00 00 03 	add	r3,r12,r0
80007822:	0a 39       	cp.w	r9,r5
80007824:	c4 81       	brne	800078b4 <_realloc_r+0x164>
80007826:	14 03       	add	r3,r10
80007828:	ec c9 ff f0 	sub	r9,r6,-16
8000782c:	12 33       	cp.w	r3,r9
8000782e:	c4 f5       	brlt	800078cc <_realloc_r+0x17c>
80007830:	6e 3a       	ld.w	r10,r7[0xc]
80007832:	6e 29       	ld.w	r9,r7[0x8]
80007834:	95 29       	st.w	r10[0x8],r9
80007836:	93 3a       	st.w	r9[0xc],r10
80007838:	ee c5 ff f8 	sub	r5,r7,-8
8000783c:	e0 ca 00 04 	sub	r10,r0,4
80007840:	e0 4a 00 24 	cp.w	r10,36
80007844:	e0 8b 00 25 	brhi	8000788e <_realloc_r+0x13e>
80007848:	0a 99       	mov	r9,r5
8000784a:	59 3a       	cp.w	r10,19
8000784c:	e0 88 00 1a 	brls	80007880 <_realloc_r+0x130>
80007850:	09 09       	ld.w	r9,r4++
80007852:	8b 09       	st.w	r5[0x0],r9
80007854:	09 09       	ld.w	r9,r4++
80007856:	8f 39       	st.w	r7[0xc],r9
80007858:	ee c9 ff f0 	sub	r9,r7,-16
8000785c:	59 ba       	cp.w	r10,27
8000785e:	e0 88 00 11 	brls	80007880 <_realloc_r+0x130>
80007862:	09 0b       	ld.w	r11,r4++
80007864:	93 0b       	st.w	r9[0x0],r11
80007866:	09 09       	ld.w	r9,r4++
80007868:	8f 59       	st.w	r7[0x14],r9
8000786a:	ee c9 ff e8 	sub	r9,r7,-24
8000786e:	e0 4a 00 24 	cp.w	r10,36
80007872:	c0 71       	brne	80007880 <_realloc_r+0x130>
80007874:	09 0a       	ld.w	r10,r4++
80007876:	93 0a       	st.w	r9[0x0],r10
80007878:	ee c9 ff e0 	sub	r9,r7,-32
8000787c:	09 0a       	ld.w	r10,r4++
8000787e:	8f 7a       	st.w	r7[0x1c],r10
80007880:	09 0a       	ld.w	r10,r4++
80007882:	12 aa       	st.w	r9++,r10
80007884:	68 0a       	ld.w	r10,r4[0x0]
80007886:	93 0a       	st.w	r9[0x0],r10
80007888:	68 1a       	ld.w	r10,r4[0x4]
8000788a:	93 1a       	st.w	r9[0x4],r10
8000788c:	c0 78       	rjmp	8000789a <_realloc_r+0x14a>
8000788e:	50 08       	stdsp	sp[0x0],r8
80007890:	08 9b       	mov	r11,r4
80007892:	0a 9c       	mov	r12,r5
80007894:	fe b0 fc 45 	rcall	8000711e <memmove>
80007898:	40 08       	lddsp	r8,sp[0x0]
8000789a:	ee 06 00 09 	add	r9,r7,r6
8000789e:	0c 13       	sub	r3,r6
800078a0:	a1 a3       	sbr	r3,0x0
800078a2:	93 13       	st.w	r9[0x4],r3
800078a4:	91 29       	st.w	r8[0x8],r9
800078a6:	04 9c       	mov	r12,r2
800078a8:	6e 18       	ld.w	r8,r7[0x4]
800078aa:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
800078ae:	10 46       	or	r6,r8
800078b0:	8f 16       	st.w	r7[0x4],r6
800078b2:	ca c8       	rjmp	80007a0a <_realloc_r+0x2ba>
800078b4:	14 03       	add	r3,r10
800078b6:	0c 33       	cp.w	r3,r6
800078b8:	c0 a5       	brlt	800078cc <_realloc_r+0x17c>
800078ba:	72 28       	ld.w	r8,r9[0x8]
800078bc:	72 39       	ld.w	r9,r9[0xc]
800078be:	93 28       	st.w	r9[0x8],r8
800078c0:	91 39       	st.w	r8[0xc],r9
800078c2:	6e 28       	ld.w	r8,r7[0x8]
800078c4:	6e 39       	ld.w	r9,r7[0xc]
800078c6:	c0 98       	rjmp	800078d8 <_realloc_r+0x188>
800078c8:	00 00       	add	r0,r0
800078ca:	01 04       	ld.w	r4,r0++
800078cc:	f8 00 00 03 	add	r3,r12,r0
800078d0:	0c 33       	cp.w	r3,r6
800078d2:	c3 35       	brlt	80007938 <_realloc_r+0x1e8>
800078d4:	6e 39       	ld.w	r9,r7[0xc]
800078d6:	6e 28       	ld.w	r8,r7[0x8]
800078d8:	93 28       	st.w	r9[0x8],r8
800078da:	91 39       	st.w	r8[0xc],r9
800078dc:	e0 ca 00 04 	sub	r10,r0,4
800078e0:	ee cc ff f8 	sub	r12,r7,-8
800078e4:	e0 4a 00 24 	cp.w	r10,36
800078e8:	e0 8b 00 24 	brhi	80007930 <_realloc_r+0x1e0>
800078ec:	59 3a       	cp.w	r10,19
800078ee:	e0 88 00 1a 	brls	80007922 <_realloc_r+0x1d2>
800078f2:	09 08       	ld.w	r8,r4++
800078f4:	99 08       	st.w	r12[0x0],r8
800078f6:	09 08       	ld.w	r8,r4++
800078f8:	8f 38       	st.w	r7[0xc],r8
800078fa:	ee cc ff f0 	sub	r12,r7,-16
800078fe:	59 ba       	cp.w	r10,27
80007900:	e0 88 00 11 	brls	80007922 <_realloc_r+0x1d2>
80007904:	09 08       	ld.w	r8,r4++
80007906:	99 08       	st.w	r12[0x0],r8
80007908:	09 08       	ld.w	r8,r4++
8000790a:	8f 58       	st.w	r7[0x14],r8
8000790c:	ee cc ff e8 	sub	r12,r7,-24
80007910:	e0 4a 00 24 	cp.w	r10,36
80007914:	c0 71       	brne	80007922 <_realloc_r+0x1d2>
80007916:	09 08       	ld.w	r8,r4++
80007918:	99 08       	st.w	r12[0x0],r8
8000791a:	ee cc ff e0 	sub	r12,r7,-32
8000791e:	09 08       	ld.w	r8,r4++
80007920:	8f 78       	st.w	r7[0x1c],r8
80007922:	09 08       	ld.w	r8,r4++
80007924:	18 a8       	st.w	r12++,r8
80007926:	68 08       	ld.w	r8,r4[0x0]
80007928:	99 08       	st.w	r12[0x0],r8
8000792a:	68 18       	ld.w	r8,r4[0x4]
8000792c:	99 18       	st.w	r12[0x4],r8
8000792e:	c4 78       	rjmp	800079bc <_realloc_r+0x26c>
80007930:	08 9b       	mov	r11,r4
80007932:	fe b0 fb f6 	rcall	8000711e <memmove>
80007936:	c4 38       	rjmp	800079bc <_realloc_r+0x26c>
80007938:	04 9c       	mov	r12,r2
8000793a:	fe b0 f9 cd 	rcall	80006cd4 <_malloc_r>
8000793e:	18 95       	mov	r5,r12
80007940:	c3 a0       	breq	800079b4 <_realloc_r+0x264>
80007942:	62 18       	ld.w	r8,r1[0x4]
80007944:	f8 c9 00 08 	sub	r9,r12,8
80007948:	a1 c8       	cbr	r8,0x0
8000794a:	e2 08 00 08 	add	r8,r1,r8
8000794e:	10 39       	cp.w	r9,r8
80007950:	c0 71       	brne	8000795e <_realloc_r+0x20e>
80007952:	72 13       	ld.w	r3,r9[0x4]
80007954:	02 97       	mov	r7,r1
80007956:	e0 13 ff fc 	andl	r3,0xfffc
8000795a:	00 03       	add	r3,r0
8000795c:	c3 08       	rjmp	800079bc <_realloc_r+0x26c>
8000795e:	e0 ca 00 04 	sub	r10,r0,4
80007962:	e0 4a 00 24 	cp.w	r10,36
80007966:	e0 8b 00 20 	brhi	800079a6 <_realloc_r+0x256>
8000796a:	08 99       	mov	r9,r4
8000796c:	18 98       	mov	r8,r12
8000796e:	59 3a       	cp.w	r10,19
80007970:	e0 88 00 14 	brls	80007998 <_realloc_r+0x248>
80007974:	13 0b       	ld.w	r11,r9++
80007976:	10 ab       	st.w	r8++,r11
80007978:	13 0b       	ld.w	r11,r9++
8000797a:	10 ab       	st.w	r8++,r11
8000797c:	59 ba       	cp.w	r10,27
8000797e:	e0 88 00 0d 	brls	80007998 <_realloc_r+0x248>
80007982:	13 0b       	ld.w	r11,r9++
80007984:	10 ab       	st.w	r8++,r11
80007986:	13 0b       	ld.w	r11,r9++
80007988:	10 ab       	st.w	r8++,r11
8000798a:	e0 4a 00 24 	cp.w	r10,36
8000798e:	c0 51       	brne	80007998 <_realloc_r+0x248>
80007990:	13 0a       	ld.w	r10,r9++
80007992:	10 aa       	st.w	r8++,r10
80007994:	13 0a       	ld.w	r10,r9++
80007996:	10 aa       	st.w	r8++,r10
80007998:	13 0a       	ld.w	r10,r9++
8000799a:	10 aa       	st.w	r8++,r10
8000799c:	72 0a       	ld.w	r10,r9[0x0]
8000799e:	91 0a       	st.w	r8[0x0],r10
800079a0:	72 19       	ld.w	r9,r9[0x4]
800079a2:	91 19       	st.w	r8[0x4],r9
800079a4:	c0 48       	rjmp	800079ac <_realloc_r+0x25c>
800079a6:	08 9b       	mov	r11,r4
800079a8:	fe b0 fb bb 	rcall	8000711e <memmove>
800079ac:	08 9b       	mov	r11,r4
800079ae:	04 9c       	mov	r12,r2
800079b0:	fe b0 f6 e4 	rcall	80006778 <_free_r>
800079b4:	04 9c       	mov	r12,r2
800079b6:	c2 a8       	rjmp	80007a0a <_realloc_r+0x2ba>
800079b8:	00 93       	mov	r3,r0
800079ba:	02 97       	mov	r7,r1
800079bc:	e6 06 01 09 	sub	r9,r3,r6
800079c0:	6e 18       	ld.w	r8,r7[0x4]
800079c2:	58 f9       	cp.w	r9,15
800079c4:	e0 88 00 16 	brls	800079f0 <_realloc_r+0x2a0>
800079c8:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
800079cc:	ed e8 10 08 	or	r8,r6,r8
800079d0:	8f 18       	st.w	r7[0x4],r8
800079d2:	12 98       	mov	r8,r9
800079d4:	a1 a8       	sbr	r8,0x0
800079d6:	ee 06 00 0b 	add	r11,r7,r6
800079da:	f6 09 00 09 	add	r9,r11,r9
800079de:	97 18       	st.w	r11[0x4],r8
800079e0:	72 18       	ld.w	r8,r9[0x4]
800079e2:	a1 a8       	sbr	r8,0x0
800079e4:	2f 8b       	sub	r11,-8
800079e6:	93 18       	st.w	r9[0x4],r8
800079e8:	04 9c       	mov	r12,r2
800079ea:	fe b0 f6 c7 	rcall	80006778 <_free_r>
800079ee:	c0 b8       	rjmp	80007a04 <_realloc_r+0x2b4>
800079f0:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
800079f4:	e7 e8 10 08 	or	r8,r3,r8
800079f8:	8f 18       	st.w	r7[0x4],r8
800079fa:	ee 03 00 03 	add	r3,r7,r3
800079fe:	66 18       	ld.w	r8,r3[0x4]
80007a00:	a1 a8       	sbr	r8,0x0
80007a02:	87 18       	st.w	r3[0x4],r8
80007a04:	04 9c       	mov	r12,r2
80007a06:	ee c5 ff f8 	sub	r5,r7,-8
80007a0a:	fe b0 fb b1 	rcall	8000716c <__malloc_unlock>
80007a0e:	0a 9c       	mov	r12,r5
80007a10:	2f fd       	sub	sp,-4
80007a12:	d8 32       	popm	r0-r7,pc

80007a14 <__isinfd>:
80007a14:	14 98       	mov	r8,r10
80007a16:	fc 19 7f f0 	movh	r9,0x7ff0
80007a1a:	f5 db c0 1f 	bfextu	r10,r11,0x0,0x1f
80007a1e:	f0 0b 11 00 	rsub	r11,r8,0
80007a22:	f7 e8 10 08 	or	r8,r11,r8
80007a26:	f5 e8 13 f8 	or	r8,r10,r8>>0x1f
80007a2a:	f2 08 01 08 	sub	r8,r9,r8
80007a2e:	f0 0c 11 00 	rsub	r12,r8,0
80007a32:	f9 e8 10 08 	or	r8,r12,r8
80007a36:	f0 0c 14 1f 	asr	r12,r8,0x1f
80007a3a:	2f fc       	sub	r12,-1
80007a3c:	5e fc       	retal	r12

80007a3e <__isnand>:
80007a3e:	14 98       	mov	r8,r10
80007a40:	f5 db c0 1f 	bfextu	r10,r11,0x0,0x1f
80007a44:	f0 0c 11 00 	rsub	r12,r8,0
80007a48:	10 4c       	or	r12,r8
80007a4a:	fc 18 7f f0 	movh	r8,0x7ff0
80007a4e:	f5 ec 13 fc 	or	r12,r10,r12>>0x1f
80007a52:	f0 0c 01 0c 	sub	r12,r8,r12
80007a56:	bf 9c       	lsr	r12,0x1f
80007a58:	5e fc       	retal	r12
80007a5a:	d7 03       	nop

80007a5c <_sbrk_r>:
80007a5c:	d4 21       	pushm	r4-r7,lr
80007a5e:	30 08       	mov	r8,0
80007a60:	18 97       	mov	r7,r12
80007a62:	48 66       	lddpc	r6,80007a78 <_sbrk_r+0x1c>
80007a64:	16 9c       	mov	r12,r11
80007a66:	8d 08       	st.w	r6[0x0],r8
80007a68:	cc 0c       	rcall	80007be8 <_sbrk>
80007a6a:	5b fc       	cp.w	r12,-1
80007a6c:	c0 51       	brne	80007a76 <_sbrk_r+0x1a>
80007a6e:	6c 08       	ld.w	r8,r6[0x0]
80007a70:	58 08       	cp.w	r8,0
80007a72:	ef f8 1a 03 	st.wne	r7[0xc],r8
80007a76:	d8 22       	popm	r4-r7,pc
80007a78:	00 00       	add	r0,r0
80007a7a:	06 44       	or	r4,r3

80007a7c <__sclose>:
80007a7c:	d4 01       	pushm	lr
80007a7e:	96 7b       	ld.sh	r11,r11[0xe]
80007a80:	c1 2d       	rcall	80007ca4 <_close_r>
80007a82:	d8 02       	popm	pc

80007a84 <__sseek>:
80007a84:	d4 21       	pushm	r4-r7,lr
80007a86:	16 97       	mov	r7,r11
80007a88:	96 7b       	ld.sh	r11,r11[0xe]
80007a8a:	c9 bd       	rcall	80007dc0 <_lseek_r>
80007a8c:	8e 68       	ld.sh	r8,r7[0xc]
80007a8e:	10 99       	mov	r9,r8
80007a90:	ad c9       	cbr	r9,0xc
80007a92:	5b fc       	cp.w	r12,-1
80007a94:	ef f9 0c 06 	st.heq	r7[0xc],r9
80007a98:	ef fc 1a 15 	st.wne	r7[0x54],r12
80007a9c:	e0 69 10 00 	mov	r9,4096
80007aa0:	f1 d9 e1 38 	orne	r8,r8,r9
80007aa4:	ef f8 1c 06 	st.hne	r7[0xc],r8
80007aa8:	d8 22       	popm	r4-r7,pc
80007aaa:	d7 03       	nop

80007aac <__swrite>:
80007aac:	d4 21       	pushm	r4-r7,lr
80007aae:	96 68       	ld.sh	r8,r11[0xc]
80007ab0:	16 97       	mov	r7,r11
80007ab2:	14 95       	mov	r5,r10
80007ab4:	12 94       	mov	r4,r9
80007ab6:	e2 18 01 00 	andl	r8,0x100,COH
80007aba:	18 96       	mov	r6,r12
80007abc:	c0 50       	breq	80007ac6 <__swrite+0x1a>
80007abe:	30 29       	mov	r9,2
80007ac0:	30 0a       	mov	r10,0
80007ac2:	96 7b       	ld.sh	r11,r11[0xe]
80007ac4:	c7 ed       	rcall	80007dc0 <_lseek_r>
80007ac6:	8e 68       	ld.sh	r8,r7[0xc]
80007ac8:	ad c8       	cbr	r8,0xc
80007aca:	08 99       	mov	r9,r4
80007acc:	0a 9a       	mov	r10,r5
80007ace:	8e 7b       	ld.sh	r11,r7[0xe]
80007ad0:	0c 9c       	mov	r12,r6
80007ad2:	ae 68       	st.h	r7[0xc],r8
80007ad4:	ca 8c       	rcall	80007c24 <_write_r>
80007ad6:	d8 22       	popm	r4-r7,pc

80007ad8 <__sread>:
80007ad8:	d4 21       	pushm	r4-r7,lr
80007ada:	16 97       	mov	r7,r11
80007adc:	96 7b       	ld.sh	r11,r11[0xe]
80007ade:	c8 5d       	rcall	80007de8 <_read_r>
80007ae0:	c0 65       	brlt	80007aec <__sread+0x14>
80007ae2:	6f 58       	ld.w	r8,r7[0x54]
80007ae4:	18 08       	add	r8,r12
80007ae6:	ef 48 00 54 	st.w	r7[84],r8
80007aea:	d8 22       	popm	r4-r7,pc
80007aec:	8e 68       	ld.sh	r8,r7[0xc]
80007aee:	ad c8       	cbr	r8,0xc
80007af0:	ae 68       	st.h	r7[0xc],r8
80007af2:	d8 22       	popm	r4-r7,pc

80007af4 <strlen>:
80007af4:	30 09       	mov	r9,0
80007af6:	18 98       	mov	r8,r12
80007af8:	c0 28       	rjmp	80007afc <strlen+0x8>
80007afa:	2f f8       	sub	r8,-1
80007afc:	11 8a       	ld.ub	r10,r8[0x0]
80007afe:	f2 0a 18 00 	cp.b	r10,r9
80007b02:	cf c1       	brne	80007afa <strlen+0x6>
80007b04:	f0 0c 01 0c 	sub	r12,r8,r12
80007b08:	5e fc       	retal	r12
80007b0a:	d7 03       	nop

80007b0c <_close>:
80007b0c:	30 28       	mov	r8,2
80007b0e:	d6 73       	breakpoint
80007b10:	3f fc       	mov	r12,-1
80007b12:	35 8b       	mov	r11,88
80007b14:	58 0c       	cp.w	r12,0
80007b16:	5e 4c       	retge	r12
80007b18:	48 2a       	lddpc	r10,80007b20 <_close+0x14>
80007b1a:	95 0b       	st.w	r10[0x0],r11
80007b1c:	5e fc       	retal	r12
80007b1e:	d7 03       	nop
80007b20:	00 00       	add	r0,r0
80007b22:	06 44       	or	r4,r3

80007b24 <_lseek>:
80007b24:	30 58       	mov	r8,5
80007b26:	d6 73       	breakpoint
80007b28:	3f fc       	mov	r12,-1
80007b2a:	35 8b       	mov	r11,88
80007b2c:	58 0c       	cp.w	r12,0
80007b2e:	5e 4c       	retge	r12
80007b30:	48 2a       	lddpc	r10,80007b38 <_lseek+0x14>
80007b32:	95 0b       	st.w	r10[0x0],r11
80007b34:	5e fc       	retal	r12
80007b36:	d7 03       	nop
80007b38:	00 00       	add	r0,r0
80007b3a:	06 44       	or	r4,r3

80007b3c <_read>:
80007b3c:	30 38       	mov	r8,3
80007b3e:	d6 73       	breakpoint
80007b40:	3f fc       	mov	r12,-1
80007b42:	35 8b       	mov	r11,88
80007b44:	58 0c       	cp.w	r12,0
80007b46:	5e 4c       	retge	r12
80007b48:	48 2a       	lddpc	r10,80007b50 <_read+0x14>
80007b4a:	95 0b       	st.w	r10[0x0],r11
80007b4c:	5e fc       	retal	r12
80007b4e:	d7 03       	nop
80007b50:	00 00       	add	r0,r0
80007b52:	06 44       	or	r4,r3

80007b54 <_write>:
80007b54:	30 48       	mov	r8,4
80007b56:	d6 73       	breakpoint
80007b58:	3f fc       	mov	r12,-1
80007b5a:	35 8b       	mov	r11,88
80007b5c:	58 0c       	cp.w	r12,0
80007b5e:	5e 4c       	retge	r12
80007b60:	48 2a       	lddpc	r10,80007b68 <_write+0x14>
80007b62:	95 0b       	st.w	r10[0x0],r11
80007b64:	5e fc       	retal	r12
80007b66:	d7 03       	nop
80007b68:	00 00       	add	r0,r0
80007b6a:	06 44       	or	r4,r3

80007b6c <isatty>:
80007b6c:	30 b8       	mov	r8,11
80007b6e:	d6 73       	breakpoint
80007b70:	3f fc       	mov	r12,-1
80007b72:	35 8b       	mov	r11,88
80007b74:	58 0c       	cp.w	r12,0
80007b76:	5e 4c       	retge	r12
80007b78:	48 2a       	lddpc	r10,80007b80 <isatty+0x14>
80007b7a:	95 0b       	st.w	r10[0x0],r11
80007b7c:	5e fc       	retal	r12
80007b7e:	d7 03       	nop
80007b80:	00 00       	add	r0,r0
80007b82:	06 44       	or	r4,r3

80007b84 <_fstat_host>:
80007b84:	30 98       	mov	r8,9
80007b86:	d6 73       	breakpoint
80007b88:	3f fc       	mov	r12,-1
80007b8a:	35 8b       	mov	r11,88
80007b8c:	58 0c       	cp.w	r12,0
80007b8e:	5e 4c       	retge	r12
80007b90:	48 2a       	lddpc	r10,80007b98 <_fstat_host+0x14>
80007b92:	95 0b       	st.w	r10[0x0],r11
80007b94:	5e fc       	retal	r12
80007b96:	d7 03       	nop
80007b98:	00 00       	add	r0,r0
80007b9a:	06 44       	or	r4,r3

80007b9c <_fstat>:
80007b9c:	d4 21       	pushm	r4-r7,lr
80007b9e:	21 0d       	sub	sp,64
80007ba0:	16 97       	mov	r7,r11
80007ba2:	1a 9b       	mov	r11,sp
80007ba4:	cf 0f       	rcall	80007b84 <_fstat_host>
80007ba6:	c0 34       	brge	80007bac <_fstat+0x10>
80007ba8:	3f fc       	mov	r12,-1
80007baa:	c1 c8       	rjmp	80007be2 <_fstat+0x46>
80007bac:	40 08       	lddsp	r8,sp[0x0]
80007bae:	ae 08       	st.h	r7[0x0],r8
80007bb0:	40 18       	lddsp	r8,sp[0x4]
80007bb2:	ae 18       	st.h	r7[0x2],r8
80007bb4:	40 28       	lddsp	r8,sp[0x8]
80007bb6:	8f 18       	st.w	r7[0x4],r8
80007bb8:	40 38       	lddsp	r8,sp[0xc]
80007bba:	ae 48       	st.h	r7[0x8],r8
80007bbc:	40 48       	lddsp	r8,sp[0x10]
80007bbe:	ae 58       	st.h	r7[0xa],r8
80007bc0:	40 58       	lddsp	r8,sp[0x14]
80007bc2:	ae 68       	st.h	r7[0xc],r8
80007bc4:	40 68       	lddsp	r8,sp[0x18]
80007bc6:	ae 78       	st.h	r7[0xe],r8
80007bc8:	40 88       	lddsp	r8,sp[0x20]
80007bca:	8f 48       	st.w	r7[0x10],r8
80007bcc:	40 a8       	lddsp	r8,sp[0x28]
80007bce:	8f b8       	st.w	r7[0x2c],r8
80007bd0:	40 c8       	lddsp	r8,sp[0x30]
80007bd2:	8f c8       	st.w	r7[0x30],r8
80007bd4:	40 d8       	lddsp	r8,sp[0x34]
80007bd6:	8f 58       	st.w	r7[0x14],r8
80007bd8:	40 e8       	lddsp	r8,sp[0x38]
80007bda:	30 0c       	mov	r12,0
80007bdc:	8f 78       	st.w	r7[0x1c],r8
80007bde:	40 f8       	lddsp	r8,sp[0x3c]
80007be0:	8f 98       	st.w	r7[0x24],r8
80007be2:	2f 0d       	sub	sp,-64
80007be4:	d8 22       	popm	r4-r7,pc
80007be6:	d7 03       	nop

80007be8 <_sbrk>:
80007be8:	d4 01       	pushm	lr
80007bea:	48 c8       	lddpc	r8,80007c18 <_sbrk+0x30>
80007bec:	70 09       	ld.w	r9,r8[0x0]
80007bee:	58 09       	cp.w	r9,0
80007bf0:	c0 31       	brne	80007bf6 <_sbrk+0xe>
80007bf2:	48 b9       	lddpc	r9,80007c1c <_sbrk+0x34>
80007bf4:	91 09       	st.w	r8[0x0],r9
80007bf6:	48 99       	lddpc	r9,80007c18 <_sbrk+0x30>
80007bf8:	48 aa       	lddpc	r10,80007c20 <_sbrk+0x38>
80007bfa:	72 08       	ld.w	r8,r9[0x0]
80007bfc:	f0 0c 00 0c 	add	r12,r8,r12
80007c00:	14 3c       	cp.w	r12,r10
80007c02:	e0 8b 00 04 	brhi	80007c0a <_sbrk+0x22>
80007c06:	93 0c       	st.w	r9[0x0],r12
80007c08:	c0 58       	rjmp	80007c12 <_sbrk+0x2a>
80007c0a:	c5 dc       	rcall	80007cc4 <__errno>
80007c0c:	30 c8       	mov	r8,12
80007c0e:	99 08       	st.w	r12[0x0],r8
80007c10:	3f f8       	mov	r8,-1
80007c12:	10 9c       	mov	r12,r8
80007c14:	d8 02       	popm	pc
80007c16:	d7 03       	nop
80007c18:	00 00       	add	r0,r0
80007c1a:	06 40       	or	r0,r3
80007c1c:	00 00       	add	r0,r0
80007c1e:	06 48       	or	r8,r3
80007c20:	00 00       	add	r0,r0
80007c22:	f0 00       	*unknown*

80007c24 <_write_r>:
80007c24:	d4 21       	pushm	r4-r7,lr
80007c26:	16 98       	mov	r8,r11
80007c28:	18 97       	mov	r7,r12
80007c2a:	10 9c       	mov	r12,r8
80007c2c:	30 08       	mov	r8,0
80007c2e:	14 9b       	mov	r11,r10
80007c30:	48 66       	lddpc	r6,80007c48 <_write_r+0x24>
80007c32:	12 9a       	mov	r10,r9
80007c34:	8d 08       	st.w	r6[0x0],r8
80007c36:	c8 ff       	rcall	80007b54 <_write>
80007c38:	5b fc       	cp.w	r12,-1
80007c3a:	c0 51       	brne	80007c44 <_write_r+0x20>
80007c3c:	6c 08       	ld.w	r8,r6[0x0]
80007c3e:	58 08       	cp.w	r8,0
80007c40:	ef f8 1a 03 	st.wne	r7[0xc],r8
80007c44:	d8 22       	popm	r4-r7,pc
80007c46:	d7 03       	nop
80007c48:	00 00       	add	r0,r0
80007c4a:	06 44       	or	r4,r3

80007c4c <_calloc_r>:
80007c4c:	d4 21       	pushm	r4-r7,lr
80007c4e:	f4 0b 02 4b 	mul	r11,r10,r11
80007c52:	fe b0 f8 41 	rcall	80006cd4 <_malloc_r>
80007c56:	18 97       	mov	r7,r12
80007c58:	c2 30       	breq	80007c9e <_calloc_r+0x52>
80007c5a:	f8 fa ff fc 	ld.w	r10,r12[-4]
80007c5e:	e0 1a ff fc 	andl	r10,0xfffc
80007c62:	20 4a       	sub	r10,4
80007c64:	e0 4a 00 24 	cp.w	r10,36
80007c68:	e0 8b 00 18 	brhi	80007c98 <_calloc_r+0x4c>
80007c6c:	18 98       	mov	r8,r12
80007c6e:	59 3a       	cp.w	r10,19
80007c70:	e0 88 00 0f 	brls	80007c8e <_calloc_r+0x42>
80007c74:	30 09       	mov	r9,0
80007c76:	10 a9       	st.w	r8++,r9
80007c78:	10 a9       	st.w	r8++,r9
80007c7a:	59 ba       	cp.w	r10,27
80007c7c:	e0 88 00 09 	brls	80007c8e <_calloc_r+0x42>
80007c80:	10 a9       	st.w	r8++,r9
80007c82:	10 a9       	st.w	r8++,r9
80007c84:	e0 4a 00 24 	cp.w	r10,36
80007c88:	c0 31       	brne	80007c8e <_calloc_r+0x42>
80007c8a:	10 a9       	st.w	r8++,r9
80007c8c:	10 a9       	st.w	r8++,r9
80007c8e:	30 09       	mov	r9,0
80007c90:	10 a9       	st.w	r8++,r9
80007c92:	91 19       	st.w	r8[0x4],r9
80007c94:	91 09       	st.w	r8[0x0],r9
80007c96:	c0 48       	rjmp	80007c9e <_calloc_r+0x52>
80007c98:	30 0b       	mov	r11,0
80007c9a:	fe b0 fa 61 	rcall	8000715c <memset>
80007c9e:	0e 9c       	mov	r12,r7
80007ca0:	d8 22       	popm	r4-r7,pc
80007ca2:	d7 03       	nop

80007ca4 <_close_r>:
80007ca4:	d4 21       	pushm	r4-r7,lr
80007ca6:	30 08       	mov	r8,0
80007ca8:	18 97       	mov	r7,r12
80007caa:	48 66       	lddpc	r6,80007cc0 <_close_r+0x1c>
80007cac:	16 9c       	mov	r12,r11
80007cae:	8d 08       	st.w	r6[0x0],r8
80007cb0:	c2 ef       	rcall	80007b0c <_close>
80007cb2:	5b fc       	cp.w	r12,-1
80007cb4:	c0 51       	brne	80007cbe <_close_r+0x1a>
80007cb6:	6c 08       	ld.w	r8,r6[0x0]
80007cb8:	58 08       	cp.w	r8,0
80007cba:	ef f8 1a 03 	st.wne	r7[0xc],r8
80007cbe:	d8 22       	popm	r4-r7,pc
80007cc0:	00 00       	add	r0,r0
80007cc2:	06 44       	or	r4,r3

80007cc4 <__errno>:
80007cc4:	48 28       	lddpc	r8,80007ccc <__errno+0x8>
80007cc6:	70 0c       	ld.w	r12,r8[0x0]
80007cc8:	2f 4c       	sub	r12,-12
80007cca:	5e fc       	retal	r12
80007ccc:	00 00       	add	r0,r0
80007cce:	01 00       	ld.w	r0,r0++

80007cd0 <_fclose_r>:
80007cd0:	d4 21       	pushm	r4-r7,lr
80007cd2:	18 96       	mov	r6,r12
80007cd4:	16 97       	mov	r7,r11
80007cd6:	58 0b       	cp.w	r11,0
80007cd8:	c0 31       	brne	80007cde <_fclose_r+0xe>
80007cda:	16 95       	mov	r5,r11
80007cdc:	c5 08       	rjmp	80007d7c <_fclose_r+0xac>
80007cde:	fe b0 f4 5d 	rcall	80006598 <__sfp_lock_acquire>
80007ce2:	58 06       	cp.w	r6,0
80007ce4:	c0 70       	breq	80007cf2 <_fclose_r+0x22>
80007ce6:	6c 68       	ld.w	r8,r6[0x18]
80007ce8:	58 08       	cp.w	r8,0
80007cea:	c0 41       	brne	80007cf2 <_fclose_r+0x22>
80007cec:	0c 9c       	mov	r12,r6
80007cee:	fe b0 f4 a9 	rcall	80006640 <__sinit>
80007cf2:	4a 48       	lddpc	r8,80007d80 <_fclose_r+0xb0>
80007cf4:	10 37       	cp.w	r7,r8
80007cf6:	c0 31       	brne	80007cfc <_fclose_r+0x2c>
80007cf8:	6c 07       	ld.w	r7,r6[0x0]
80007cfa:	c0 a8       	rjmp	80007d0e <_fclose_r+0x3e>
80007cfc:	4a 28       	lddpc	r8,80007d84 <_fclose_r+0xb4>
80007cfe:	10 37       	cp.w	r7,r8
80007d00:	c0 31       	brne	80007d06 <_fclose_r+0x36>
80007d02:	6c 17       	ld.w	r7,r6[0x4]
80007d04:	c0 58       	rjmp	80007d0e <_fclose_r+0x3e>
80007d06:	4a 18       	lddpc	r8,80007d88 <_fclose_r+0xb8>
80007d08:	10 37       	cp.w	r7,r8
80007d0a:	ed f7 00 02 	ld.weq	r7,r6[0x8]
80007d0e:	8e 69       	ld.sh	r9,r7[0xc]
80007d10:	30 08       	mov	r8,0
80007d12:	f0 09 19 00 	cp.h	r9,r8
80007d16:	c0 51       	brne	80007d20 <_fclose_r+0x50>
80007d18:	fe b0 f4 41 	rcall	8000659a <__sfp_lock_release>
80007d1c:	30 05       	mov	r5,0
80007d1e:	c2 f8       	rjmp	80007d7c <_fclose_r+0xac>
80007d20:	0e 9b       	mov	r11,r7
80007d22:	0c 9c       	mov	r12,r6
80007d24:	fe b0 f3 b2 	rcall	80006488 <_fflush_r>
80007d28:	6e c8       	ld.w	r8,r7[0x30]
80007d2a:	18 95       	mov	r5,r12
80007d2c:	58 08       	cp.w	r8,0
80007d2e:	c0 60       	breq	80007d3a <_fclose_r+0x6a>
80007d30:	6e 8b       	ld.w	r11,r7[0x20]
80007d32:	0c 9c       	mov	r12,r6
80007d34:	5d 18       	icall	r8
80007d36:	f9 b5 05 ff 	movlt	r5,-1
80007d3a:	8e 68       	ld.sh	r8,r7[0xc]
80007d3c:	ed b8 00 07 	bld	r8,0x7
80007d40:	c0 51       	brne	80007d4a <_fclose_r+0x7a>
80007d42:	6e 4b       	ld.w	r11,r7[0x10]
80007d44:	0c 9c       	mov	r12,r6
80007d46:	fe b0 f5 19 	rcall	80006778 <_free_r>
80007d4a:	6e db       	ld.w	r11,r7[0x34]
80007d4c:	58 0b       	cp.w	r11,0
80007d4e:	c0 a0       	breq	80007d62 <_fclose_r+0x92>
80007d50:	ee c8 ff bc 	sub	r8,r7,-68
80007d54:	10 3b       	cp.w	r11,r8
80007d56:	c0 40       	breq	80007d5e <_fclose_r+0x8e>
80007d58:	0c 9c       	mov	r12,r6
80007d5a:	fe b0 f5 0f 	rcall	80006778 <_free_r>
80007d5e:	30 08       	mov	r8,0
80007d60:	8f d8       	st.w	r7[0x34],r8
80007d62:	6f 2b       	ld.w	r11,r7[0x48]
80007d64:	58 0b       	cp.w	r11,0
80007d66:	c0 70       	breq	80007d74 <_fclose_r+0xa4>
80007d68:	0c 9c       	mov	r12,r6
80007d6a:	fe b0 f5 07 	rcall	80006778 <_free_r>
80007d6e:	30 08       	mov	r8,0
80007d70:	ef 48 00 48 	st.w	r7[72],r8
80007d74:	30 08       	mov	r8,0
80007d76:	ae 68       	st.h	r7[0xc],r8
80007d78:	fe b0 f4 11 	rcall	8000659a <__sfp_lock_release>
80007d7c:	0a 9c       	mov	r12,r5
80007d7e:	d8 22       	popm	r4-r7,pc
80007d80:	80 00       	ld.sh	r0,r0[0x0]
80007d82:	98 28       	ld.sh	r8,r12[0x4]
80007d84:	80 00       	ld.sh	r0,r0[0x0]
80007d86:	98 48       	ld.sh	r8,r12[0x8]
80007d88:	80 00       	ld.sh	r0,r0[0x0]
80007d8a:	98 68       	ld.sh	r8,r12[0xc]

80007d8c <fclose>:
80007d8c:	d4 01       	pushm	lr
80007d8e:	48 38       	lddpc	r8,80007d98 <fclose+0xc>
80007d90:	18 9b       	mov	r11,r12
80007d92:	70 0c       	ld.w	r12,r8[0x0]
80007d94:	c9 ef       	rcall	80007cd0 <_fclose_r>
80007d96:	d8 02       	popm	pc
80007d98:	00 00       	add	r0,r0
80007d9a:	01 00       	ld.w	r0,r0++

80007d9c <_fstat_r>:
80007d9c:	d4 21       	pushm	r4-r7,lr
80007d9e:	16 98       	mov	r8,r11
80007da0:	18 97       	mov	r7,r12
80007da2:	10 9c       	mov	r12,r8
80007da4:	30 08       	mov	r8,0
80007da6:	48 66       	lddpc	r6,80007dbc <_fstat_r+0x20>
80007da8:	14 9b       	mov	r11,r10
80007daa:	8d 08       	st.w	r6[0x0],r8
80007dac:	cf 8e       	rcall	80007b9c <_fstat>
80007dae:	5b fc       	cp.w	r12,-1
80007db0:	c0 51       	brne	80007dba <_fstat_r+0x1e>
80007db2:	6c 08       	ld.w	r8,r6[0x0]
80007db4:	58 08       	cp.w	r8,0
80007db6:	ef f8 1a 03 	st.wne	r7[0xc],r8
80007dba:	d8 22       	popm	r4-r7,pc
80007dbc:	00 00       	add	r0,r0
80007dbe:	06 44       	or	r4,r3

80007dc0 <_lseek_r>:
80007dc0:	d4 21       	pushm	r4-r7,lr
80007dc2:	16 98       	mov	r8,r11
80007dc4:	18 97       	mov	r7,r12
80007dc6:	10 9c       	mov	r12,r8
80007dc8:	30 08       	mov	r8,0
80007dca:	14 9b       	mov	r11,r10
80007dcc:	48 66       	lddpc	r6,80007de4 <_lseek_r+0x24>
80007dce:	12 9a       	mov	r10,r9
80007dd0:	8d 08       	st.w	r6[0x0],r8
80007dd2:	ca 9e       	rcall	80007b24 <_lseek>
80007dd4:	5b fc       	cp.w	r12,-1
80007dd6:	c0 51       	brne	80007de0 <_lseek_r+0x20>
80007dd8:	6c 08       	ld.w	r8,r6[0x0]
80007dda:	58 08       	cp.w	r8,0
80007ddc:	ef f8 1a 03 	st.wne	r7[0xc],r8
80007de0:	d8 22       	popm	r4-r7,pc
80007de2:	d7 03       	nop
80007de4:	00 00       	add	r0,r0
80007de6:	06 44       	or	r4,r3

80007de8 <_read_r>:
80007de8:	d4 21       	pushm	r4-r7,lr
80007dea:	16 98       	mov	r8,r11
80007dec:	18 97       	mov	r7,r12
80007dee:	10 9c       	mov	r12,r8
80007df0:	30 08       	mov	r8,0
80007df2:	14 9b       	mov	r11,r10
80007df4:	48 66       	lddpc	r6,80007e0c <_read_r+0x24>
80007df6:	12 9a       	mov	r10,r9
80007df8:	8d 08       	st.w	r6[0x0],r8
80007dfa:	ca 1e       	rcall	80007b3c <_read>
80007dfc:	5b fc       	cp.w	r12,-1
80007dfe:	c0 51       	brne	80007e08 <_read_r+0x20>
80007e00:	6c 08       	ld.w	r8,r6[0x0]
80007e02:	58 08       	cp.w	r8,0
80007e04:	ef f8 1a 03 	st.wne	r7[0xc],r8
80007e08:	d8 22       	popm	r4-r7,pc
80007e0a:	d7 03       	nop
80007e0c:	00 00       	add	r0,r0
80007e0e:	06 44       	or	r4,r3

80007e10 <__avr32_f64_mul>:
80007e10:	f5 eb 10 1c 	or	r12,r10,r11<<0x1
80007e14:	e0 80 00 dc 	breq	80007fcc <__avr32_f64_mul_op1_zero>
80007e18:	d4 21       	pushm	r4-r7,lr
80007e1a:	f7 e9 20 0e 	eor	lr,r11,r9
80007e1e:	ef db c2 8b 	bfextu	r7,r11,0x14,0xb
80007e22:	30 15       	mov	r5,1
80007e24:	c4 30       	breq	80007eaa <__avr32_f64_mul_op1_subnormal>
80007e26:	ab 6b       	lsl	r11,0xa
80007e28:	f7 ea 13 6b 	or	r11,r11,r10>>0x16
80007e2c:	ab 6a       	lsl	r10,0xa
80007e2e:	f7 d5 d3 c2 	bfins	r11,r5,0x1e,0x2
80007e32:	ed d9 c2 8b 	bfextu	r6,r9,0x14,0xb
80007e36:	c5 c0       	breq	80007eee <__avr32_f64_mul_op2_subnormal>
80007e38:	a1 78       	lsl	r8,0x1
80007e3a:	5c f9       	rol	r9
80007e3c:	f3 d5 d2 ab 	bfins	r9,r5,0x15,0xb
80007e40:	e0 47 07 ff 	cp.w	r7,2047
80007e44:	c7 70       	breq	80007f32 <__avr32_f64_mul_op_nan_or_inf>
80007e46:	e0 46 07 ff 	cp.w	r6,2047
80007e4a:	c7 40       	breq	80007f32 <__avr32_f64_mul_op_nan_or_inf>
80007e4c:	ee 06 00 0c 	add	r12,r7,r6
80007e50:	e0 2c 03 fe 	sub	r12,1022
80007e54:	f6 08 06 44 	mulu.d	r4,r11,r8
80007e58:	f4 09 07 44 	macu.d	r4,r10,r9
80007e5c:	f4 08 06 46 	mulu.d	r6,r10,r8
80007e60:	f6 09 06 4a 	mulu.d	r10,r11,r9
80007e64:	08 07       	add	r7,r4
80007e66:	f4 05 00 4a 	adc	r10,r10,r5
80007e6a:	5c 0b       	acr	r11
80007e6c:	ed bb 00 14 	bld	r11,0x14
80007e70:	c0 50       	breq	80007e7a <__avr32_f64_mul+0x6a>
80007e72:	a1 77       	lsl	r7,0x1
80007e74:	5c fa       	rol	r10
80007e76:	5c fb       	rol	r11
80007e78:	20 1c       	sub	r12,1
80007e7a:	58 0c       	cp.w	r12,0
80007e7c:	e0 8a 00 6f 	brle	80007f5a <__avr32_f64_mul_res_subnormal>
80007e80:	e0 4c 07 ff 	cp.w	r12,2047
80007e84:	e0 84 00 9c 	brge	80007fbc <__avr32_f64_mul_res_inf>
80007e88:	f7 dc d2 8b 	bfins	r11,r12,0x14,0xb
80007e8c:	ed ea 11 f6 	or	r6,r6,r10<<0x1f
80007e90:	ef e6 12 17 	or	r7,r7,r6>>0x1
80007e94:	ee 17 80 00 	eorh	r7,0x8000
80007e98:	f1 b7 04 20 	satu	r7,0x1
80007e9c:	0e 0a       	add	r10,r7
80007e9e:	5c 0b       	acr	r11
80007ea0:	ed be 00 1f 	bld	lr,0x1f
80007ea4:	ef bb 00 1f 	bst	r11,0x1f
80007ea8:	d8 22       	popm	r4-r7,pc

80007eaa <__avr32_f64_mul_op1_subnormal>:
80007eaa:	e4 1b 00 0f 	andh	r11,0xf
80007eae:	f4 0c 12 00 	clz	r12,r10
80007eb2:	f6 06 12 00 	clz	r6,r11
80007eb6:	f7 bc 03 e1 	sublo	r12,-31
80007eba:	f8 06 17 30 	movlo	r6,r12
80007ebe:	f7 b6 02 01 	subhs	r6,1
80007ec2:	e0 46 00 20 	cp.w	r6,32
80007ec6:	c0 d4       	brge	80007ee0 <__avr32_f64_mul_op1_subnormal+0x36>
80007ec8:	ec 0c 11 20 	rsub	r12,r6,32
80007ecc:	f6 06 09 4b 	lsl	r11,r11,r6
80007ed0:	f4 0c 0a 4c 	lsr	r12,r10,r12
80007ed4:	18 4b       	or	r11,r12
80007ed6:	f4 06 09 4a 	lsl	r10,r10,r6
80007eda:	20 b6       	sub	r6,11
80007edc:	0c 17       	sub	r7,r6
80007ede:	ca ab       	rjmp	80007e32 <__avr32_f64_mul+0x22>
80007ee0:	f4 06 09 4b 	lsl	r11,r10,r6
80007ee4:	c6 40       	breq	80007fac <__avr32_f64_mul_res_zero>
80007ee6:	30 0a       	mov	r10,0
80007ee8:	20 b6       	sub	r6,11
80007eea:	0c 17       	sub	r7,r6
80007eec:	ca 3b       	rjmp	80007e32 <__avr32_f64_mul+0x22>

80007eee <__avr32_f64_mul_op2_subnormal>:
80007eee:	e4 19 00 0f 	andh	r9,0xf
80007ef2:	f0 0c 12 00 	clz	r12,r8
80007ef6:	f2 05 12 00 	clz	r5,r9
80007efa:	f7 bc 03 ea 	sublo	r12,-22
80007efe:	f8 05 17 30 	movlo	r5,r12
80007f02:	f7 b5 02 0a 	subhs	r5,10
80007f06:	e0 45 00 20 	cp.w	r5,32
80007f0a:	c0 d4       	brge	80007f24 <__avr32_f64_mul_op2_subnormal+0x36>
80007f0c:	ea 0c 11 20 	rsub	r12,r5,32
80007f10:	f2 05 09 49 	lsl	r9,r9,r5
80007f14:	f0 0c 0a 4c 	lsr	r12,r8,r12
80007f18:	18 49       	or	r9,r12
80007f1a:	f0 05 09 48 	lsl	r8,r8,r5
80007f1e:	20 25       	sub	r5,2
80007f20:	0a 16       	sub	r6,r5
80007f22:	c8 fb       	rjmp	80007e40 <__avr32_f64_mul+0x30>
80007f24:	f0 05 09 49 	lsl	r9,r8,r5
80007f28:	c4 20       	breq	80007fac <__avr32_f64_mul_res_zero>
80007f2a:	30 08       	mov	r8,0
80007f2c:	20 25       	sub	r5,2
80007f2e:	0a 16       	sub	r6,r5
80007f30:	c8 8b       	rjmp	80007e40 <__avr32_f64_mul+0x30>

80007f32 <__avr32_f64_mul_op_nan_or_inf>:
80007f32:	e4 19 00 0f 	andh	r9,0xf
80007f36:	e4 1b 00 0f 	andh	r11,0xf
80007f3a:	14 4b       	or	r11,r10
80007f3c:	10 49       	or	r9,r8
80007f3e:	e0 47 07 ff 	cp.w	r7,2047
80007f42:	c0 91       	brne	80007f54 <__avr32_f64_mul_op1_not_naninf>
80007f44:	58 0b       	cp.w	r11,0
80007f46:	c3 81       	brne	80007fb6 <__avr32_f64_mul_res_nan>
80007f48:	e0 46 07 ff 	cp.w	r6,2047
80007f4c:	c3 81       	brne	80007fbc <__avr32_f64_mul_res_inf>
80007f4e:	58 09       	cp.w	r9,0
80007f50:	c3 60       	breq	80007fbc <__avr32_f64_mul_res_inf>
80007f52:	c3 28       	rjmp	80007fb6 <__avr32_f64_mul_res_nan>

80007f54 <__avr32_f64_mul_op1_not_naninf>:
80007f54:	58 09       	cp.w	r9,0
80007f56:	c3 30       	breq	80007fbc <__avr32_f64_mul_res_inf>
80007f58:	c2 f8       	rjmp	80007fb6 <__avr32_f64_mul_res_nan>

80007f5a <__avr32_f64_mul_res_subnormal>:
80007f5a:	5c 3c       	neg	r12
80007f5c:	2f fc       	sub	r12,-1
80007f5e:	f1 bc 04 c0 	satu	r12,0x6
80007f62:	e0 4c 00 20 	cp.w	r12,32
80007f66:	c1 14       	brge	80007f88 <__avr32_f64_mul_res_subnormal+0x2e>
80007f68:	f8 08 11 20 	rsub	r8,r12,32
80007f6c:	0e 46       	or	r6,r7
80007f6e:	ee 0c 0a 47 	lsr	r7,r7,r12
80007f72:	f4 08 09 49 	lsl	r9,r10,r8
80007f76:	12 47       	or	r7,r9
80007f78:	f4 0c 0a 4a 	lsr	r10,r10,r12
80007f7c:	f6 08 09 49 	lsl	r9,r11,r8
80007f80:	12 4a       	or	r10,r9
80007f82:	f6 0c 0a 4b 	lsr	r11,r11,r12
80007f86:	c8 3b       	rjmp	80007e8c <__avr32_f64_mul+0x7c>
80007f88:	f8 08 11 20 	rsub	r8,r12,32
80007f8c:	f9 b9 00 00 	moveq	r9,0
80007f90:	c0 30       	breq	80007f96 <__avr32_f64_mul_res_subnormal+0x3c>
80007f92:	f6 08 09 49 	lsl	r9,r11,r8
80007f96:	0e 46       	or	r6,r7
80007f98:	ed ea 10 16 	or	r6,r6,r10<<0x1
80007f9c:	f4 0c 0a 4a 	lsr	r10,r10,r12
80007fa0:	f3 ea 10 07 	or	r7,r9,r10
80007fa4:	f6 0c 0a 4a 	lsr	r10,r11,r12
80007fa8:	30 0b       	mov	r11,0
80007faa:	c7 1b       	rjmp	80007e8c <__avr32_f64_mul+0x7c>

80007fac <__avr32_f64_mul_res_zero>:
80007fac:	1c 9b       	mov	r11,lr
80007fae:	e6 1b 80 00 	andh	r11,0x8000,COH
80007fb2:	30 0a       	mov	r10,0
80007fb4:	d8 22       	popm	r4-r7,pc

80007fb6 <__avr32_f64_mul_res_nan>:
80007fb6:	3f fb       	mov	r11,-1
80007fb8:	3f fa       	mov	r10,-1
80007fba:	d8 22       	popm	r4-r7,pc

80007fbc <__avr32_f64_mul_res_inf>:
80007fbc:	f0 6b 00 00 	mov	r11,-1048576
80007fc0:	ed be 00 1f 	bld	lr,0x1f
80007fc4:	ef bb 00 1f 	bst	r11,0x1f
80007fc8:	30 0a       	mov	r10,0
80007fca:	d8 22       	popm	r4-r7,pc

80007fcc <__avr32_f64_mul_op1_zero>:
80007fcc:	f7 e9 20 0b 	eor	r11,r11,r9
80007fd0:	e6 1b 80 00 	andh	r11,0x8000,COH
80007fd4:	f9 d9 c2 8b 	bfextu	r12,r9,0x14,0xb
80007fd8:	e0 4c 07 ff 	cp.w	r12,2047
80007fdc:	5e 1c       	retne	r12
80007fde:	3f fa       	mov	r10,-1
80007fe0:	3f fb       	mov	r11,-1
80007fe2:	5e fc       	retal	r12

80007fe4 <__avr32_f64_sub_from_add>:
80007fe4:	ee 19 80 00 	eorh	r9,0x8000

80007fe8 <__avr32_f64_sub>:
80007fe8:	f7 e9 20 0c 	eor	r12,r11,r9
80007fec:	e0 86 00 ca 	brmi	80008180 <__avr32_f64_add_from_sub>
80007ff0:	eb cd 40 e0 	pushm	r5-r7,lr
80007ff4:	16 9c       	mov	r12,r11
80007ff6:	e6 1c 80 00 	andh	r12,0x8000,COH
80007ffa:	bf db       	cbr	r11,0x1f
80007ffc:	bf d9       	cbr	r9,0x1f
80007ffe:	10 3a       	cp.w	r10,r8
80008000:	f2 0b 13 00 	cpc	r11,r9
80008004:	c0 92       	brcc	80008016 <__avr32_f64_sub+0x2e>
80008006:	16 97       	mov	r7,r11
80008008:	12 9b       	mov	r11,r9
8000800a:	0e 99       	mov	r9,r7
8000800c:	14 97       	mov	r7,r10
8000800e:	10 9a       	mov	r10,r8
80008010:	0e 98       	mov	r8,r7
80008012:	ee 1c 80 00 	eorh	r12,0x8000
80008016:	f6 07 16 14 	lsr	r7,r11,0x14
8000801a:	ab 7b       	lsl	r11,0xb
8000801c:	f7 ea 13 5b 	or	r11,r11,r10>>0x15
80008020:	ab 7a       	lsl	r10,0xb
80008022:	bf bb       	sbr	r11,0x1f
80008024:	f2 06 16 14 	lsr	r6,r9,0x14
80008028:	c4 40       	breq	800080b0 <__avr32_f64_sub_opL_subnormal>
8000802a:	ab 79       	lsl	r9,0xb
8000802c:	f3 e8 13 59 	or	r9,r9,r8>>0x15
80008030:	ab 78       	lsl	r8,0xb
80008032:	bf b9       	sbr	r9,0x1f

80008034 <__avr32_f64_sub_opL_subnormal_done>:
80008034:	e0 47 07 ff 	cp.w	r7,2047
80008038:	c4 f0       	breq	800080d6 <__avr32_f64_sub_opH_nan_or_inf>
8000803a:	0e 26       	rsub	r6,r7
8000803c:	c1 20       	breq	80008060 <__avr32_f64_sub_shift_done>
8000803e:	ec 05 11 20 	rsub	r5,r6,32
80008042:	e0 46 00 20 	cp.w	r6,32
80008046:	c7 c2       	brcc	8000813e <__avr32_f64_sub_longshift>
80008048:	f0 05 09 4e 	lsl	lr,r8,r5
8000804c:	f2 05 09 45 	lsl	r5,r9,r5
80008050:	f0 06 0a 48 	lsr	r8,r8,r6
80008054:	f2 06 0a 49 	lsr	r9,r9,r6
80008058:	0a 48       	or	r8,r5
8000805a:	58 0e       	cp.w	lr,0
8000805c:	5f 1e       	srne	lr
8000805e:	1c 48       	or	r8,lr

80008060 <__avr32_f64_sub_shift_done>:
80008060:	10 1a       	sub	r10,r8
80008062:	f6 09 01 4b 	sbc	r11,r11,r9
80008066:	f6 06 12 00 	clz	r6,r11
8000806a:	c0 e0       	breq	80008086 <__avr32_f64_sub_longnormalize_done>
8000806c:	c7 83       	brcs	8000815c <__avr32_f64_sub_longnormalize>
8000806e:	ec 0e 11 20 	rsub	lr,r6,32
80008072:	f6 06 09 4b 	lsl	r11,r11,r6
80008076:	f4 0e 0a 4e 	lsr	lr,r10,lr
8000807a:	1c 4b       	or	r11,lr
8000807c:	f4 06 09 4a 	lsl	r10,r10,r6
80008080:	0c 17       	sub	r7,r6
80008082:	e0 8a 00 39 	brle	800080f4 <__avr32_f64_sub_subnormal_result>

80008086 <__avr32_f64_sub_longnormalize_done>:
80008086:	f4 09 15 15 	lsl	r9,r10,0x15
8000808a:	ab 9a       	lsr	r10,0xb
8000808c:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
80008090:	ab 9b       	lsr	r11,0xb
80008092:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
80008096:	18 4b       	or	r11,r12

80008098 <__avr32_f64_sub_round>:
80008098:	fc 17 80 00 	movh	r7,0x8000
8000809c:	ed ba 00 00 	bld	r10,0x0
800080a0:	f7 b7 01 ff 	subne	r7,-1
800080a4:	0e 39       	cp.w	r9,r7
800080a6:	5f 29       	srhs	r9
800080a8:	12 0a       	add	r10,r9
800080aa:	5c 0b       	acr	r11
800080ac:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

800080b0 <__avr32_f64_sub_opL_subnormal>:
800080b0:	ab 79       	lsl	r9,0xb
800080b2:	f3 e8 13 59 	or	r9,r9,r8>>0x15
800080b6:	ab 78       	lsl	r8,0xb
800080b8:	f3 e8 10 0e 	or	lr,r9,r8
800080bc:	f9 b6 01 01 	movne	r6,1
800080c0:	ee 0e 11 00 	rsub	lr,r7,0
800080c4:	f9 b7 00 01 	moveq	r7,1
800080c8:	ef bb 00 1f 	bst	r11,0x1f
800080cc:	f7 ea 10 0e 	or	lr,r11,r10
800080d0:	f9 b7 00 00 	moveq	r7,0
800080d4:	cb 0b       	rjmp	80008034 <__avr32_f64_sub_opL_subnormal_done>

800080d6 <__avr32_f64_sub_opH_nan_or_inf>:
800080d6:	bf db       	cbr	r11,0x1f
800080d8:	f7 ea 10 0e 	or	lr,r11,r10
800080dc:	c0 81       	brne	800080ec <__avr32_f64_sub_return_nan>
800080de:	e0 46 07 ff 	cp.w	r6,2047
800080e2:	c0 50       	breq	800080ec <__avr32_f64_sub_return_nan>
800080e4:	f9 e7 11 4b 	or	r11,r12,r7<<0x14
800080e8:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

800080ec <__avr32_f64_sub_return_nan>:
800080ec:	3f fa       	mov	r10,-1
800080ee:	3f fb       	mov	r11,-1
800080f0:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

800080f4 <__avr32_f64_sub_subnormal_result>:
800080f4:	5c 37       	neg	r7
800080f6:	2f f7       	sub	r7,-1
800080f8:	f1 b7 04 c0 	satu	r7,0x6
800080fc:	e0 47 00 20 	cp.w	r7,32
80008100:	c1 14       	brge	80008122 <__avr32_f64_sub_subnormal_result+0x2e>
80008102:	ee 08 11 20 	rsub	r8,r7,32
80008106:	f4 08 09 49 	lsl	r9,r10,r8
8000810a:	5f 16       	srne	r6
8000810c:	f4 07 0a 4a 	lsr	r10,r10,r7
80008110:	0c 4a       	or	r10,r6
80008112:	f6 08 09 49 	lsl	r9,r11,r8
80008116:	f5 e9 10 0a 	or	r10,r10,r9
8000811a:	f4 07 0a 4b 	lsr	r11,r10,r7
8000811e:	30 07       	mov	r7,0
80008120:	cb 3b       	rjmp	80008086 <__avr32_f64_sub_longnormalize_done>
80008122:	ee 08 11 40 	rsub	r8,r7,64
80008126:	f6 08 09 49 	lsl	r9,r11,r8
8000812a:	14 49       	or	r9,r10
8000812c:	5f 16       	srne	r6
8000812e:	f6 07 0a 4a 	lsr	r10,r11,r7
80008132:	0c 4a       	or	r10,r6
80008134:	30 0b       	mov	r11,0
80008136:	30 07       	mov	r7,0
80008138:	ca 7b       	rjmp	80008086 <__avr32_f64_sub_longnormalize_done>
8000813a:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

8000813e <__avr32_f64_sub_longshift>:
8000813e:	f1 b6 04 c0 	satu	r6,0x6
80008142:	f0 0e 17 00 	moveq	lr,r8
80008146:	c0 40       	breq	8000814e <__avr32_f64_sub_longshift+0x10>
80008148:	f2 05 09 4e 	lsl	lr,r9,r5
8000814c:	10 4e       	or	lr,r8
8000814e:	f2 06 0a 48 	lsr	r8,r9,r6
80008152:	30 09       	mov	r9,0
80008154:	58 0e       	cp.w	lr,0
80008156:	5f 1e       	srne	lr
80008158:	1c 48       	or	r8,lr
8000815a:	c8 3b       	rjmp	80008060 <__avr32_f64_sub_shift_done>

8000815c <__avr32_f64_sub_longnormalize>:
8000815c:	f4 06 12 00 	clz	r6,r10
80008160:	f9 b7 03 00 	movlo	r7,0
80008164:	f9 b6 03 00 	movlo	r6,0
80008168:	f9 bc 03 00 	movlo	r12,0
8000816c:	f7 b6 02 e0 	subhs	r6,-32
80008170:	f4 06 09 4b 	lsl	r11,r10,r6
80008174:	30 0a       	mov	r10,0
80008176:	0c 17       	sub	r7,r6
80008178:	fe 9a ff be 	brle	800080f4 <__avr32_f64_sub_subnormal_result>
8000817c:	c8 5b       	rjmp	80008086 <__avr32_f64_sub_longnormalize_done>
8000817e:	d7 03       	nop

80008180 <__avr32_f64_add_from_sub>:
80008180:	ee 19 80 00 	eorh	r9,0x8000

80008184 <__avr32_f64_add>:
80008184:	f7 e9 20 0c 	eor	r12,r11,r9
80008188:	fe 96 ff 2e 	brmi	80007fe4 <__avr32_f64_sub_from_add>
8000818c:	eb cd 40 e0 	pushm	r5-r7,lr
80008190:	16 9c       	mov	r12,r11
80008192:	e6 1c 80 00 	andh	r12,0x8000,COH
80008196:	bf db       	cbr	r11,0x1f
80008198:	bf d9       	cbr	r9,0x1f
8000819a:	12 3b       	cp.w	r11,r9
8000819c:	c0 72       	brcc	800081aa <__avr32_f64_add+0x26>
8000819e:	16 97       	mov	r7,r11
800081a0:	12 9b       	mov	r11,r9
800081a2:	0e 99       	mov	r9,r7
800081a4:	14 97       	mov	r7,r10
800081a6:	10 9a       	mov	r10,r8
800081a8:	0e 98       	mov	r8,r7
800081aa:	30 0e       	mov	lr,0
800081ac:	ef db c2 8b 	bfextu	r7,r11,0x14,0xb
800081b0:	f7 db c0 14 	bfextu	r11,r11,0x0,0x14
800081b4:	b5 ab       	sbr	r11,0x14
800081b6:	ed d9 c2 8b 	bfextu	r6,r9,0x14,0xb
800081ba:	c5 f0       	breq	80008278 <__avr32_f64_add_op2_subnormal>
800081bc:	f3 d9 c0 14 	bfextu	r9,r9,0x0,0x14
800081c0:	b5 a9       	sbr	r9,0x14
800081c2:	e0 47 07 ff 	cp.w	r7,2047
800081c6:	c2 50       	breq	80008210 <__avr32_f64_add_opH_nan_or_inf>
800081c8:	0e 26       	rsub	r6,r7
800081ca:	c0 f0       	breq	800081e8 <__avr32_f64_add_shift_done>
800081cc:	ec 05 11 20 	rsub	r5,r6,32
800081d0:	e0 46 00 20 	cp.w	r6,32
800081d4:	c3 52       	brcc	8000823e <__avr32_f64_add_longshift>
800081d6:	f0 05 09 4e 	lsl	lr,r8,r5
800081da:	f2 05 09 45 	lsl	r5,r9,r5
800081de:	f0 06 0a 48 	lsr	r8,r8,r6
800081e2:	f2 06 0a 49 	lsr	r9,r9,r6
800081e6:	0a 48       	or	r8,r5

800081e8 <__avr32_f64_add_shift_done>:
800081e8:	10 0a       	add	r10,r8
800081ea:	f6 09 00 4b 	adc	r11,r11,r9
800081ee:	ed bb 00 15 	bld	r11,0x15
800081f2:	c3 40       	breq	8000825a <__avr32_f64_add_res_of>

800081f4 <__avr32_f64_add_res_of_done>:
800081f4:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
800081f8:	18 4b       	or	r11,r12

800081fa <__avr32_f64_add_round>:
800081fa:	f9 da c0 01 	bfextu	r12,r10,0x0,0x1
800081fe:	18 4e       	or	lr,r12
80008200:	ee 1e 80 00 	eorh	lr,0x8000
80008204:	f1 be 04 20 	satu	lr,0x1
80008208:	1c 0a       	add	r10,lr
8000820a:	5c 0b       	acr	r11
8000820c:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008210 <__avr32_f64_add_opH_nan_or_inf>:
80008210:	b5 cb       	cbr	r11,0x14
80008212:	f7 ea 10 0e 	or	lr,r11,r10
80008216:	c1 01       	brne	80008236 <__avr32_f64_add_return_nan>
80008218:	e0 46 07 ff 	cp.w	r6,2047
8000821c:	c0 30       	breq	80008222 <__avr32_f64_add_opL_nan_or_inf>
8000821e:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008222 <__avr32_f64_add_opL_nan_or_inf>:
80008222:	b5 c9       	cbr	r9,0x14
80008224:	f3 e8 10 0e 	or	lr,r9,r8
80008228:	c0 71       	brne	80008236 <__avr32_f64_add_return_nan>
8000822a:	30 0a       	mov	r10,0
8000822c:	fc 1b 7f f0 	movh	r11,0x7ff0
80008230:	18 4b       	or	r11,r12
80008232:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008236 <__avr32_f64_add_return_nan>:
80008236:	3f fa       	mov	r10,-1
80008238:	3f fb       	mov	r11,-1
8000823a:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

8000823e <__avr32_f64_add_longshift>:
8000823e:	f1 b6 04 c0 	satu	r6,0x6
80008242:	f0 0e 17 00 	moveq	lr,r8
80008246:	c0 60       	breq	80008252 <__avr32_f64_add_longshift+0x14>
80008248:	f2 05 09 4e 	lsl	lr,r9,r5
8000824c:	58 08       	cp.w	r8,0
8000824e:	5f 18       	srne	r8
80008250:	10 4e       	or	lr,r8
80008252:	f2 06 0a 48 	lsr	r8,r9,r6
80008256:	30 09       	mov	r9,0
80008258:	cc 8b       	rjmp	800081e8 <__avr32_f64_add_shift_done>

8000825a <__avr32_f64_add_res_of>:
8000825a:	fd ee 10 1e 	or	lr,lr,lr<<0x1
8000825e:	a1 9b       	lsr	r11,0x1
80008260:	5d 0a       	ror	r10
80008262:	5d 0e       	ror	lr
80008264:	2f f7       	sub	r7,-1
80008266:	e0 47 07 ff 	cp.w	r7,2047
8000826a:	f9 ba 00 00 	moveq	r10,0
8000826e:	f9 bb 00 00 	moveq	r11,0
80008272:	f9 be 00 00 	moveq	lr,0
80008276:	cb fb       	rjmp	800081f4 <__avr32_f64_add_res_of_done>

80008278 <__avr32_f64_add_op2_subnormal>:
80008278:	30 16       	mov	r6,1
8000827a:	58 07       	cp.w	r7,0
8000827c:	ca 31       	brne	800081c2 <__avr32_f64_add+0x3e>
8000827e:	b5 cb       	cbr	r11,0x14
80008280:	10 0a       	add	r10,r8
80008282:	f6 09 00 4b 	adc	r11,r11,r9
80008286:	18 4b       	or	r11,r12
80008288:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

8000828c <__avr32_f64_to_u32>:
8000828c:	58 0b       	cp.w	r11,0
8000828e:	5e 6d       	retmi	0

80008290 <__avr32_f64_to_s32>:
80008290:	f6 0c 15 01 	lsl	r12,r11,0x1
80008294:	b5 9c       	lsr	r12,0x15
80008296:	e0 2c 03 ff 	sub	r12,1023
8000829a:	5e 3d       	retlo	0
8000829c:	f8 0c 11 1f 	rsub	r12,r12,31
800082a0:	16 99       	mov	r9,r11
800082a2:	ab 7b       	lsl	r11,0xb
800082a4:	bf bb       	sbr	r11,0x1f
800082a6:	f7 ea 13 5b 	or	r11,r11,r10>>0x15
800082aa:	f6 0c 0a 4b 	lsr	r11,r11,r12
800082ae:	a1 79       	lsl	r9,0x1
800082b0:	5e 2b       	reths	r11
800082b2:	5c 3b       	neg	r11
800082b4:	5e fb       	retal	r11

800082b6 <__avr32_u32_to_f64>:
800082b6:	f8 cb 00 00 	sub	r11,r12,0
800082ba:	30 0c       	mov	r12,0
800082bc:	c0 38       	rjmp	800082c2 <__avr32_s32_to_f64+0x4>

800082be <__avr32_s32_to_f64>:
800082be:	18 9b       	mov	r11,r12
800082c0:	5c 4b       	abs	r11
800082c2:	30 0a       	mov	r10,0
800082c4:	5e 0b       	reteq	r11
800082c6:	d4 01       	pushm	lr
800082c8:	e0 69 04 1e 	mov	r9,1054
800082cc:	f6 08 12 00 	clz	r8,r11
800082d0:	c1 70       	breq	800082fe <__avr32_s32_to_f64+0x40>
800082d2:	c0 c3       	brcs	800082ea <__avr32_s32_to_f64+0x2c>
800082d4:	f0 0e 11 20 	rsub	lr,r8,32
800082d8:	f6 08 09 4b 	lsl	r11,r11,r8
800082dc:	f4 0e 0a 4e 	lsr	lr,r10,lr
800082e0:	1c 4b       	or	r11,lr
800082e2:	f4 08 09 4a 	lsl	r10,r10,r8
800082e6:	10 19       	sub	r9,r8
800082e8:	c0 b8       	rjmp	800082fe <__avr32_s32_to_f64+0x40>
800082ea:	f4 08 12 00 	clz	r8,r10
800082ee:	f9 b8 03 00 	movlo	r8,0
800082f2:	f7 b8 02 e0 	subhs	r8,-32
800082f6:	f4 08 09 4b 	lsl	r11,r10,r8
800082fa:	30 0a       	mov	r10,0
800082fc:	10 19       	sub	r9,r8
800082fe:	58 09       	cp.w	r9,0
80008300:	e0 89 00 30 	brgt	80008360 <__avr32_s32_to_f64+0xa2>
80008304:	5c 39       	neg	r9
80008306:	2f f9       	sub	r9,-1
80008308:	e0 49 00 36 	cp.w	r9,54
8000830c:	c0 43       	brcs	80008314 <__avr32_s32_to_f64+0x56>
8000830e:	30 0b       	mov	r11,0
80008310:	30 0a       	mov	r10,0
80008312:	c2 68       	rjmp	8000835e <__avr32_s32_to_f64+0xa0>
80008314:	2f 69       	sub	r9,-10
80008316:	f2 08 11 20 	rsub	r8,r9,32
8000831a:	e0 49 00 20 	cp.w	r9,32
8000831e:	c0 b2       	brcc	80008334 <__avr32_s32_to_f64+0x76>
80008320:	f4 08 09 4e 	lsl	lr,r10,r8
80008324:	f6 08 09 48 	lsl	r8,r11,r8
80008328:	f4 09 0a 4a 	lsr	r10,r10,r9
8000832c:	f6 09 0a 4b 	lsr	r11,r11,r9
80008330:	10 4b       	or	r11,r8
80008332:	c0 88       	rjmp	80008342 <__avr32_s32_to_f64+0x84>
80008334:	f6 08 09 4e 	lsl	lr,r11,r8
80008338:	14 4e       	or	lr,r10
8000833a:	16 9a       	mov	r10,r11
8000833c:	30 0b       	mov	r11,0
8000833e:	f4 09 0a 4a 	lsr	r10,r10,r9
80008342:	ed ba 00 00 	bld	r10,0x0
80008346:	c0 92       	brcc	80008358 <__avr32_s32_to_f64+0x9a>
80008348:	1c 7e       	tst	lr,lr
8000834a:	c0 41       	brne	80008352 <__avr32_s32_to_f64+0x94>
8000834c:	ed ba 00 01 	bld	r10,0x1
80008350:	c0 42       	brcc	80008358 <__avr32_s32_to_f64+0x9a>
80008352:	2f fa       	sub	r10,-1
80008354:	f7 bb 02 ff 	subhs	r11,-1
80008358:	5c fc       	rol	r12
8000835a:	5d 0b       	ror	r11
8000835c:	5d 0a       	ror	r10
8000835e:	d8 02       	popm	pc
80008360:	e0 68 03 ff 	mov	r8,1023
80008364:	ed ba 00 0b 	bld	r10,0xb
80008368:	f7 b8 00 ff 	subeq	r8,-1
8000836c:	10 0a       	add	r10,r8
8000836e:	5c 0b       	acr	r11
80008370:	f7 b9 03 fe 	sublo	r9,-2
80008374:	e0 49 07 ff 	cp.w	r9,2047
80008378:	c0 55       	brlt	80008382 <__avr32_s32_to_f64+0xc4>
8000837a:	30 0a       	mov	r10,0
8000837c:	fc 1b ff e0 	movh	r11,0xffe0
80008380:	c0 c8       	rjmp	80008398 <__floatsidf_return_op1>
80008382:	ed bb 00 1f 	bld	r11,0x1f
80008386:	f7 b9 01 01 	subne	r9,1
8000838a:	ab 9a       	lsr	r10,0xb
8000838c:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
80008390:	a1 7b       	lsl	r11,0x1
80008392:	ab 9b       	lsr	r11,0xb
80008394:	f7 e9 11 5b 	or	r11,r11,r9<<0x15

80008398 <__floatsidf_return_op1>:
80008398:	a1 7c       	lsl	r12,0x1
8000839a:	5d 0b       	ror	r11
8000839c:	d8 02       	popm	pc

8000839e <__avr32_f64_cmp_eq>:
8000839e:	10 3a       	cp.w	r10,r8
800083a0:	f2 0b 13 00 	cpc	r11,r9
800083a4:	c0 80       	breq	800083b4 <__avr32_f64_cmp_eq+0x16>
800083a6:	a1 7b       	lsl	r11,0x1
800083a8:	a1 79       	lsl	r9,0x1
800083aa:	14 4b       	or	r11,r10
800083ac:	12 4b       	or	r11,r9
800083ae:	10 4b       	or	r11,r8
800083b0:	5e 0f       	reteq	1
800083b2:	5e fd       	retal	0
800083b4:	a1 7b       	lsl	r11,0x1
800083b6:	fc 1c ff e0 	movh	r12,0xffe0
800083ba:	58 0a       	cp.w	r10,0
800083bc:	f8 0b 13 00 	cpc	r11,r12
800083c0:	5e 8f       	retls	1
800083c2:	5e fd       	retal	0

800083c4 <__avr32_f64_cmp_ge>:
800083c4:	1a de       	st.w	--sp,lr
800083c6:	1a d7       	st.w	--sp,r7
800083c8:	a1 7b       	lsl	r11,0x1
800083ca:	5f 3c       	srlo	r12
800083cc:	a1 79       	lsl	r9,0x1
800083ce:	5f 37       	srlo	r7
800083d0:	5c fc       	rol	r12
800083d2:	fc 1e ff e0 	movh	lr,0xffe0
800083d6:	58 0a       	cp.w	r10,0
800083d8:	fc 0b 13 00 	cpc	r11,lr
800083dc:	e0 8b 00 1d 	brhi	80008416 <__avr32_f64_cmp_ge+0x52>
800083e0:	58 08       	cp.w	r8,0
800083e2:	fc 09 13 00 	cpc	r9,lr
800083e6:	e0 8b 00 18 	brhi	80008416 <__avr32_f64_cmp_ge+0x52>
800083ea:	58 0b       	cp.w	r11,0
800083ec:	f5 ba 00 00 	subfeq	r10,0
800083f0:	c1 50       	breq	8000841a <__avr32_f64_cmp_ge+0x56>
800083f2:	1b 07       	ld.w	r7,sp++
800083f4:	1b 0e       	ld.w	lr,sp++
800083f6:	58 3c       	cp.w	r12,3
800083f8:	c0 a0       	breq	8000840c <__avr32_f64_cmp_ge+0x48>
800083fa:	58 1c       	cp.w	r12,1
800083fc:	c0 33       	brcs	80008402 <__avr32_f64_cmp_ge+0x3e>
800083fe:	5e 0f       	reteq	1
80008400:	5e 1d       	retne	0
80008402:	10 3a       	cp.w	r10,r8
80008404:	f2 0b 13 00 	cpc	r11,r9
80008408:	5e 2f       	reths	1
8000840a:	5e 3d       	retlo	0
8000840c:	14 38       	cp.w	r8,r10
8000840e:	f6 09 13 00 	cpc	r9,r11
80008412:	5e 2f       	reths	1
80008414:	5e 3d       	retlo	0
80008416:	1b 07       	ld.w	r7,sp++
80008418:	d8 0a       	popm	pc,r12=0
8000841a:	58 17       	cp.w	r7,1
8000841c:	5f 0c       	sreq	r12
8000841e:	58 09       	cp.w	r9,0
80008420:	f5 b8 00 00 	subfeq	r8,0
80008424:	1b 07       	ld.w	r7,sp++
80008426:	1b 0e       	ld.w	lr,sp++
80008428:	5e 0f       	reteq	1
8000842a:	5e fc       	retal	r12

8000842c <__avr32_f64_cmp_lt>:
8000842c:	1a de       	st.w	--sp,lr
8000842e:	1a d7       	st.w	--sp,r7
80008430:	a1 7b       	lsl	r11,0x1
80008432:	5f 3c       	srlo	r12
80008434:	a1 79       	lsl	r9,0x1
80008436:	5f 37       	srlo	r7
80008438:	5c fc       	rol	r12
8000843a:	fc 1e ff e0 	movh	lr,0xffe0
8000843e:	58 0a       	cp.w	r10,0
80008440:	fc 0b 13 00 	cpc	r11,lr
80008444:	e0 8b 00 1d 	brhi	8000847e <__avr32_f64_cmp_lt+0x52>
80008448:	58 08       	cp.w	r8,0
8000844a:	fc 09 13 00 	cpc	r9,lr
8000844e:	e0 8b 00 18 	brhi	8000847e <__avr32_f64_cmp_lt+0x52>
80008452:	58 0b       	cp.w	r11,0
80008454:	f5 ba 00 00 	subfeq	r10,0
80008458:	c1 50       	breq	80008482 <__avr32_f64_cmp_lt+0x56>
8000845a:	1b 07       	ld.w	r7,sp++
8000845c:	1b 0e       	ld.w	lr,sp++
8000845e:	58 3c       	cp.w	r12,3
80008460:	c0 a0       	breq	80008474 <__avr32_f64_cmp_lt+0x48>
80008462:	58 1c       	cp.w	r12,1
80008464:	c0 33       	brcs	8000846a <__avr32_f64_cmp_lt+0x3e>
80008466:	5e 0d       	reteq	0
80008468:	5e 1f       	retne	1
8000846a:	10 3a       	cp.w	r10,r8
8000846c:	f2 0b 13 00 	cpc	r11,r9
80008470:	5e 2d       	reths	0
80008472:	5e 3f       	retlo	1
80008474:	14 38       	cp.w	r8,r10
80008476:	f6 09 13 00 	cpc	r9,r11
8000847a:	5e 2d       	reths	0
8000847c:	5e 3f       	retlo	1
8000847e:	1b 07       	ld.w	r7,sp++
80008480:	d8 0a       	popm	pc,r12=0
80008482:	58 17       	cp.w	r7,1
80008484:	5f 1c       	srne	r12
80008486:	58 09       	cp.w	r9,0
80008488:	f5 b8 00 00 	subfeq	r8,0
8000848c:	1b 07       	ld.w	r7,sp++
8000848e:	1b 0e       	ld.w	lr,sp++
80008490:	5e 0d       	reteq	0
80008492:	5e fc       	retal	r12

80008494 <__avr32_f64_div>:
80008494:	eb cd 40 ff 	pushm	r0-r7,lr
80008498:	f7 e9 20 0e 	eor	lr,r11,r9
8000849c:	f6 07 16 14 	lsr	r7,r11,0x14
800084a0:	a9 7b       	lsl	r11,0x9
800084a2:	f7 ea 13 7b 	or	r11,r11,r10>>0x17
800084a6:	a9 7a       	lsl	r10,0x9
800084a8:	bd bb       	sbr	r11,0x1d
800084aa:	e4 1b 3f ff 	andh	r11,0x3fff
800084ae:	ab d7       	cbr	r7,0xb
800084b0:	e0 80 00 cc 	breq	80008648 <__avr32_f64_div_round_subnormal+0x54>
800084b4:	e0 47 07 ff 	cp.w	r7,2047
800084b8:	e0 84 00 b5 	brge	80008622 <__avr32_f64_div_round_subnormal+0x2e>
800084bc:	f2 06 16 14 	lsr	r6,r9,0x14
800084c0:	a9 79       	lsl	r9,0x9
800084c2:	f3 e8 13 79 	or	r9,r9,r8>>0x17
800084c6:	a9 78       	lsl	r8,0x9
800084c8:	bd b9       	sbr	r9,0x1d
800084ca:	e4 19 3f ff 	andh	r9,0x3fff
800084ce:	ab d6       	cbr	r6,0xb
800084d0:	e0 80 00 e2 	breq	80008694 <__avr32_f64_div_round_subnormal+0xa0>
800084d4:	e0 46 07 ff 	cp.w	r6,2047
800084d8:	e0 84 00 b2 	brge	8000863c <__avr32_f64_div_round_subnormal+0x48>
800084dc:	0c 17       	sub	r7,r6
800084de:	fe 37 fc 01 	sub	r7,-1023
800084e2:	fc 1c 80 00 	movh	r12,0x8000
800084e6:	f8 03 16 01 	lsr	r3,r12,0x1
800084ea:	e9 d9 c3 62 	bfextu	r4,r9,0x1b,0x2
800084ee:	5c d4       	com	r4
800084f0:	e7 d4 d3 82 	bfins	r3,r4,0x1c,0x2
800084f4:	e6 09 06 44 	mulu.d	r4,r3,r9
800084f8:	f8 05 01 25 	sub	r5,r12,r5<<0x2
800084fc:	e6 05 06 44 	mulu.d	r4,r3,r5
80008500:	ea 03 15 02 	lsl	r3,r5,0x2
80008504:	e6 09 06 44 	mulu.d	r4,r3,r9
80008508:	f8 05 01 25 	sub	r5,r12,r5<<0x2
8000850c:	e6 05 06 44 	mulu.d	r4,r3,r5
80008510:	ea 03 15 02 	lsl	r3,r5,0x2
80008514:	e6 09 06 44 	mulu.d	r4,r3,r9
80008518:	f8 05 01 25 	sub	r5,r12,r5<<0x2
8000851c:	e6 05 06 44 	mulu.d	r4,r3,r5
80008520:	ea 03 15 02 	lsl	r3,r5,0x2
80008524:	e6 08 06 40 	mulu.d	r0,r3,r8
80008528:	e4 09 07 40 	macu.d	r0,r2,r9
8000852c:	e6 09 06 44 	mulu.d	r4,r3,r9
80008530:	02 04       	add	r4,r1
80008532:	5c 05       	acr	r5
80008534:	a3 65       	lsl	r5,0x2
80008536:	eb e4 13 e5 	or	r5,r5,r4>>0x1e
8000853a:	a3 64       	lsl	r4,0x2
8000853c:	5c 34       	neg	r4
8000853e:	f8 05 01 45 	sbc	r5,r12,r5
80008542:	e6 04 06 40 	mulu.d	r0,r3,r4
80008546:	e4 05 07 40 	macu.d	r0,r2,r5
8000854a:	e6 05 06 44 	mulu.d	r4,r3,r5
8000854e:	02 04       	add	r4,r1
80008550:	5c 05       	acr	r5
80008552:	ea 03 15 02 	lsl	r3,r5,0x2
80008556:	e7 e4 13 e3 	or	r3,r3,r4>>0x1e
8000855a:	e8 02 15 02 	lsl	r2,r4,0x2
8000855e:	e6 08 06 40 	mulu.d	r0,r3,r8
80008562:	e4 09 07 40 	macu.d	r0,r2,r9
80008566:	e6 09 06 44 	mulu.d	r4,r3,r9
8000856a:	02 04       	add	r4,r1
8000856c:	5c 05       	acr	r5
8000856e:	a3 65       	lsl	r5,0x2
80008570:	eb e4 13 e5 	or	r5,r5,r4>>0x1e
80008574:	a3 64       	lsl	r4,0x2
80008576:	5c 34       	neg	r4
80008578:	f8 05 01 45 	sbc	r5,r12,r5
8000857c:	e6 04 06 40 	mulu.d	r0,r3,r4
80008580:	e4 05 07 40 	macu.d	r0,r2,r5
80008584:	e6 05 06 44 	mulu.d	r4,r3,r5
80008588:	02 04       	add	r4,r1
8000858a:	5c 05       	acr	r5
8000858c:	ea 03 15 02 	lsl	r3,r5,0x2
80008590:	e7 e4 13 e3 	or	r3,r3,r4>>0x1e
80008594:	e8 02 15 02 	lsl	r2,r4,0x2
80008598:	e6 0a 06 40 	mulu.d	r0,r3,r10
8000859c:	e4 0b 07 40 	macu.d	r0,r2,r11
800085a0:	e6 0b 06 42 	mulu.d	r2,r3,r11
800085a4:	02 02       	add	r2,r1
800085a6:	5c 03       	acr	r3
800085a8:	ed b3 00 1c 	bld	r3,0x1c
800085ac:	c0 90       	breq	800085be <__avr32_f64_div+0x12a>
800085ae:	a1 72       	lsl	r2,0x1
800085b0:	5c f3       	rol	r3
800085b2:	20 17       	sub	r7,1
800085b4:	a3 9a       	lsr	r10,0x3
800085b6:	f5 eb 11 da 	or	r10,r10,r11<<0x1d
800085ba:	a3 9b       	lsr	r11,0x3
800085bc:	c0 58       	rjmp	800085c6 <__avr32_f64_div+0x132>
800085be:	a5 8a       	lsr	r10,0x4
800085c0:	f5 eb 11 ca 	or	r10,r10,r11<<0x1c
800085c4:	a5 8b       	lsr	r11,0x4
800085c6:	58 07       	cp.w	r7,0
800085c8:	e0 8a 00 8b 	brle	800086de <__avr32_f64_div_res_subnormal>
800085cc:	e0 12 ff 00 	andl	r2,0xff00
800085d0:	e8 12 00 80 	orl	r2,0x80
800085d4:	e6 08 06 40 	mulu.d	r0,r3,r8
800085d8:	e4 09 07 40 	macu.d	r0,r2,r9
800085dc:	e4 08 06 44 	mulu.d	r4,r2,r8
800085e0:	e6 09 06 48 	mulu.d	r8,r3,r9
800085e4:	00 05       	add	r5,r0
800085e6:	f0 01 00 48 	adc	r8,r8,r1
800085ea:	5c 09       	acr	r9
800085ec:	f9 d2 c1 01 	bfextu	r12,r2,0x8,0x1
800085f0:	58 04       	cp.w	r4,0
800085f2:	5c 25       	cpc	r5

800085f4 <__avr32_f64_div_round_subnormal>:
800085f4:	f4 08 13 00 	cpc	r8,r10
800085f8:	f6 09 13 00 	cpc	r9,r11
800085fc:	5f 36       	srlo	r6
800085fe:	f8 06 17 00 	moveq	r6,r12
80008602:	e4 0a 16 08 	lsr	r10,r2,0x8
80008606:	f5 e3 11 8a 	or	r10,r10,r3<<0x18
8000860a:	e6 0b 16 08 	lsr	r11,r3,0x8
8000860e:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
80008612:	ed be 00 1f 	bld	lr,0x1f
80008616:	ef bb 00 1f 	bst	r11,0x1f
8000861a:	0c 0a       	add	r10,r6
8000861c:	5c 0b       	acr	r11
8000861e:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80008622:	e4 1b 00 0f 	andh	r11,0xf
80008626:	14 4b       	or	r11,r10
80008628:	e0 81 00 a7 	brne	80008776 <__avr32_f64_div_res_subnormal+0x98>
8000862c:	f2 06 16 14 	lsr	r6,r9,0x14
80008630:	ab d6       	cbr	r6,0xb
80008632:	e0 46 07 ff 	cp.w	r6,2047
80008636:	e0 81 00 a4 	brne	8000877e <__avr32_f64_div_res_subnormal+0xa0>
8000863a:	c9 e8       	rjmp	80008776 <__avr32_f64_div_res_subnormal+0x98>
8000863c:	e4 19 00 0f 	andh	r9,0xf
80008640:	10 49       	or	r9,r8
80008642:	e0 81 00 9a 	brne	80008776 <__avr32_f64_div_res_subnormal+0x98>
80008646:	c9 28       	rjmp	8000876a <__avr32_f64_div_res_subnormal+0x8c>
80008648:	a3 7b       	lsl	r11,0x3
8000864a:	f7 ea 13 db 	or	r11,r11,r10>>0x1d
8000864e:	a3 7a       	lsl	r10,0x3
80008650:	f5 eb 10 04 	or	r4,r10,r11
80008654:	e0 80 00 a0 	breq	80008794 <__avr32_f64_div_op1_zero>
80008658:	f6 04 12 00 	clz	r4,r11
8000865c:	c1 70       	breq	8000868a <__avr32_f64_div_round_subnormal+0x96>
8000865e:	c0 c3       	brcs	80008676 <__avr32_f64_div_round_subnormal+0x82>
80008660:	e8 05 11 20 	rsub	r5,r4,32
80008664:	f6 04 09 4b 	lsl	r11,r11,r4
80008668:	f4 05 0a 45 	lsr	r5,r10,r5
8000866c:	0a 4b       	or	r11,r5
8000866e:	f4 04 09 4a 	lsl	r10,r10,r4
80008672:	08 17       	sub	r7,r4
80008674:	c0 b8       	rjmp	8000868a <__avr32_f64_div_round_subnormal+0x96>
80008676:	f4 04 12 00 	clz	r4,r10
8000867a:	f9 b4 03 00 	movlo	r4,0
8000867e:	f7 b4 02 e0 	subhs	r4,-32
80008682:	f4 04 09 4b 	lsl	r11,r10,r4
80008686:	30 0a       	mov	r10,0
80008688:	08 17       	sub	r7,r4
8000868a:	a3 8a       	lsr	r10,0x2
8000868c:	f5 eb 11 ea 	or	r10,r10,r11<<0x1e
80008690:	a3 8b       	lsr	r11,0x2
80008692:	c1 1b       	rjmp	800084b4 <__avr32_f64_div+0x20>
80008694:	a3 79       	lsl	r9,0x3
80008696:	f3 e8 13 d9 	or	r9,r9,r8>>0x1d
8000869a:	a3 78       	lsl	r8,0x3
8000869c:	f3 e8 10 04 	or	r4,r9,r8
800086a0:	c6 f0       	breq	8000877e <__avr32_f64_div_res_subnormal+0xa0>
800086a2:	f2 04 12 00 	clz	r4,r9
800086a6:	c1 70       	breq	800086d4 <__avr32_f64_div_round_subnormal+0xe0>
800086a8:	c0 c3       	brcs	800086c0 <__avr32_f64_div_round_subnormal+0xcc>
800086aa:	e8 05 11 20 	rsub	r5,r4,32
800086ae:	f2 04 09 49 	lsl	r9,r9,r4
800086b2:	f0 05 0a 45 	lsr	r5,r8,r5
800086b6:	0a 49       	or	r9,r5
800086b8:	f0 04 09 48 	lsl	r8,r8,r4
800086bc:	08 16       	sub	r6,r4
800086be:	c0 b8       	rjmp	800086d4 <__avr32_f64_div_round_subnormal+0xe0>
800086c0:	f0 04 12 00 	clz	r4,r8
800086c4:	f9 b4 03 00 	movlo	r4,0
800086c8:	f7 b4 02 e0 	subhs	r4,-32
800086cc:	f0 04 09 49 	lsl	r9,r8,r4
800086d0:	30 08       	mov	r8,0
800086d2:	08 16       	sub	r6,r4
800086d4:	a3 88       	lsr	r8,0x2
800086d6:	f1 e9 11 e8 	or	r8,r8,r9<<0x1e
800086da:	a3 89       	lsr	r9,0x2
800086dc:	cf ca       	rjmp	800084d4 <__avr32_f64_div+0x40>

800086de <__avr32_f64_div_res_subnormal>:
800086de:	5c 37       	neg	r7
800086e0:	2f f7       	sub	r7,-1
800086e2:	f1 b7 04 c0 	satu	r7,0x6
800086e6:	e0 47 00 20 	cp.w	r7,32
800086ea:	c1 54       	brge	80008714 <__avr32_f64_div_res_subnormal+0x36>
800086ec:	ee 06 11 20 	rsub	r6,r7,32
800086f0:	e4 07 0a 42 	lsr	r2,r2,r7
800086f4:	e6 06 09 4c 	lsl	r12,r3,r6
800086f8:	18 42       	or	r2,r12
800086fa:	e6 07 0a 43 	lsr	r3,r3,r7
800086fe:	f4 06 09 41 	lsl	r1,r10,r6
80008702:	f4 07 0a 4a 	lsr	r10,r10,r7
80008706:	f6 06 09 4c 	lsl	r12,r11,r6
8000870a:	18 4a       	or	r10,r12
8000870c:	f6 07 0a 4b 	lsr	r11,r11,r7
80008710:	30 00       	mov	r0,0
80008712:	c1 58       	rjmp	8000873c <__avr32_f64_div_res_subnormal+0x5e>
80008714:	ee 06 11 20 	rsub	r6,r7,32
80008718:	f9 b0 00 00 	moveq	r0,0
8000871c:	f9 bc 00 00 	moveq	r12,0
80008720:	c0 50       	breq	8000872a <__avr32_f64_div_res_subnormal+0x4c>
80008722:	f4 06 09 40 	lsl	r0,r10,r6
80008726:	f6 06 09 4c 	lsl	r12,r11,r6
8000872a:	e6 07 0a 42 	lsr	r2,r3,r7
8000872e:	30 03       	mov	r3,0
80008730:	f4 07 0a 41 	lsr	r1,r10,r7
80008734:	18 41       	or	r1,r12
80008736:	f6 07 0a 4a 	lsr	r10,r11,r7
8000873a:	30 0b       	mov	r11,0
8000873c:	e0 12 ff 00 	andl	r2,0xff00
80008740:	e8 12 00 80 	orl	r2,0x80
80008744:	e6 08 06 46 	mulu.d	r6,r3,r8
80008748:	e4 09 07 46 	macu.d	r6,r2,r9
8000874c:	e4 08 06 44 	mulu.d	r4,r2,r8
80008750:	e6 09 06 48 	mulu.d	r8,r3,r9
80008754:	0c 05       	add	r5,r6
80008756:	f0 07 00 48 	adc	r8,r8,r7
8000875a:	5c 09       	acr	r9
8000875c:	30 07       	mov	r7,0
8000875e:	f9 d2 c1 01 	bfextu	r12,r2,0x8,0x1
80008762:	00 34       	cp.w	r4,r0
80008764:	e2 05 13 00 	cpc	r5,r1
80008768:	c4 6b       	rjmp	800085f4 <__avr32_f64_div_round_subnormal>
8000876a:	1c 9b       	mov	r11,lr
8000876c:	e6 1b 80 00 	andh	r11,0x8000,COH
80008770:	30 0a       	mov	r10,0
80008772:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80008776:	3f fb       	mov	r11,-1
80008778:	30 0a       	mov	r10,0
8000877a:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
8000877e:	f5 eb 10 04 	or	r4,r10,r11
80008782:	c0 90       	breq	80008794 <__avr32_f64_div_op1_zero>
80008784:	1c 9b       	mov	r11,lr
80008786:	e6 1b 80 00 	andh	r11,0x8000,COH
8000878a:	ea 1b 7f f0 	orh	r11,0x7ff0
8000878e:	30 0a       	mov	r10,0
80008790:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc

80008794 <__avr32_f64_div_op1_zero>:
80008794:	f1 e9 10 15 	or	r5,r8,r9<<0x1
80008798:	ce f0       	breq	80008776 <__avr32_f64_div_res_subnormal+0x98>
8000879a:	e9 d9 c2 8b 	bfextu	r4,r9,0x14,0xb
8000879e:	e0 44 07 ff 	cp.w	r4,2047
800087a2:	ce 41       	brne	8000876a <__avr32_f64_div_res_subnormal+0x8c>
800087a4:	f1 e9 10 c5 	or	r5,r8,r9<<0xc
800087a8:	ce 10       	breq	8000876a <__avr32_f64_div_res_subnormal+0x8c>
800087aa:	ce 6b       	rjmp	80008776 <__avr32_f64_div_res_subnormal+0x98>

800087ac <__avr32_umod64>:
800087ac:	d4 31       	pushm	r0-r7,lr
800087ae:	1a 97       	mov	r7,sp
800087b0:	20 2d       	sub	sp,8
800087b2:	10 9c       	mov	r12,r8
800087b4:	12 95       	mov	r5,r9
800087b6:	14 9e       	mov	lr,r10
800087b8:	16 93       	mov	r3,r11
800087ba:	16 96       	mov	r6,r11
800087bc:	58 09       	cp.w	r9,0
800087be:	c4 41       	brne	80008846 <__avr32_umod64+0x9a>
800087c0:	16 38       	cp.w	r8,r11
800087c2:	e0 88 00 5a 	brls	80008876 <__avr32_umod64+0xca>
800087c6:	f0 08 12 00 	clz	r8,r8
800087ca:	c0 d0       	breq	800087e4 <__avr32_umod64+0x38>
800087cc:	f6 08 09 46 	lsl	r6,r11,r8
800087d0:	f8 08 09 4c 	lsl	r12,r12,r8
800087d4:	f0 0b 11 20 	rsub	r11,r8,32
800087d8:	f4 08 09 4e 	lsl	lr,r10,r8
800087dc:	f4 0b 0a 4b 	lsr	r11,r10,r11
800087e0:	f7 e6 10 06 	or	r6,r11,r6
800087e4:	f8 0a 16 10 	lsr	r10,r12,0x10
800087e8:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
800087ec:	ec 0a 0d 02 	divu	r2,r6,r10
800087f0:	fc 09 16 10 	lsr	r9,lr,0x10
800087f4:	ea 02 02 4b 	mul	r11,r5,r2
800087f8:	f3 e3 11 09 	or	r9,r9,r3<<0x10
800087fc:	12 3b       	cp.w	r11,r9
800087fe:	e0 88 00 09 	brls	80008810 <__avr32_umod64+0x64>
80008802:	18 09       	add	r9,r12
80008804:	12 3c       	cp.w	r12,r9
80008806:	e0 8b 00 05 	brhi	80008810 <__avr32_umod64+0x64>
8000880a:	12 3b       	cp.w	r11,r9
8000880c:	f3 dc eb 09 	addhi	r9,r9,r12
80008810:	f2 0b 01 0b 	sub	r11,r9,r11
80008814:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
80008818:	f6 0a 0d 0a 	divu	r10,r11,r10
8000881c:	fd eb 11 0e 	or	lr,lr,r11<<0x10
80008820:	ea 0a 02 4a 	mul	r10,r5,r10
80008824:	1c 3a       	cp.w	r10,lr
80008826:	e0 88 00 09 	brls	80008838 <__avr32_umod64+0x8c>
8000882a:	18 0e       	add	lr,r12
8000882c:	1c 3c       	cp.w	r12,lr
8000882e:	e0 8b 00 05 	brhi	80008838 <__avr32_umod64+0x8c>
80008832:	1c 3a       	cp.w	r10,lr
80008834:	fd dc eb 0e 	addhi	lr,lr,r12
80008838:	fc 0a 01 0a 	sub	r10,lr,r10
8000883c:	30 0b       	mov	r11,0
8000883e:	f4 08 0a 4a 	lsr	r10,r10,r8
80008842:	2f ed       	sub	sp,-8
80008844:	d8 32       	popm	r0-r7,pc
80008846:	16 39       	cp.w	r9,r11
80008848:	fe 9b ff fd 	brhi	80008842 <__avr32_umod64+0x96>
8000884c:	f2 09 12 00 	clz	r9,r9
80008850:	c4 61       	brne	800088dc <__avr32_umod64+0x130>
80008852:	14 38       	cp.w	r8,r10
80008854:	5f 8b       	srls	r11
80008856:	06 35       	cp.w	r5,r3
80008858:	5f 3a       	srlo	r10
8000885a:	f7 ea 10 0a 	or	r10,r11,r10
8000885e:	f2 0a 18 00 	cp.b	r10,r9
80008862:	c0 60       	breq	8000886e <__avr32_umod64+0xc2>
80008864:	fc 08 01 0a 	sub	r10,lr,r8
80008868:	e6 05 01 46 	sbc	r6,r3,r5
8000886c:	14 9e       	mov	lr,r10
8000886e:	0c 9b       	mov	r11,r6
80008870:	1c 9a       	mov	r10,lr
80008872:	2f ed       	sub	sp,-8
80008874:	d8 32       	popm	r0-r7,pc
80008876:	58 08       	cp.w	r8,0
80008878:	c0 51       	brne	80008882 <__avr32_umod64+0xd6>
8000887a:	30 19       	mov	r9,1
8000887c:	f2 08 0d 08 	divu	r8,r9,r8
80008880:	10 9c       	mov	r12,r8
80008882:	f8 08 12 00 	clz	r8,r12
80008886:	e0 81 00 84 	brne	8000898e <__avr32_umod64+0x1e2>
8000888a:	ec 0c 01 0b 	sub	r11,r6,r12
8000888e:	f8 03 16 10 	lsr	r3,r12,0x10
80008892:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
80008896:	f6 03 0d 0a 	divu	r10,r11,r3
8000889a:	fc 09 16 10 	lsr	r9,lr,0x10
8000889e:	ea 0a 02 4a 	mul	r10,r5,r10
800088a2:	f3 eb 11 09 	or	r9,r9,r11<<0x10
800088a6:	12 3a       	cp.w	r10,r9
800088a8:	e0 88 00 09 	brls	800088ba <__avr32_umod64+0x10e>
800088ac:	18 09       	add	r9,r12
800088ae:	12 3c       	cp.w	r12,r9
800088b0:	e0 8b 00 05 	brhi	800088ba <__avr32_umod64+0x10e>
800088b4:	12 3a       	cp.w	r10,r9
800088b6:	f3 dc eb 09 	addhi	r9,r9,r12
800088ba:	14 19       	sub	r9,r10
800088bc:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
800088c0:	f2 03 0d 02 	divu	r2,r9,r3
800088c4:	fd e3 11 0e 	or	lr,lr,r3<<0x10
800088c8:	ea 02 02 4a 	mul	r10,r5,r2
800088cc:	1c 3a       	cp.w	r10,lr
800088ce:	fe 98 ff b5 	brls	80008838 <__avr32_umod64+0x8c>
800088d2:	18 0e       	add	lr,r12
800088d4:	1c 3c       	cp.w	r12,lr
800088d6:	fe 9b ff b1 	brhi	80008838 <__avr32_umod64+0x8c>
800088da:	ca cb       	rjmp	80008832 <__avr32_umod64+0x86>
800088dc:	f2 0e 11 20 	rsub	lr,r9,32
800088e0:	ea 09 09 45 	lsl	r5,r5,r9
800088e4:	f6 09 09 4b 	lsl	r11,r11,r9
800088e8:	e6 0e 0a 43 	lsr	r3,r3,lr
800088ec:	f0 09 09 41 	lsl	r1,r8,r9
800088f0:	f4 09 09 42 	lsl	r2,r10,r9
800088f4:	f0 0e 0a 48 	lsr	r8,r8,lr
800088f8:	f4 0e 0a 4a 	lsr	r10,r10,lr
800088fc:	0a 48       	or	r8,r5
800088fe:	16 4a       	or	r10,r11
80008900:	f0 06 16 10 	lsr	r6,r8,0x10
80008904:	f9 d8 c0 10 	bfextu	r12,r8,0x0,0x10
80008908:	e6 06 0d 04 	divu	r4,r3,r6
8000890c:	f4 03 16 10 	lsr	r3,r10,0x10
80008910:	08 9b       	mov	r11,r4
80008912:	e7 e5 11 03 	or	r3,r3,r5<<0x10
80008916:	e8 0c 02 45 	mul	r5,r4,r12
8000891a:	06 35       	cp.w	r5,r3
8000891c:	e0 88 00 07 	brls	8000892a <__avr32_umod64+0x17e>
80008920:	20 1b       	sub	r11,1
80008922:	10 03       	add	r3,r8
80008924:	06 38       	cp.w	r8,r3
80008926:	e0 88 00 72 	brls	80008a0a <__avr32_umod64+0x25e>
8000892a:	f5 da c0 10 	bfextu	r10,r10,0x0,0x10
8000892e:	0a 13       	sub	r3,r5
80008930:	e6 06 0d 04 	divu	r4,r3,r6
80008934:	f5 e5 11 06 	or	r6,r10,r5<<0x10
80008938:	e8 0c 02 4c 	mul	r12,r4,r12
8000893c:	08 9a       	mov	r10,r4
8000893e:	0c 3c       	cp.w	r12,r6
80008940:	e0 88 00 07 	brls	8000894e <__avr32_umod64+0x1a2>
80008944:	20 1a       	sub	r10,1
80008946:	10 06       	add	r6,r8
80008948:	0c 38       	cp.w	r8,r6
8000894a:	e0 88 00 5a 	brls	800089fe <__avr32_umod64+0x252>
8000894e:	f5 eb 11 0b 	or	r11,r10,r11<<0x10
80008952:	18 16       	sub	r6,r12
80008954:	f6 01 06 4a 	mulu.d	r10,r11,r1
80008958:	14 9c       	mov	r12,r10
8000895a:	16 36       	cp.w	r6,r11
8000895c:	c0 73       	brcs	8000896a <__avr32_umod64+0x1be>
8000895e:	5f 05       	sreq	r5
80008960:	14 32       	cp.w	r2,r10
80008962:	5f 3a       	srlo	r10
80008964:	eb ea 00 0a 	and	r10,r5,r10
80008968:	c0 60       	breq	80008974 <__avr32_umod64+0x1c8>
8000896a:	f8 01 01 04 	sub	r4,r12,r1
8000896e:	f6 08 01 4b 	sbc	r11,r11,r8
80008972:	08 9c       	mov	r12,r4
80008974:	e4 0c 01 0a 	sub	r10,r2,r12
80008978:	ec 0b 01 46 	sbc	r6,r6,r11
8000897c:	ec 09 0a 4b 	lsr	r11,r6,r9
80008980:	f4 09 0a 4a 	lsr	r10,r10,r9
80008984:	ec 0e 09 46 	lsl	r6,r6,lr
80008988:	0c 4a       	or	r10,r6
8000898a:	2f ed       	sub	sp,-8
8000898c:	d8 32       	popm	r0-r7,pc
8000898e:	f0 01 11 20 	rsub	r1,r8,32
80008992:	f4 01 0a 4b 	lsr	r11,r10,r1
80008996:	f8 08 09 4c 	lsl	r12,r12,r8
8000899a:	ec 08 09 49 	lsl	r9,r6,r8
8000899e:	ec 01 0a 41 	lsr	r1,r6,r1
800089a2:	f7 e9 10 09 	or	r9,r11,r9
800089a6:	f8 03 16 10 	lsr	r3,r12,0x10
800089aa:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
800089ae:	e2 03 0d 00 	divu	r0,r1,r3
800089b2:	f2 0b 16 10 	lsr	r11,r9,0x10
800089b6:	ea 00 02 4e 	mul	lr,r5,r0
800089ba:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
800089be:	16 3e       	cp.w	lr,r11
800089c0:	e0 88 00 06 	brls	800089cc <__avr32_umod64+0x220>
800089c4:	18 0b       	add	r11,r12
800089c6:	16 3c       	cp.w	r12,r11
800089c8:	e0 88 00 27 	brls	80008a16 <__avr32_umod64+0x26a>
800089cc:	f6 0e 01 01 	sub	r1,r11,lr
800089d0:	f3 d9 c0 10 	bfextu	r9,r9,0x0,0x10
800089d4:	e2 03 0d 00 	divu	r0,r1,r3
800089d8:	f3 e1 11 09 	or	r9,r9,r1<<0x10
800089dc:	ea 00 02 4b 	mul	r11,r5,r0
800089e0:	12 3b       	cp.w	r11,r9
800089e2:	e0 88 00 09 	brls	800089f4 <__avr32_umod64+0x248>
800089e6:	18 09       	add	r9,r12
800089e8:	12 3c       	cp.w	r12,r9
800089ea:	e0 8b 00 05 	brhi	800089f4 <__avr32_umod64+0x248>
800089ee:	12 3b       	cp.w	r11,r9
800089f0:	f3 dc eb 09 	addhi	r9,r9,r12
800089f4:	f2 0b 01 0b 	sub	r11,r9,r11
800089f8:	f4 08 09 4e 	lsl	lr,r10,r8
800089fc:	c4 db       	rjmp	80008896 <__avr32_umod64+0xea>
800089fe:	0c 3c       	cp.w	r12,r6
80008a00:	f7 ba 0b 01 	subhi	r10,1
80008a04:	ed d8 eb 06 	addhi	r6,r6,r8
80008a08:	ca 3b       	rjmp	8000894e <__avr32_umod64+0x1a2>
80008a0a:	06 35       	cp.w	r5,r3
80008a0c:	f7 bb 0b 01 	subhi	r11,1
80008a10:	e7 d8 eb 03 	addhi	r3,r3,r8
80008a14:	c8 bb       	rjmp	8000892a <__avr32_umod64+0x17e>
80008a16:	16 3e       	cp.w	lr,r11
80008a18:	f7 dc eb 0b 	addhi	r11,r11,r12
80008a1c:	cd 8b       	rjmp	800089cc <__avr32_umod64+0x220>

Disassembly of section .exception:

80008c00 <_evba>:
80008c00:	c0 08       	rjmp	80008c00 <_evba>
	...

80008c04 <_handle_TLB_Multiple_Hit>:
80008c04:	c0 08       	rjmp	80008c04 <_handle_TLB_Multiple_Hit>
	...

80008c08 <_handle_Bus_Error_Data_Fetch>:
80008c08:	c0 08       	rjmp	80008c08 <_handle_Bus_Error_Data_Fetch>
	...

80008c0c <_handle_Bus_Error_Instruction_Fetch>:
80008c0c:	c0 08       	rjmp	80008c0c <_handle_Bus_Error_Instruction_Fetch>
	...

80008c10 <_handle_NMI>:
80008c10:	c0 08       	rjmp	80008c10 <_handle_NMI>
	...

80008c14 <_handle_Instruction_Address>:
80008c14:	c0 08       	rjmp	80008c14 <_handle_Instruction_Address>
	...

80008c18 <_handle_ITLB_Protection>:
80008c18:	c0 08       	rjmp	80008c18 <_handle_ITLB_Protection>
	...

80008c1c <_handle_Breakpoint>:
80008c1c:	c0 08       	rjmp	80008c1c <_handle_Breakpoint>
	...

80008c20 <_handle_Illegal_Opcode>:
80008c20:	c0 08       	rjmp	80008c20 <_handle_Illegal_Opcode>
	...

80008c24 <_handle_Unimplemented_Instruction>:
80008c24:	c0 08       	rjmp	80008c24 <_handle_Unimplemented_Instruction>
	...

80008c28 <_handle_Privilege_Violation>:
80008c28:	c0 08       	rjmp	80008c28 <_handle_Privilege_Violation>
	...

80008c2c <_handle_Floating_Point>:
80008c2c:	c0 08       	rjmp	80008c2c <_handle_Floating_Point>
	...

80008c30 <_handle_Coprocessor_Absent>:
80008c30:	c0 08       	rjmp	80008c30 <_handle_Coprocessor_Absent>
	...

80008c34 <_handle_Data_Address_Read>:
80008c34:	c0 08       	rjmp	80008c34 <_handle_Data_Address_Read>
	...

80008c38 <_handle_Data_Address_Write>:
80008c38:	c0 08       	rjmp	80008c38 <_handle_Data_Address_Write>
	...

80008c3c <_handle_DTLB_Protection_Read>:
80008c3c:	c0 08       	rjmp	80008c3c <_handle_DTLB_Protection_Read>
	...

80008c40 <_handle_DTLB_Protection_Write>:
80008c40:	c0 08       	rjmp	80008c40 <_handle_DTLB_Protection_Write>
	...

80008c44 <_handle_DTLB_Modified>:
80008c44:	c0 08       	rjmp	80008c44 <_handle_DTLB_Modified>
	...

80008c50 <_handle_ITLB_Miss>:
80008c50:	c0 08       	rjmp	80008c50 <_handle_ITLB_Miss>
	...

80008c60 <_handle_DTLB_Miss_Read>:
80008c60:	c0 08       	rjmp	80008c60 <_handle_DTLB_Miss_Read>
	...

80008c70 <_handle_DTLB_Miss_Write>:
80008c70:	c0 08       	rjmp	80008c70 <_handle_DTLB_Miss_Write>
	...

80008d00 <_handle_Supervisor_Call>:
80008d00:	c0 08       	rjmp	80008d00 <_handle_Supervisor_Call>
80008d02:	d7 03       	nop

80008d04 <_int0>:
80008d04:	30 0c       	mov	r12,0
80008d06:	fe b0 cb 35 	rcall	80002370 <_get_interrupt_handler>
80008d0a:	58 0c       	cp.w	r12,0
80008d0c:	f8 0f 17 10 	movne	pc,r12
80008d10:	d6 03       	rete

80008d12 <_int1>:
80008d12:	30 1c       	mov	r12,1
80008d14:	fe b0 cb 2e 	rcall	80002370 <_get_interrupt_handler>
80008d18:	58 0c       	cp.w	r12,0
80008d1a:	f8 0f 17 10 	movne	pc,r12
80008d1e:	d6 03       	rete

80008d20 <_int2>:
80008d20:	30 2c       	mov	r12,2
80008d22:	fe b0 cb 27 	rcall	80002370 <_get_interrupt_handler>
80008d26:	58 0c       	cp.w	r12,0
80008d28:	f8 0f 17 10 	movne	pc,r12
80008d2c:	d6 03       	rete

80008d2e <_int3>:
80008d2e:	30 3c       	mov	r12,3
80008d30:	fe b0 cb 20 	rcall	80002370 <_get_interrupt_handler>
80008d34:	58 0c       	cp.w	r12,0
80008d36:	f8 0f 17 10 	movne	pc,r12
80008d3a:	d6 03       	rete
80008d3c:	d7 03       	nop
80008d3e:	d7 03       	nop
80008d40:	d7 03       	nop
80008d42:	d7 03       	nop
80008d44:	d7 03       	nop
80008d46:	d7 03       	nop
80008d48:	d7 03       	nop
80008d4a:	d7 03       	nop
80008d4c:	d7 03       	nop
80008d4e:	d7 03       	nop
80008d50:	d7 03       	nop
80008d52:	d7 03       	nop
80008d54:	d7 03       	nop
80008d56:	d7 03       	nop
80008d58:	d7 03       	nop
80008d5a:	d7 03       	nop
80008d5c:	d7 03       	nop
80008d5e:	d7 03       	nop
80008d60:	d7 03       	nop
80008d62:	d7 03       	nop
80008d64:	d7 03       	nop
80008d66:	d7 03       	nop
80008d68:	d7 03       	nop
80008d6a:	d7 03       	nop
80008d6c:	d7 03       	nop
80008d6e:	d7 03       	nop
80008d70:	d7 03       	nop
80008d72:	d7 03       	nop
80008d74:	d7 03       	nop
80008d76:	d7 03       	nop
80008d78:	d7 03       	nop
80008d7a:	d7 03       	nop
80008d7c:	d7 03       	nop
80008d7e:	d7 03       	nop
80008d80:	d7 03       	nop
80008d82:	d7 03       	nop
80008d84:	d7 03       	nop
80008d86:	d7 03       	nop
80008d88:	d7 03       	nop
80008d8a:	d7 03       	nop
80008d8c:	d7 03       	nop
80008d8e:	d7 03       	nop
80008d90:	d7 03       	nop
80008d92:	d7 03       	nop
80008d94:	d7 03       	nop
80008d96:	d7 03       	nop
80008d98:	d7 03       	nop
80008d9a:	d7 03       	nop
80008d9c:	d7 03       	nop
80008d9e:	d7 03       	nop
80008da0:	d7 03       	nop
80008da2:	d7 03       	nop
80008da4:	d7 03       	nop
80008da6:	d7 03       	nop
80008da8:	d7 03       	nop
80008daa:	d7 03       	nop
80008dac:	d7 03       	nop
80008dae:	d7 03       	nop
80008db0:	d7 03       	nop
80008db2:	d7 03       	nop
80008db4:	d7 03       	nop
80008db6:	d7 03       	nop
80008db8:	d7 03       	nop
80008dba:	d7 03       	nop
80008dbc:	d7 03       	nop
80008dbe:	d7 03       	nop
80008dc0:	d7 03       	nop
80008dc2:	d7 03       	nop
80008dc4:	d7 03       	nop
80008dc6:	d7 03       	nop
80008dc8:	d7 03       	nop
80008dca:	d7 03       	nop
80008dcc:	d7 03       	nop
80008dce:	d7 03       	nop
80008dd0:	d7 03       	nop
80008dd2:	d7 03       	nop
80008dd4:	d7 03       	nop
80008dd6:	d7 03       	nop
80008dd8:	d7 03       	nop
80008dda:	d7 03       	nop
80008ddc:	d7 03       	nop
80008dde:	d7 03       	nop
80008de0:	d7 03       	nop
80008de2:	d7 03       	nop
80008de4:	d7 03       	nop
80008de6:	d7 03       	nop
80008de8:	d7 03       	nop
80008dea:	d7 03       	nop
80008dec:	d7 03       	nop
80008dee:	d7 03       	nop
80008df0:	d7 03       	nop
80008df2:	d7 03       	nop
80008df4:	d7 03       	nop
80008df6:	d7 03       	nop
80008df8:	d7 03       	nop
80008dfa:	d7 03       	nop
80008dfc:	d7 03       	nop
80008dfe:	d7 03       	nop
